{"version":3,"sources":["Pages/student.png","Pages/instructor.png","Pages/SignUpForm.js","Pages/SignInForm.js","Pages/Homepage.js","Pages/InstructorHome.js","Pages/CreateExam.js","Pages/FromExisting.js","Pages/ViewExams.js","Pages/ViewEdit.js","Pages/ViewGrade.js","Pages/EditMCQ.js","Pages/EditTF.js","Pages/EditComplete.js","Pages/EditEssay.js","Pages/TakeMCQ.js","Pages/TakeEssay.js","Pages/TakeTF.js","Pages/TakeComplete.js","Pages/TakeExam.js","Pages/StudentHome.js","Pages/StudentAsk.js","Pages/StudentExams.js","Pages/ExamMCQ.js","Pages/ExamEssay.js","Pages/ExamTF.js","Pages/ExamComplete.js","Pages/Exam.js","Pages/ViewEditMCQ.js","Pages/ViewEditEssay.js","Pages/ViewEditTF.js","Pages/ViewEditComplete.js","Pages/ViewEditExam.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SignUpForm","props","state","value","SignUpResult","Identity","UserName","Name","Password","fetch","then","response","json","this","setState","SignIn","params","URLSearchParams","window","location","hash","split","get","Authenticate","document","getElementById","style","display","alert","instructor_in","instructor","toString","student_in","student","name","href1","class","id","Modal","Dialog","Header","Title","Body","Footer","Button","variant","onClick","event","href","className","type","placeholder","defaultValue","SignUpStudentInstructor","Component","SignInForm","SignInResult","route","instructor_up","student_up","SignInStudentInstructor","Homepage","Container","Row","justifyContent","Col","flexGrow","Card","bg","width","Img","src","require","textAlign","Text","size","InstructorHome","handleCreate","CreateExam","answer","MCQreturn","Completereturn","TFreturn","Essayreturn","finished","ExamTitleBOX","ExamMCQCounter","ExamMCQQuestions","ExamMCQChoices","ExamComplete","ExamTF","ExamEssay","handleChange","bind","handleSubmit","target","ExamTitle","InstructorID","Question","Answers","CorrectAns","Grade","ILO","handleFinishQuestion","data","MCQReturn","Question1","Question2","Answer","CompleteReturn","TFReturn","EssayReturn","ChoiceCounter","x","createElement","setAttribute","innerHTML","appendChild","y","innerText","z","removeChild","push","i","textContent","reset","$","empty","FinishQuestionAlert","Alert","key","hideAlert","float","handleFinishExam","Form","Group","controlId","Control","handleConfirm","height","backgroundColor","overflow","Label","as","margin","onChange","hidden","handleAddChoice","handleDeleteChoice","SubmitMCQ","SubmitComplete","SubmitTrueFalse","SubmitEssay","FromExisting","Mixreturn","QuestionList","CounterList","AnswerList","CorrectAnswerList","ILOList","GradeList","GetILO","ILO_List","QuestionType","Number","MixQues","closeButton","handleTopic","map","fbb","handleType","required","MixQuestion","ViewExams","Exams","ans","names","nameslist","ListGroup","Item","action","ViewEdit","Deleted","reload","disabled","DeleteExam","ViewGrade","Grades","GetExams","GradeExam","console","log","EditMCQ","CorrectAnswer","IsUpdated","OldQuestion","Autofill","exam","question","NewQuestion","NewAnswers","NewCorrectAns","NewILO","NewGrade","Updated","GetMCQInfo","UpdateMCQ","EditTF","GetTFInfo","UpdateTrueFalse","EditComplete","OldQuestion1","OldQuestion2","NewQuestion1","NewQuestion2","GetCompleteInfo","UpdateComplete","EditEssay","GetEssayInfo","UpdateEssay","TakeMCQ","GetMCQ","MCQQuestions","MCQAnswers","examname","passedname","ansGroup","length","val","r","MCQHead","choicesNumber","choice","index","TakeEssay","GetEssay","EssayQuestions","EssayAnswers","EssayCount","EssayHead","Essay","answerid","TakeTF","GetTF","TFQuestions","TFAnswers","TFHead","TF","paddingRight","TakeComplete","GetComplete","CompleteQuestions","CompleteAnswers","CompleteCount","CompleteHead","Complete","TakeExam","Submit","StudentID","MCQList","CompleteList","TFList","EssayList","successful","handleSubmitAnswers","SubmitStudentExam","StudentHome","StudentAsk","StudentExams","ExamMCQ","inline","Exam","ViewEditMCQ","MCQCounter","MCQChoices","DeleteMCQ","ViewEditEssay","DeleteEssay","ViewEditTF","DeleteTF","ViewEditComplete","DeleteComplete","ViewEditExam","App","basename","fixed","Navbar","Brand","Nav","Link","FormControl","exact","path","component","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"js/main.e8f7f4fe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"media/student.d3b74d64.png\";","module.exports = __webpack_public_path__ + \"media/instructor.9bef3f3f.png\";","import React, { Component } from 'react';\r\nimport { HashRouter as Router, Route, Link, NavLink } from 'react-router-dom';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\n\r\nclass SignUpForm extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {value: '', SignUpResult:null};\r\n\r\n    }\r\n\r\n    async Authenticate(Identity, UserName, Name, Password)\r\n    {\r\n      const response = await fetch('/SignUpStudentInstructor/'+Identity+'/'+UserName+'/'+Name+'/'+Password).then(response => response.json());\r\n      this.setState({SignUpResult:response.SignIn});\r\n    }\r\n    async SignUpStudentInstructor(UserName, Name, Password)\r\n    {\r\n      var Identity = 0\r\n      const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n      if(params.get('student'))\r\n      {\r\n        Identity='student'\r\n      }\r\n      else if (params.get('instructor'))\r\n      {\r\n        Identity='instructor'\r\n      }\r\n      await this.Authenticate(Identity, UserName, Name, Password)\r\n      if (this.state.SignUpResult == \"Added successfully\")\r\n      {\r\n        document.getElementById('SignupFinish').style.display='block';\r\n      }\r\n      else if (this.state.SignUpResult == \"Error\")\r\n      {\r\n        alert(\"Unsuccessful process, please try again. \")\r\n      }\r\n      \r\n    }\r\n\r\n\r\n    render() {\r\n      const instructor=\"instructor\";\r\n      const student=\"student\";\r\n      const instructor_in = `/#/sign-in?${new URLSearchParams({instructor}).toString()}`;\r\n      const student_in = `/#/sign-in?${new URLSearchParams({student}).toString()}`;\r\n      const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n      var name = \"\";\r\n      if(params.get('student'))\r\n      {\r\n        name=params.get('student')\r\n        \r\n      }\r\n      else if (params.get('instructor'))\r\n      {\r\n        name=params.get('instructor')\r\n        \r\n      }\r\n      var href1=\"\";\r\n      if (name==\"student\")\r\n      {\r\n        href1=student_in;\r\n      }\r\n      else if (name==\"instructor\")\r\n      {\r\n        href1=instructor_in\r\n      }\r\n      else\r\n      {\r\n        href1=\"#/sign-in\";\r\n      }\r\n        return (\r\n          <div>\r\n\r\n            <div style={{display:'none'}} class=\"modal-custom\" id=\"SignupFinish\">\r\n            <Modal.Dialog  >\r\n                <Modal.Header >\r\n                <Modal.Title>Sign Up Process</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                  Welcome {window.Name}, you have successfully signed up, now please login with your credentials\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button variant=\"primary\" onClick={event =>  window.location.href='#/'} >Ok</Button>\r\n              </Modal.Footer>\r\n            </Modal.Dialog>\r\n            </div>\r\n\r\n\r\n            <form className=\"signin-forum-container\">\r\n              <h1>Sign Up</h1><br />\r\n              <input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Name\" /><br />\r\n              <input type=\"text\" name=\"username\" id=\"username\" placeholder=\"User Name [must be unique]\" /><br />\r\n              <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" /><br />\r\n              \r\n              <input type=\"submit\" defaultValue=\"Sign Up\" \r\n              onClick={()=>{this.SignUpStudentInstructor(document.getElementById('username').value, document.getElementById('name').value,\r\n              document.getElementById('password').value)}} /><br />\r\n              <a href={href1}>Already a member? Sign in now!</a>\r\n            </form>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignUpForm;\r\n","import React, { Component } from 'react';\r\nimport { HashRouter as Router, Route, Link, NavLink } from 'react-router-dom';\r\nimport './signin.css';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nclass SignInForm extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {value: '', SignInResult:null};\r\n\r\n    }\r\n\r\n    async Authenticate(Identity, UserName, Password)\r\n    {\r\n      const response = await fetch('/SignInStudentInstructor/'+Identity+'/'+UserName+'/'+Password).then(response => response.json());\r\n      this.setState({SignInResult:response.SignIn});\r\n    }\r\n    async SignInStudentInstructor(UserName, Password)\r\n    {\r\n      window.Name=UserName;\r\n      var Identity = 0\r\n      const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n      if(params.get('student'))\r\n      {\r\n        Identity='student'\r\n      }\r\n      else if (params.get('instructor'))\r\n      {\r\n        Identity='instructor'\r\n      }\r\n      await this.Authenticate(Identity, UserName, Password)\r\n      if (this.state.SignInResult == \"Found\")\r\n      {\r\n        document.getElementById('SigninFinish').style.display='block';\r\n        \r\n      }\r\n      else if (this.state.SignInResult == \"Error\")\r\n      {\r\n        alert(\"Invalid credentials\")\r\n      }\r\n      \r\n      \r\n    }\r\n\r\n    RouteAfterSignIn()\r\n    {\r\n\r\n    }\r\n    render() {\r\n      const instructor=\"instructor\";\r\n      const student=\"student\";\r\n      const instructor_up = `/#/sign-up?${new URLSearchParams({instructor}).toString()}`;\r\n      const student_up = `/#/sign-up?${new URLSearchParams({student}).toString()}`;\r\n      const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n      var name = \"\";\r\n      var route;\r\n      if(params.get('student'))\r\n      {\r\n        name=params.get('student')\r\n        route = '#/student-home'\r\n      }\r\n      else if (params.get('instructor'))\r\n      {\r\n        name=params.get('instructor')\r\n        route = '#/instructor-home'\r\n        \r\n      }\r\n      var href1=\"\";\r\n      if (name==\"student\")\r\n      {\r\n        href1=student_up;\r\n      }\r\n      else if (name==\"instructor\")\r\n      {\r\n        href1=instructor_up\r\n      }\r\n      else\r\n      {\r\n        href1=\"#/sign-up\";\r\n      }\r\n        return (\r\n          <div>\r\n            <div style={{display:'none'}} class=\"modal-custom\" id=\"SigninFinish\">\r\n            <Modal.Dialog  >\r\n                <Modal.Header >\r\n                <Modal.Title>Authentication</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                  Welcome {window.Name} you have been successfully authenticated\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button variant=\"primary\" onClick={event =>  window.location.href={route}} >Ok</Button>\r\n              </Modal.Footer>\r\n            </Modal.Dialog>\r\n            </div>\r\n            <form className=\"signin-forum-container\" >\r\n            <h1>Sign In</h1><br />\r\n            <input type=\"text\" name=\"username\" id=\"username\" placeholder=\"User Name\" /><br />\r\n            <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" /><br />\r\n            <a href=\"#\">Forgot Your Password?</a><br />\r\n            <input type=\"submit\" defaultValue=\"Sign In\" \r\n            onClick={()=>{this.SignInStudentInstructor(document.getElementById('username').value, document.getElementById('password').value)}} /><br />\r\n            <a href={href1}>Not a member? Sign up now!</a>\r\n          </form>\r\n          </div>\r\n          \r\n        );\r\n    }\r\n}\r\n\r\nexport default SignInForm;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './homestyle.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nclass Homepage extends Component {\r\n  \r\n    render() {\r\n        const instructor=\"instructor\";\r\n        const student=\"student\";\r\n        const instructor_up = `/#/sign-up?${new URLSearchParams({instructor}).toString()}`;\r\n        const student_up = `/#/sign-up?${new URLSearchParams({student}).toString()}`;\r\n        const instructor_in = `/#/sign-in?${new URLSearchParams({instructor}).toString()}`;\r\n        const student_in = `/#/sign-in?${new URLSearchParams({student}).toString()}`;\r\n        return (\r\n        <div>\r\n <h1>Welcome to Exam Solver and Evaluator</h1>\r\n           <br />\r\n           <Container>\r\n            <Row style={{ justifyContent:'space-evenly'}}>\r\n                <Col style={{flexGrow:'unset'}}  >\r\n                <Card bg=\"light\" style={{ width: '13rem' }}>\r\n            <Card.Img variant=\"top\" src={require('./student.png')} />\r\n            <Card.Body style={{ textAlign:'center'}}>\r\n                <Card.Title>I'm a Student</Card.Title>\r\n                <Card.Text>\r\n                Now you can Get Question's Answers and Take Exams with One Click\r\n                </Card.Text>\r\n                \r\n                <Button href={student_up} size=\"lg\" variant=\"success\">Join Now!</Button>\r\n                <Button href={student_in} size=\"lg\" variant=\"primary\">Sign in!</Button>\r\n            </Card.Body>\r\n            </Card></Col>\r\n                <Col style={{flexGrow:'unset'}} ><Card bg=\"light\" style={{ width: '13rem' }}>\r\n            <Card.Img variant=\"top\" src={require('./instructor.png')} />\r\n            <Card.Body style={{ textAlign:'center'}}>\r\n                <Card.Title>I'm an Instructor</Card.Title>\r\n                <Card.Text>\r\n                Now you Form your Exam and Evaluate it with One Click\r\n                </Card.Text>\r\n                <Button href={instructor_up} size=\"lg\" variant=\"danger\">Join Now!</Button>\r\n                <Button href={instructor_in} size=\"lg\" variant=\"primary\">Sign in!</Button>\r\n            </Card.Body>\r\n            </Card></Col>\r\n            </Row>\r\n\r\n        </Container>\r\n        \r\n        \r\n\r\n            \r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Homepage;\r\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './InstructorHome.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nclass InstructorHome extends Component {\nhandleCreate()\n{\n    if (document.getElementById('BtnNew').style.display=='block'||document.getElementById('BtnExist').style.display=='block')\n    {\n        document.getElementById('BtnNew').style.display='none';\n        document.getElementById('BtnExist').style.display='none';\n    }\n    else\n    {\n        document.getElementById('BtnNew').style.display='block';\n        document.getElementById('BtnExist').style.display='block';\n    }\n}\n    render() {\n        return (\n        <div>\n          \n          <h1>Welcome Dr. Magda Fayek</h1>\n    <br />\n    <Container>\n     <Row style={{ justifyContent:'space-evenly'}}>\n         <Col ><Button onClick={this.handleCreate} size=\"lg\"variant=\"primary\">Create Exam</Button></Col>\n        <Col  ><Button href=\"#/instructor-view-all\" size=\"lg\" variant=\"primary\">View Exams</Button></Col>\n         <Col  ><Button href=\"#/instructor-view-edit\" size=\"lg\"variant=\"primary\">Edit Exam</Button></Col>\n         <Col  ><Button href=\"#/instructor-view-grade\" size=\"lg\"variant=\"primary\">Grade Exam</Button></Col>\n     </Row>\n     <Row style={{width:'17%'}}>\n        \n         <Col ><Button id=\"BtnNew\"style={{display:'none'}} href=\"#/instructor-create\" size=\"sm\"variant=\"primary\">New Exam</Button></Col>\n       \n     </Row>\n     <Row style={{width:'17%'}}>\n        \n        <Col ><Button id=\"BtnExist\" style={{display:'none'}} href=\"#/instructor-from-exist\" size=\"sm\"variant=\"primary\">From Existing Exams</Button></Col>\n    </Row>\n\n\n </Container>\n            \n          </div>\n        );\n    }\n}\n\nexport default InstructorHome;\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\nimport './CreateExam.css';\r\nimport './Popup.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport $ from 'jquery'; \r\nimport Alert from 'react-bootstrap/Alert'\r\nimport Overlay from 'react-bootstrap/Overlay'\r\nimport Popover from 'react-bootstrap/Popover'\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\n\r\nclass CreateExam extends Component {\r\n  \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '',answer:null, MCQreturn:null,Completereturn:null, TFreturn:null, Essayreturn:null,finished:false};\r\n        window.ExamTitleBOX=[];\r\n        window.ExamMCQCounter=[];\r\n        window.ExamMCQQuestions=[];\r\n        window.ExamMCQChoices=[];\r\n        window.ExamComplete=[];\r\n        window.ExamTF=[];\r\n        window.ExamEssay=[];\r\n   \r\n        \r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n  \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n      }\r\n      handleChange (event) {\r\n        this.setState({value: event.target.value});\r\n      }\r\n      SubmitMCQ(ExamTitle,InstructorID,Question,Answers,CorrectAns,Grade,ILO)\r\n      {\r\n        this.handleFinishQuestion()\r\n        // console.log(\"Question\",question)\r\n        fetch('/AddMCQ/'+ExamTitle+'/'+InstructorID+'/'+Question+'/'+Answers+'/'+CorrectAns+'/'+Grade+'/'+ILO)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({MCQreturn : data.MCQReturn}));\r\n      }\r\n     \r\n      SubmitComplete(ExamTitle,InstructorID,Question1,Question2,Answer,Grade,ILO)\r\n      {\r\n        this.handleFinishQuestion()\r\n        // console.log(\"Question\",question)\r\n        fetch('/AddComplete/'+ExamTitle+'/'+InstructorID+'/'+Question1+'/'+Question2+'/'+Answer+'/'+Grade+'/'+ILO)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({Completereturn : data.CompleteReturn}));\r\n      }\r\n\r\n      SubmitTrueFalse(ExamTitle, InstructorID, Question,Answer,Grade,ILO)\r\n      {\r\n        this.handleFinishQuestion()\r\n        // console.log(\"Question\",question)\r\n        fetch('/AddTrueFalse/'+ExamTitle+'/'+InstructorID+'/'+Question+'/'+Answer+'/'+Grade+'/'+ILO)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({TFreturn : data.TFReturn}));\r\n      }\r\n\r\n      SubmitEssay(ExamTitle, InstructorID, Question,Answer,Grade,ILO)\r\n      {\r\n        this.handleFinishQuestion()\r\n        // console.log(\"Question\",question)\r\n        fetch('/AddEssay/'+ExamTitle+'/'+InstructorID+'/'+Question+'/'+Answer+'/'+Grade+'/'+ILO)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({Essayreturn : data.EssayReturn}));\r\n      }\r\n\r\n      handleSubmit(event)\r\n      {\r\n        this.setState({finished: false});\r\n        if (this.state.value=='MCQ')\r\n        {\r\n            document.getElementById('formExamMCQ').style.display='block';\r\n            document.getElementById('formExamComplete').style.display='none';\r\n            document.getElementById('formExamTF').style.display='none';\r\n            document.getElementById('formExamEssay').style.display='none';\r\n           \r\n            window.ChoiceCounter=0;\r\n            \r\n        }\r\n      else  if (this.state.value=='Complete')\r\n        {\r\n            document.getElementById('formExamComplete').style.display='block';\r\n            document.getElementById('formExamMCQ').style.display='none';\r\n            document.getElementById('formExamTF').style.display='none';\r\n            document.getElementById('formExamEssay').style.display='none';\r\n         \r\n        }\r\n       else if (this.state.value=='T and F')\r\n        {\r\n          document.getElementById('formExamTF').style.display='block';\r\n            document.getElementById('formExamComplete').style.display='none';\r\n            document.getElementById('formExamMCQ').style.display='none';\r\n            document.getElementById('formExamEssay').style.display='none';\r\n           \r\n        }\r\n       else if (this.state.value=='Essay Question')\r\n        {\r\n          document.getElementById('formExamEssay').style.display='block';\r\n          document.getElementById('formExamTF').style.display='none';\r\n            document.getElementById('formExamComplete').style.display='none';\r\n            document.getElementById('formExamMCQ').style.display='none';\r\n          \r\n        }\r\n        else\r\n        {\r\n          document.getElementById('formExamMCQ').style.display='none';\r\n          document.getElementById('formExamComplete').style.display='none';\r\n          document.getElementById('formExamTF').style.display='none';\r\n          document.getElementById('formExamEssay').style.display='none';\r\n        \r\n        }\r\n           \r\n      }\r\n      handleAddChoice()\r\n      { \r\n        \r\n        var x = document.createElement(\"div\");\r\n        x.setAttribute(\"class\", \"form-check form-check-inline\");\r\n        x.setAttribute(\"id\",\"choice\"+window.ChoiceCounter);\r\n        x.innerHTML='<input type=\"radio\" disabled class=\"form-check-input\">'+\r\n        '<label title for=\"formExamMCQ\" id= \"'+\"choice\"+window.ChoiceCounter+'\" class=\"form-check-label\">'+ document.getElementById('formChoiceTextbox').value+'</label>';\r\n        document.getElementById('ChoicesDiv').appendChild(x);\r\n        \r\n        var y=document.createElement(\"option\");\r\n        y.innerText=document.getElementById('formChoiceTextbox').value;\r\n        y.setAttribute(\"id\",\"option\"+window.ChoiceCounter);\r\n        document.getElementById('ChoiceModelAns').appendChild(y);\r\n        document.getElementById('formChoiceTextbox').value='';\r\n        window.ChoiceCounter++;\r\n      }\r\n      handleDeleteChoice()\r\n      {\r\n        window.ChoiceCounter--;\r\n        var y=document.getElementById('choice'+window.ChoiceCounter);\r\n        var z=document.getElementById('option'+window.ChoiceCounter);\r\n        document.getElementById('ChoicesDiv').removeChild(y);\r\n        document.getElementById('ChoiceModelAns').removeChild(z);\r\n      }\r\n\r\n      handleFinishQuestion()\r\n      {\r\n        if (document.getElementById('QuestionType').value=='MCQ')\r\n        {\r\n          window.ExamMCQQuestions.push(document.getElementById('TextMCQuestion').value);\r\n          window.ExamMCQCounter.push(window.ChoiceCounter);\r\n          for(var i=0;i<window.ChoiceCounter;i++)\r\n          {\r\n            \r\n            window.ExamMCQChoices.push(document.getElementById('choice'+i).textContent)\r\n          }\r\n\r\n\r\n        }\r\n        if (document.getElementById('QuestionType').value=='Complete')\r\n        {\r\n          \r\n\r\n          window.ExamComplete.push(document.getElementById('TextComplete1').value)\r\n          window.ExamComplete.push(document.getElementById('TextComplete2').value)\r\n      \r\n        }\r\n        if (document.getElementById('QuestionType').value=='T and F')\r\n        {\r\n          window.ExamTF.push(document.getElementById('TextTF').value)\r\n        }\r\n        if (document.getElementById('QuestionType').value=='Essay Question')\r\n        {\r\n          window.ExamEssay.push(document.getElementById('TextEssay').value)\r\n        }\r\n        document.getElementById(\"ExamForm\").reset();\r\n        $(\"#ChoiceModelAns\").empty();\r\n        $(\"#ChoicesDiv\").empty();\r\n        var y=document.createElement(\"option\");\r\n        y.innerText=\"Choose Model Answer\"\r\n        document.getElementById('ChoiceModelAns').appendChild(y);\r\n        document.getElementById('formExamMCQ').style.display='none';\r\n          document.getElementById('formExamComplete').style.display='none';\r\n          document.getElementById('formExamTF').style.display='none';\r\n          document.getElementById('formExamEssay').style.display='none';\r\n    \r\n          this.setState({finished: true});\r\n         \r\n      }\r\n     \r\n      handleFinishExam()\r\n      {\r\n        \r\n        window.ExamTitle.push(document.getElementById('TextExamTitle').value);\r\n        document.getElementById('ExamFinishBox').style.display='block';\r\n        \r\n      }\r\n      handleConfirm()\r\n      {\r\n          \r\n          if (document.getElementById('TextExamTitle').value==\"\")\r\n          {\r\n              alert(\"You Must Enter an Exam Title First !\")\r\n          }\r\n          else\r\n          {\r\n              window.ExamTitleBOX=document.getElementById('TextExamTitle').value\r\n              document.getElementById('ExamtitleBox').style.display='none';\r\n          }\r\n          \r\n      }\r\n      hideAlert(){\r\n        document.getElementById(\"FinishQuestionAlert\").style.display=\"none\";\r\n      }\r\n    render() {\r\n      var FinishQuestionAlert = \"\";\r\n      if (this.state.finished==true)\r\n      {\r\n        FinishQuestionAlert = <div id=\"FinishQuestionAlert\"> <Alert  key=\"FinishQuestionAlert\" variant='success'>Successfully Added Question to Exam<div className=\"d-flex justify-content-end\">\r\n        <Button onClick={this.hideAlert} variant=\"outline-success\">\r\n          Close \r\n        </Button>\r\n        </div></Alert>\r\n        <Button style={{ float:'right'}}onClick={this.handleFinishExam}   variant=\"success\" >Finish Exam</Button>\r\n        </div>;\r\n        \r\n      }\r\n      else\r\n      {\r\n        FinishQuestionAlert =\"\";\r\n      }\r\n        return (\r\n        <div>\r\n          <div style={{display:'none'}} class=\"modal-custom\" id=\"ExamFinishBox\">\r\n          <Modal.Dialog  >\r\n              <Modal.Header >\r\n              <Modal.Title>Exam Alert</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                Exam \"{window.ExamTitleBOX}\" Created Successfully\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"primary\" onClick={event =>  window.location.href='#/instructor-home'} >Ok</Button>\r\n            </Modal.Footer>\r\n          </Modal.Dialog>\r\n          </div>\r\n          <div class=\"modal-custom\" id=\"ExamtitleBox\">\r\n          <Modal.Dialog  >\r\n              <Modal.Header >\r\n              <Modal.Title>Exam title</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <Form.Group controlId=\"formExamTitle\">\r\n                <Form.Control type=\"text\" id='TextExamTitle' placeholder=\"Enter Exam Title\" />\r\n                <Form.Text className=\"text-muted\">\r\n                Ex: Marketing Midterm Spring 2020\r\n                </Form.Text>\r\n                </Form.Group>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"primary\" onClick={this.handleConfirm} >Confirm</Button>\r\n            </Modal.Footer>\r\n          </Modal.Dialog>\r\n          </div>\r\n              \r\n    <Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\r\n        <br />\r\n    <Form id=\"ExamForm\" style={{backgroundColor:'white'}}>\r\n  <Form.Group controlId=\"formQuestionType\">\r\n    <Form.Label>Question Type</Form.Label>\r\n    <Row>\r\n    <Form.Control id=\"QuestionType\" as=\"select\" style={{width:'35%',margin: '15px 15px 15px 15px'}} value={this.state.value} onChange={this.handleChange} placeholder=\"Choose Question Type\">\r\n    <option>Choose Question Type</option>\r\n    <option>MCQ</option>\r\n    <option>Complete</option>\r\n    <option>T and F</option>\r\n    <option>Essay Question</option>\r\n    <option hidden>Comparison</option>\r\n    </Form.Control>\r\n    <Button variant=\"primary\" id=\"QuestionTypeBtn\" onClick={this.handleSubmit} type=\"submit\">Submit</Button>\r\n   \r\n\r\n    </Row>\r\n    <Form.Text className=\"text-muted\">\r\n      Note: You can change Question Type at anytime from above\r\n    </Form.Text>\r\n\r\n    {FinishQuestionAlert}\r\n\r\n  </Form.Group>\r\n  \r\n  <Form.Group  style={{display:'none'}} id=\"formExamMCQ\" controlId=\"formExamMCQ\">\r\n \r\n    <Form.Label>Multiple Choice Question</Form.Label>\r\n    <Row>\r\n    <Form.Control id=\"MCQILO\"  size=\"sm\" type=\"text\" style={{width:'50%',margin: '15px 15px 15px 15px'}} placeholder=\"Enter Question ILO\"></Form.Control>\r\n  <Form.Control   id=\"MCQGrade\" size=\"sm\" style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\" placeholder=\"Enter Your Grade\" />\r\n   \r\n   </Row>\r\n    <Form.Control size=\"sm\" id=\"TextMCQuestion\" type=\"text\" placeholder=\"Enter Your Question\" />\r\n    <br />\r\n    <Form.Control  size=\"sm\" id=\"formChoiceTextbox\" type=\"text\" placeholder=\"Enter a Choice\" />\r\n    <Button  size=\"sm\" variant=\"primary\" onClick={this.handleAddChoice}>Add Choice</Button>\r\n    <Button id=\"btnDeleteChoice\"  size=\"sm\" variant=\"danger\" onClick={this.handleDeleteChoice}>Delete Choice</Button>\r\n    <div id=\"ChoicesDiv\"></div>\r\n    <Form.Control size=\"sm\" as=\"select\" id=\"ChoiceModelAns\" placeholder=\"Choose Model Answer\">\r\n    <option>Choose Model Answer</option>\r\n    </Form.Control>\r\n    <Button style={{ float:'right'}} variant=\"success\" onClick={()=>{this.SubmitMCQ(window.ExamTitleBOX,'1', document.getElementById('TextMCQuestion').value, window.ExamMCQChoices, \r\n      document.getElementById('ChoiceModelAns').value, document.getElementById('MCQGrade').value,document.getElementById('MCQILO').value)\r\n      }}>Finish Question</Button>\r\n  </Form.Group>\r\n\r\n\r\n  <Form.Group style={{display:'none'}} id=\"formExamComplete\" controlId=\"formExamComplete\">\r\n   \r\n    <Form.Label>Complete Question</Form.Label>\r\n    <Row>\r\n    <Form.Control id=\"CompILO\"  size=\"sm\" type=\"text\" style={{width:'50%',margin: '15px 15px 15px 15px'}} placeholder=\"Enter Question ILO\"></Form.Control>\r\n  <Form.Control id=\"CompGrade\" size=\"sm\" style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\" placeholder=\"Enter Your Grade\" />\r\n   \r\n   </Row>\r\n    <Form.Control size=\"sm\" id=\"TextComplete1\" type=\"text\" placeholder=\"Enter Your 1st part of the Question *before the space*\" />\r\n    <Form.Control size=\"sm\"id=\"TextComplete2\" type=\"text\" placeholder=\"Enter Your 2nd part of the Question *after the space*\" />\r\n    <br />\r\n    <Form.Control size=\"sm\" id=\"AnswerComplete\" type=\"text\" placeholder=\"Enter Your Model Answer *the space*\" />\r\n    <Button style={{ float:'right'}}variant=\"success\"onClick={()=>{this.SubmitComplete(window.ExamTitleBOX,'1',document.getElementById('TextComplete1').value, document.getElementById('TextComplete2').value, \r\n      document.getElementById('AnswerComplete').value, document.getElementById('CompGrade').value, document.getElementById('CompILO').value)}} >Finish Question</Button>\r\n    \r\n  </Form.Group>\r\n\r\n\r\n  <Form.Group style={{display:'none'}} id=\"formExamTF\" controlId=\"formExamTF\">\r\n    <Form.Label>True and False Question</Form.Label>\r\n    <Row>\r\n    <Form.Control id=\"TFIlo\"  size=\"sm\" type=\"text\" style={{width:'50%',margin: '15px 15px 15px 15px'}} placeholder=\"Enter Question ILO\"></Form.Control>\r\n   <Form.Control id=\"TFGrade\" size=\"sm\" style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\" placeholder=\"Enter Your Grade\" />\r\n   \r\n   </Row>\r\n    <Form.Control size=\"sm\" id=\"TextTF\" type=\"text\" placeholder=\"Enter Your Question\" />\r\n      <br />\r\n      <Form.Control size=\"sm\" as=\"select\" id=\"TFModelAns\" placeholder=\"Choose Model Answer\">\r\n    <option>Choose Model Answer</option>\r\n    <option>True</option>\r\n    <option>False</option>\r\n    </Form.Control>\r\n    <Button style={{ float:'right'}} variant=\"success\" \r\n    onClick={ ()=>{this.SubmitTrueFalse(window.ExamTitleBOX,'1',document.getElementById('TextTF').value , \r\n    document.getElementById('TFModelAns').value, document.getElementById('TFGrade').value, document.getElementById('TFIlo').value)}}>Finish Question</Button>\r\n    \r\n  </Form.Group>\r\n\r\n\r\n  <Form.Group style={{display:'none'}} id=\"formExamEssay\" controlId=\"formExamEssay\">\r\n    <Form.Label>Essay Question</Form.Label>\r\n    <Row>\r\n    <Form.Control id=\"EssILO\" size=\"sm\" type=\"text\" style={{width:'50%',margin: '15px 15px 15px 15px'}} placeholder=\"Enter Question ILO\"></Form.Control>\r\n   <Form.Control id=\"EssGrade\" size=\"sm\" style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\" placeholder=\"Enter Your Grade\" />\r\n   \r\n   </Row>\r\n    <Form.Control size=\"sm\" id=\"TextEssay\" type=\"text\" placeholder=\"Enter Your Essay Question\" />\r\n   <br />\r\n    <Form.Control size=\"sm\" as=\"textarea\"id=\"AnswerEssay\" placeholder=\"Enter Your Model Answer\" />\r\n    <Button style={{ float:'right'}} variant=\"success\" \r\n    onClick={()=>{this.SubmitEssay(window.ExamTitleBOX,'1',document.getElementById('TextEssay').value , \r\n    document.getElementById('AnswerEssay').value, document.getElementById('EssGrade').value, document.getElementById('EssILO').value)}}\r\n    >Finish Question</Button>\r\n    \r\n  </Form.Group>\r\n</Form>\r\n\r\n </Container>\r\n            \r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateExam;\r\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './CreateExam.css';\nimport './Popup.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Modal from 'react-bootstrap/Modal'\nimport ListGroup from 'react-bootstrap/ListGroup'\nclass FromExisting extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {value: '',ILO:[], Mixreturn:[], QuestionList:[], CounterList:[], AnswerList:[],\n      CorrectAnswerList:[], ILOList:[], GradeList:[]};\n      this.GetILO();    \n      \n    }\n\n    GetILO()\n    {\n      fetch('/GetILO/'+1)\n        .then(response => response.json())\n        .then(data => this.setState({ILO : data.ILO_List}));\n    }\n    MixQuestion(ExamTitle, InstructorID, QuestionType, ILO, Number)\n    {\n      fetch('/MixQuestion/'+ExamTitle+'/'+InstructorID+'/'+QuestionType+'/'+ILO+'/'+Number)\n        .then(response => response.json())\n        .then(data => this.setState({Mixreturn : data.MixQues}));\n    }\n    handleConfirm()\n    {\n        \n        if (document.getElementById('TextExamTitle').value==\"\")\n        {\n            alert(\"You Must Enter an Exam Title First !\")\n        }\n        else\n        {\n            window.ExamTitleBOX=document.getElementById('TextExamTitle').value\n            document.getElementById('ExamtitleBox').style.display='none';\n        }\n        \n    }\n    handleTopic(){}\n    handleType(){}\n    handleAddtoExam(){}\n    handleFinishExam(){\n    \n    }\n  \n    render() {\n        return (\n        <div>\n          <div class=\"modal-custom\" id=\"ExamtitleBox\">\n          <Modal.Dialog  >\n              <Modal.Header closeButton>\n              <Modal.Title>Exam title</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <Form.Group controlId=\"formExamTitle\">\n                <Form.Control type=\"text\" id='TextExamTitle' placeholder=\"Enter Exam Title\" />\n                <Form.Text className=\"text-muted\">\n                Ex: Marketing Midterm Spring 2020\n                </Form.Text>\n                </Form.Group>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"primary\" onClick={this.handleConfirm} >Confirm</Button>\n            </Modal.Footer>\n          </Modal.Dialog>\n          </div>\n              \n    <Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\n        <br />\n    <Form style={{backgroundColor:'white'}}>\n    <Form.Label>Now you can Randomly Select Questions According to it's Topic and Type</Form.Label>\n  \n  <Form.Group controlId=\"formQuestionType\">\n    <Row>\n    <Form.Control as=\"select\" id=\"ILO\" style={{width:'50%',margin: '15px 15px 15px 15px'}} onChange={this.handleTopic} >\n    {this.state.ILO.map((fbb) => <option key={fbb.key} value={fbb.key} >{fbb}</option>)}\n    </Form.Control>\n\n\n    <Form.Control id=\"QuestionType\" as=\"select\" id=\"QuesType\" style={{width:'40%',margin: '15px 15px 15px 15px'}} onChange={this.handleType} placeholder=\"Choose Question Type\">\n    <option>Choose Question Type</option>\n    <option>MCQ</option>\n    <option>Complete</option>\n    <option>T and F</option>\n    <option>Essay</option>\n    <option hidden>Comparison</option>\n    </Form.Control>\n    </Row>\n    <Row>\n   \n    <Form.Control required id=\"Number\"  style={{width:'50%',margin: '15px 15px 15px 15px'}} type=\"number\" placeholder=\"Enter Number of Questions Needed\" />\n    <Button variant=\"primary\"style={{width:'40%',margin: '15px 15px 15px 15px'}} onClick={()=>{this.MixQuestion(window.ExamTitleBOX,\n    '1',document.getElementById('QuesType').value, document.getElementById('ILO').value, document.getElementById('Number').value)\n      }}\n       type=\"primary\">Add to Exam</Button>\n   </Row>\n\n   <Button style={{ float:'right'}} size=\"lg\" onClick={this.handleFinishExam}   variant=\"success\" >Finish Exam</Button>\n  </Form.Group>\n  \n</Form>\n\n </Container>\n            \n          </div>\n        );\n    }\n}\n\nexport default FromExisting;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './ViewExams.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup'\nclass ViewExams extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {value: '', Exams:null};\n        fetch('/ViewExams/'+1)\n          .then(response => response.json())\n          .then(data => this.setState({Exams : data.ans}));\n          \n    }\n\n    render() {\n       //var names= window.ExamTitle;\n       var names = this.state.Exams\n       \n       //enta 3yz el list kolha wla esm w7ed bs\n       if (names==null)\n       {\n        var nameslist='No Exams Yet'\n       }\n       else\n       {\n        var nameslist= names.map(function(name){\n            const href = `/#/instructor-exam?${new URLSearchParams({ name }).toString()}`;\n            return <ListGroup.Item href={href} action>{name}</ListGroup.Item>;\n\n          })\n         \n       }\n    \n        \n       return (\n        <div>\n          \n          <h1>All Exams</h1>\n   \n    <Container style={{width:'660px',height:'550px',backgroundColor:'white', overflow:'scroll'}}>\n        <br />\n        <ListGroup style={{textAlign: 'center'}}  >{nameslist}</ListGroup>\n    </Container>\n        </div>\n        );\n    }\n}\n\nexport default ViewExams;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './ViewExams.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup'\nclass ViewEdit extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {value: '', Exams:null, Deleted:null};\n      fetch('/ViewExams/'+1)\n        .then(response => response.json())\n        .then(data => this.setState({Exams : data.ans}));\n        \n    }\n\n    DeleteExam(ExamTitle)\n    {\n      fetch('/DeleteExam/'+ExamTitle)\n        .then(response => response.json())\n        .then(data => this.setState({Deleted : data.Deleted}));\n      window.location.reload(false);\n    }\n\n    render() {\n       //var names=  window.ExamTitle;\n       var names = this.state.Exams\n       if (names==null)\n       {\n        var nameslist='No Exams Yet'\n       }\n       else\n       { \n   \n\n          var nameslist= names.map((name)=>{\n            const href1 = `/#/instructor-view-edit-exam?${new URLSearchParams({ name }).toString()}`;\n            return (\n                \n                <Row style={{ justifyContent:'space-evenly'}}>\n                  <ListGroup style={{textAlign: 'center',width:'70%',margin: '10px 10px 10px 10px'}} >\n                    <ListGroup.Item href=\"/#/instructor-exam\"disabled>{name}</ListGroup.Item>\n                   </ ListGroup>\n                  \n                 <Button style={{width:'10%',margin: '10px 10px 10px 10px'}} href={href1} size=\"sm\" variant=\"primary\" >Edit</ Button>\n                 <Button style={{width:'10%',margin: '10px 10px 10px 10px'}} size=\"sm\" variant=\"danger\" \n                 onClick={()=>{this.DeleteExam(name)}} >Delete</ Button>\n                </Row>\n    \n              \n                   ) \n          })\n       }\n    \n        \n       return (\n        <div>\n          \n          <h1>All Exams</h1>\n   \n    <Container style={{width:'660px',height:'550px',backgroundColor:'white', overflow:'scroll'}}>\n        <br />\n        {nameslist}\n    </Container>\n        </div>\n        );\n    }\n}\n\nexport default ViewEdit;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './ViewExams.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup'\nclass ViewGrade extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {value: '', Exams:null, Grades:null};\n    this.GetExams()\n    this.GradeExam = this.GradeExam.bind(this);\n      \n  }\n\n  GetExams()\n  {\n    fetch('/ViewExams/'+1)\n      .then(response => response.json())\n      .then(data => this.setState({Exams : data.ans}));\n  }\n\n  GradeExam(ExamTitle)\n  {\n    console.log(\"5555555555555555555555\")\n    fetch('/GradeExam/'+ExamTitle)\n      .then(response => response.json())\n      .then(data => this.setState({Grades : data.Grades}));\n  }\n\n    render() {\n       var names= this.state.Exams\n       if (names==null)\n       {\n        var nameslist='No Exams Yet'\n       }\n       else\n       { \n   \n\n          var nameslist= names.map((name)=>{\n            return (\n                \n                <Row style={{ justifyContent:'space-evenly'}}>\n                  <ListGroup style={{textAlign: 'center',width:'80%',margin: '10px 10px 10px 10px'}} >\n                    <ListGroup.Item href=\"/#/instructor-exam\"disabled>{name}</ListGroup.Item>\n                   </ ListGroup>\n                 <Button style={{width:'10%',margin: '10px 10px 10px 10px'}} size=\"sm\" variant=\"success\" onClick={()=>this.GradeExam(name)} >Grade</ Button>\n               \n                </Row>\n    \n              \n                   ) \n          })\n       }\n    \n        \n       return (\n        <div>\n          \n          <h1>All Exams</h1>\n   \n    <Container style={{width:'660px',height:'550px',backgroundColor:'white', overflow:'scroll'}}>\n        <br />\n        {nameslist}\n    </Container>\n        </div>\n        );\n    }\n}\n\nexport default ViewGrade;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './CreateExam.css';\nimport './Popup.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nclass EditMCQ extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {value: '', Question:null, AnswerList:null, CorrectAnswer:null, ILO:null,  Grade:null, IsUpdated:null,\n      OldQuestion:null, InstructorID:1, ExamTitle:'Marketing'};\n      //this.GetMCQInfo()\n      this.Autofill()\n          \n    }\n\n    //this is for one question\n    async GetMCQInfo()\n    {\n      const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n      const exam = params.get('exam');\n      //params = new URLSearchParams(window.location.hash.split(\"?\")[2]);\n      const question = params.get('question');\n      const response = await fetch('/GetAMCQ/'+exam+'/'+1+'/'+question).then(response => response.json());\n      this.setState({Question:response.Question, AnswerList:response.AnswerList,\n          CorrectAnswer:response.CorrectAnswer, ILO:response.ILO,  Grade:response.Grade});\n\n    \n    }\n\n    //et2aked ml choices variable\n    UpdateMCQ(NewQuestion, NewAnswers, NewCorrectAns, NewILO, NewGrade)\n    {\n      fetch('/UpdateMCQ/'+this.state.OldQuestion+'/'+NewQuestion+'/'+NewAnswers+'/'+NewCorrectAns+'/'+this.state.ExamTitle+'/'\n      +NewILO+'/'+NewGrade+'/'+this.state.InstructorID)\n        .then(response => response.json())\n        .then(data => this.setState({IsUpdated:data.Updated}));\n      //this.handleSave();\n    }\n\n    async Autofill()\n    {\n        await this.GetMCQInfo();\n        document.getElementById('MCQILO').value=this.state.ILO;\n        document.getElementById('MCQGrade').value=this.state.Grade;\n        document.getElementById('TextMCQuestion').value=this.state.Question;\n        document.getElementById('ChoiceModelAns').value=this.state.CorrectAnswer;\n    }\n   handleSave()\n   {\n    if (this.state.IsUpdated == \"Successfully updated\")\n    {\n      alert(\"Saved Successfully\");\n    }\n    else\n    {\n      alert(\"Unseuccessful try\");\n      window.location.reload(false);\n    } \n   }\n\n   handleAddChoice()\n      { \n        \n        var x = document.createElement(\"div\");\n        x.setAttribute(\"class\", \"form-check form-check-inline\");\n        x.setAttribute(\"id\",\"choice\"+window.ChoiceCounter);\n        x.innerHTML='<input type=\"radio\" disabled class=\"form-check-input\">'+\n        '<label title for=\"formExamMCQ\" id= \"'+\"choice\"+window.ChoiceCounter+'\" class=\"form-check-label\">'+ document.getElementById('formChoiceTextbox').value+'</label>';\n        document.getElementById('ChoicesDiv').appendChild(x);\n        window.ChoiceCounter++;\n        var y=document.createElement(\"option\");\n        y.innerText=document.getElementById('formChoiceTextbox').value;\n        document.getElementById('ChoiceModelAns').appendChild(y);\n        document.getElementById('formChoiceTextbox').value='';\n      }\n      handleDeleteChoice()\n      {\n        window.ChoiceCounter--;\n        var y=document.getElementById('choice'+window.ChoiceCounter);\n        document.getElementById('ChoicesDiv').removeChild(y);\n      }\n    render() {\n        return (\n        <div>\n      <Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\n              <br />\n      <Form.Group   id=\"formExamMCQ\" controlId=\"formExamMCQ\">\n      \n      <Form.Label>Multiple Choice Question</Form.Label>\n      <Row>\n      <Form.Control  size=\"sm\" type=\"text\" id=\"MCQILO\" style={{width:'50%',margin: '15px 15px 15px 15px'}} placeholder=\"Enter Question ILO\"></Form.Control>\n      <Form.Control required size=\"sm\"id=\"MCQGrade\" style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\" placeholder=\"Enter Your Grade\" />\n\n      </Row>\n      <Form.Control required size=\"sm\" id=\"TextMCQuestion\" type=\"text\" placeholder=\"Enter Your Question\" />\n      <br />\n      <Form.Control  required size=\"sm\" id=\"formChoiceTextbox\" type=\"text\" placeholder=\"Enter a Choice\" />\n      <Button  size=\"sm\" variant=\"primary\" onClick={this.handleAddChoice}>Add Choice</Button>\n      <Button id=\"btnDeleteChoice\"  size=\"sm\" variant=\"danger\" onClick={this.handleDeleteChoice}>Delete Choice</Button>\n      <div id=\"ChoicesDiv\"></div>\n      <Form.Control required size=\"sm\" as=\"select\" id=\"ChoiceModelAns\" placeholder=\"Choose Model Answer\">\n      <option>Choose Model Answer</option>\n      </Form.Control>\n      <Button size=\"sm\" style={{ float:'right'}} variant=\"success\"\n      onClick={()=>{this.UpdateMCQ(this.state.OldQuestion,document.getElementById('TextMCQuestion').value, \n      document.getElementById('formChoiceTextbox').value, document.getElementById('ChoiceModelAns').value, \n      document.getElementById('MCQILO').value, document.getElementById('MCQGrade').value)\n      }}\n        >Save Changes</Button>\n      </Form.Group>\n      </Container>\n\n        </div>\n        )\n    }\n}\nexport default EditMCQ;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './CreateExam.css';\nimport './Popup.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nclass EditTF extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {value: '', Question:null, CorrectAnswer:null, ILO:null,  Grade:null, IsUpdated:null,\n        OldQuestion:null, ExamTitle:'Marketing', InstructorID:1};\n        //this.GetTFInfo()\n        this.Autofill()\n          \n    }\n\n    //this is for one question\n    async GetTFInfo()\n    {\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n        const exam = params.get('exam');\n        //params = new URLSearchParams(window.location.hash.split(\"?\")[2]);\n        const question = params.get('question');\n        const response = await fetch('/GetATrueFalseQues/'+exam+'/'+1+'/'+question).then(response => response.json());\n        this.setState({Question:response.Question, CorrectAnswer:response.CorrectAnswer, ILO:response.ILO,  Grade:response.Grade});\n\n    }\n\n    UpdateTrueFalse(NewQuestion, NewCorrectAns, NewILO, NewGrade)\n    {\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n        const exam = params.get('exam');\n        //params = new URLSearchParams(window.location.hash.split(\"?\")[2]);\n        const question = params.get('question');\n        fetch('/UpdateTrueFalse/'+question+'/'+NewQuestion+'/'+NewCorrectAns+'/'+exam+'/'\n        +NewILO+'/'+NewGrade+'/'+1)\n            .then(response => response.json())\n            .then(data => this.setState({IsUpdated:data.Updated}));\n        //this.handleSave();\n    }\n\n    async Autofill()\n    {\n        await this.GetTFInfo();\n        document.getElementById('TFILO').value=this.state.ILO;\n        document.getElementById('TFGrade').value=this.state.Grade;\n        document.getElementById('TextTF').value=this.state.Question;\n        document.getElementById('TFModelAns').value=this.state.CorrectAnswer;\n    }\n\n    handleSave()\n    {\n     if (this.state.IsUpdated == \"Successfully updated\")\n     {\n       alert(\"Saved Successfully\");\n     }\n     else\n     {\n       alert(\"Unseuccessful try\");\n       window.location.reload(false);\n     } \n    }\n\n    render() {\n        return (\n        <div>\n<Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\n        <br />\n<Form.Group  id=\"formExamTF\" controlId=\"formExamTF\">\n    <Form.Label>True and False Question</Form.Label>\n    <Row>\n    <Form.Control  size=\"sm\"id=\"TFILO\" type=\"text\" style={{width:'50%',margin: '15px 15px 15px 15px'}}\n    placeholder=\"Enter Question ILO\"></Form.Control>\n   <Form.Control size=\"sm\"id=\"TFGrade\" style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\"\n   placeholder=\"Enter Your Grade\" />\n   \n   </Row>\n    <Form.Control size=\"sm\" id=\"TextTF\" type=\"text\" placeholder=\"Enter Your Question\" />\n      <br />\n      <Form.Control size=\"sm\" as=\"select\" id=\"TFModelAns\" placeholder=\"Choose Model Answer\">\n    <option>Choose Model Answer</option>\n    <option>True</option>\n    <option>False</option>\n    </Form.Control>\n    <Button size=\"sm\" style={{ float:'right'}} variant=\"success\"\n    onClick={()=>{this.UpdateTrueFalse(document.getElementById('TextTF').value, \n    document.getElementById('TFModelAns').value, document.getElementById('TFILO').value, \n    document.getElementById('TFGrade').value)\n    }}\n     >Save Changes</Button>\n   \n    </Form.Group>\n    </Container>\n    \n        </div>\n        )\n    }\n}\nexport default EditTF;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './CreateExam.css';\nimport './Popup.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nclass EditComplete extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {value: '', Question1:null, Question2:null, CorrectAnswer:null, ILO:null,  Grade:null, IsUpdated:null, \n        InstructorID:1, ExamTitle:'Marketing', OldQuestion1:null, OldQuestion2:null};\n        \n        this.Autofill()\n        \n          \n    }\n\n    //this is for one question\n    async GetCompleteInfo()\n    {\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n        const exam = params.get('exam');\n        //params = new URLSearchParams(window.location.hash.split(\"?\")[2]);\n        const question = params.get('question');\n        const response = await fetch('/GetACompleteQues/'+exam+'/'+1+'/'+question).then(response => response.json());\n        this.setState({Question1:response.Question1, Question2:response.Question2, \n            CorrectAnswer:response.CorrectAnswer, ILO:response.ILO,  Grade:response.Grade});\n\n        // fetch('/GetACompleteQues/'+exam+'/'+1+'/'+question)\n        //     .then(response => response.json())\n        //     .then(data => this.setState({Question1:data.Question1, Question2:data.Question2, \n        //     CorrectAnswer:data.CorrectAnswer, ILO:data.ILO,  Grade:data.Grade}));\n    }\n\n    UpdateComplete(NewQuestion1, NewQuestion2, NewCorrectAns, NewILO, NewGrade)\n    {\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n        const exam = params.get('exam');\n        //params = new URLSearchParams(window.location.hash.split(\"?\")[2]);\n        const question = params.get('question');\n        fetch('/UpdateComplete/'+question+'/'+NewQuestion1+'/'+NewQuestion2+'/'\n        +NewCorrectAns+'/'+exam+'/'+NewILO+'/'+NewGrade+'/'+1)\n            .then(response => response.json())\n            .then(data => this.setState({IsUpdated:data.Updated}));\n        //this.handleSave();\n\n    }\n\n    async Autofill()\n    {\n        await this.GetCompleteInfo();\n        document.getElementById('CompleteILO').value=this.state.ILO;\n        document.getElementById('CompleteGrade').value=this.state.Grade;\n        document.getElementById('TextComplete1').value=this.state.Question2;\n        document.getElementById('TextComplete2').value=this.state.Question2;\n        document.getElementById('AnswerComplete').value=this.state.CorrectAnswer;\n    }\n\n    handleSave()\n    {\n    \n     if (this.state.IsUpdated == \"Successfully updated\")\n     {\n       alert(\"Saved Successfully\");\n     }\n     else\n     {\n       alert(\"Unseuccessful try\");\n       window.location.reload(false);\n     } \n    }\n\n    render() {\n        return (\n        <div>\n<Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\n        <br />\n<Form.Group id=\"formExamComplete\" controlId=\"formExamComplete\">\n   \n   <Form.Label>Complete Question</Form.Label>\n   <Row>\n   <Form.Control  size=\"sm\" id=\"CompleteILO\" type=\"text\" style={{width:'50%',margin: '15px 15px 15px 15px'}} placeholder=\"Enter Your ILO \" ></Form.Control>\n   <Form.Control size=\"sm\" id=\"CompleteGrade\" style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\" placeholder=\"Enter Your Grade \"/>\n   \n   </Row>\n   <Form.Control size=\"sm\" id=\"TextComplete1\" type=\"text\"  placeholder=\"Enter Your 1st part of the Question *before the space*\" />\n   <Form.Control size=\"sm\"id=\"TextComplete2\" type=\"text\"   placeholder=\"Enter Your 2nd part of the Question *after the space*\" />\n   <br />\n   <Form.Control size=\"sm\" id=\"AnswerComplete\" type=\"text\" placeholder=\"Enter Your Model Answer *the space*\" />\n   <Button size=\"sm\" style={{ float:'right'}} variant=\"success\"\n   onClick={()=>{this.UpdateComplete(document.getElementById('TextComplete1').value, \n   document.getElementById('TextComplete2').value, document.getElementById('AnswerComplete').value,\n    document.getElementById('CompleteILO').value, document.getElementById('CompleteGrade').value)\n   }}\n   >Save Changes</Button>\n   \n   </Form.Group>\n   </Container>\n        </div>\n        )\n    }\n}\nexport default EditComplete;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './CreateExam.css';\nimport './Popup.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nclass EditEssay extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {value: '', Question:null, CorrectAnswer:null, ILO:null,  Grade:null, IsUpdated:null,\n        OldQuestion:null, ExamTitle:'Marketing', InstructorID:1};\n        //this.GetEssayInfo()\n        this.Autofill()\n        \n          \n    }\n\n    //this is for one question\n    async GetEssayInfo()\n    {\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n        const exam = params.get('exam');\n        //params = new URLSearchParams(window.location.hash.split(\"?\")[2]);\n        const question = params.get('question');\n        const response = await fetch('/GetAEssQues/'+exam+'/'+1+'/'+question).then(response => response.json());\n        this.setState({Question:response.Question, CorrectAnswer:response.CorrectAnswer, ILO:response.ILO,  Grade:response.Grade});\n\n    }\n\n    UpdateEssay(NewQuestion, NewCorrectAns, NewILO, NewGrade)\n    {\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n        const exam = params.get('exam');\n        //params = new URLSearchParams(window.location.hash.split(\"?\")[2]);\n        const question = params.get('question');\n        fetch('/UpdateEssay/'+question+'/'+NewQuestion+'/'+NewCorrectAns+'/'+exam+'/'\n        +NewILO+'/'+NewGrade+'/'+1)\n            .then(response => response.json())\n            .then(data => this.setState({IsUpdated:data.Updated}));\n        //this.handleSave();\n    }\n\n    async Autofill()\n    {\n        await this.GetEssayInfo()\n        document.getElementById('EssayILO').value=this.state.ILO;\n        document.getElementById('EssayGrade').value=this.state.Grade;\n        document.getElementById('TextEssay').value=this.state.Question;\n        document.getElementById('AnswerEssay').value=this.state.CorrectAnswer;\n    }\n\n    handleSave()\n    {\n     if (this.state.IsUpdated == \"Successfully updated\")\n     {\n       alert(\"Saved Successfully\");\n     }\n     else\n     {\n       alert(\"Unseuccessful try\");\n       window.location.reload(false);\n     } \n    }\n\n    render() {\n        return (\n        <div>\n<Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\n        <br />\n<Form.Group  id=\"formExamEssay\" controlId=\"formExamEssay\">\n    <Form.Label>Essay Question</Form.Label>\n    <Row>\n    <Form.Control  size=\"sm\"id=\"EssayILO\" type=\"text\" style={{width:'50%',margin: '15px 15px 15px 15px'}}\n    placeholder=\"Enter Question ILO\"></Form.Control>\n   <Form.Control size=\"sm\" id=\"EssayGrade\"style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\"\n    placeholder=\"Enter Your Grade\" />\n   \n   </Row>\n    <Form.Control size=\"sm\" id=\"TextEssay\" type=\"text\" placeholder=\"Enter Your Essay Question\" />\n   <br />\n    <Form.Control size=\"sm\" as=\"textarea\"id=\"AnswerEssay\" placeholder=\"Enter Your Model Answer\" />\n    <Button size=\"sm\" style={{ float:'right'}} variant=\"success\"\n     onClick={()=>{this.UpdateEssay(document.getElementById('TextEssay').value, \n     document.getElementById('AnswerEssay').value, document.getElementById('EssayILO').value, \n     document.getElementById('EssayGrade').value)\n     }}\n      >Save Changes</Button>\n    </Form.Group>\n    </Container>\n        </div>\n        )\n    }\n}\nexport default EditEssay;","import React, { Component } from 'react';\r\n\r\nimport './Exam.css';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\nimport $ from 'jquery'; \r\n\r\nclass TakeMCQ extends Component{\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value:'', QuestionList:[], CounterList:[], AnswerList:[],CorrectAnswerList:[], \r\n        ILOList:[], GradeList:[]};\r\n        this.GetMCQ()\r\n        window.MCQQuestions=[];\r\n        window.MCQAnswers=[];\r\n    }\r\n\r\n    GetMCQ()\r\n    {\r\n        var examname=this.props.passedname;\r\n      fetch('/GetMCQ/'+examname+'/'+1)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList:data.QuestionList, CounterList:data.CounterList, AnswerList:data.AnswerList,\r\n            CorrectAnswerList:data.CorrectAnswerList, ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n\r\n    handleSubmit()\r\n    {\r\n        window.MCQAnswers=[];\r\n        var ansGroup=\"\"\r\n    \r\n        for(var i=0;i<window.MCQQuestions.length;i++)\r\n        {\r\n            ansGroup=\"AnswerMCQ\" + (i+1)\r\n            if(document.getElementById(ansGroup)!=null)\r\n            {\r\n                window.MCQAnswers.push($(`input[name='${ansGroup}']:checked`).val());\r\n            }\r\n         \r\n\r\n        }\r\n        \r\n       \r\n    }\r\n    render(){\r\n        var name=this.props.passedname\r\n        var ExamMCQQuestions = this.state.QuestionList;\r\n        var ExamMCQCounter = this.state.CounterList;\r\n        var ExamMCQChoices = this.state.AnswerList;\r\n        ExamMCQChoices = ExamMCQChoices.toString().split(',');\r\n        window.MCQQuestions=ExamMCQQuestions;\r\n        var r = \"\";\r\n        var i = 0;\r\n        var MCQHead = \"\";\r\n        var answer = \"\";\r\n        var choicesNumber = 0;\r\n        if (ExamMCQQuestions.length != 0) {\r\n            MCQHead = <div><Form.Label  ><b>Choose the Correct Answer:</b></Form.Label> <Button style={{width:'21%',margin: '10px 10px 10px 10px'}} onClick={this.handleSubmit} size=\"sm\" variant=\"primary\" >Submit MCQ</ Button> <br /></div>;\r\n\r\n            r = ExamMCQChoices.map((choice, index) => {\r\n                if (choicesNumber == 0) {\r\n                    choicesNumber = ExamMCQCounter[i] - 1;\r\n                    i += 1;\r\n                    answer = \"AnswerMCQ\" + (i);\r\n                    return (\r\n                        <div>\r\n                            <Form.Label  >{i})&nbsp;{ExamMCQQuestions[i - 1]}  </Form.Label> \r\n                    \r\n            \r\n                             <br />\r\n                            <Form.Label ><input type=\"radio\" name={answer} value={choice} id={answer} /> {choice} </Form.Label>\r\n                            </div>\r\n                    )\r\n                }\r\n                else {\r\n                    choicesNumber -= 1;\r\n                    return (\r\n                        <div >\r\n                            <Form.Label ><input type=\"radio\" name={answer} value={choice} id={answer} /> {choice} </Form.Label>\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n\r\n            });\r\n\r\n        }\r\n\r\n        return(\r\n            <div>\r\n            \r\n            { MCQHead }\r\n            { r }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default TakeMCQ;","import React, { Component } from 'react';\r\n\r\nimport './Exam.css';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nclass TakeEssay extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value:'', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[]};\r\n        this.GetEssay()\r\n        window.EssayQuestions=[];\r\n        window.EssayAnswers=[];\r\n    }\r\n\r\n    GetEssay()\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/GetEssay/'+examname+'/'+1)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \r\n            ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n\r\n    handleSubmit()\r\n    {\r\n        window.EssayAnswers=[];\r\n        \r\n        for(var i=0;i<window.EssayCount;i++)\r\n        {\r\n            \r\n            if(document.getElementById(\"AnswerEssay\" + (i+1))!=null)\r\n            {\r\n                window.EssayAnswers.push(document.getElementById(\"AnswerEssay\" + (i+1)).value);\r\n            }\r\n\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    render(){\r\n        var ExamEssay=this.state.QuestionList;\r\n        window.EssayQuestions=ExamEssay;\r\n        var name=this.props.passedname\r\n        var EssayHead=\"\";\r\n        var Essay=\"\";\r\n        var answerid = \"\";\r\n        if(ExamEssay.length!=0){\r\n            EssayHead = <div><Form.Label  ><b>Essay Question(s):</b></Form.Label> <Button style={{width:'21%',margin: '10px 10px 10px 10px'}} onClick={this.handleSubmit} size=\"sm\" variant=\"primary\" >Submit Essay</ Button>\r\n            <br /></div>;\r\n            Essay= ExamEssay.map((Question,index)=>{\r\n                window.EssayCount=index+1;\r\n                answerid = \"AnswerEssay\" + (index+1);\r\n            return(\r\n                 <div>\r\n                    <Form.Label  >{index+1})&nbsp;{ExamEssay[index]}  </Form.Label>\r\n                          \r\n                     <br />\r\n                    <Form.Label><textarea placeholder=\"Enter Answer Here\" id={answerid}  style={{width:\"600px\"}}></textarea></Form.Label>\r\n                </div>\r\n                )\r\n            }\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {EssayHead}\r\n                {Essay}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TakeEssay;","import React, { Component } from 'react';\r\nimport './Exam.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport $ from 'jquery'; \r\nclass TakeTF extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value:'', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[]};\r\n        this.GetTF()\r\n        window.TFQuestions=[];\r\n        window.TFAnswers=[];\r\n    }\r\n\r\n    GetTF()\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/GetTF/'+examname+'/'+1)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \r\n            ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n\r\n    handleSubmit()\r\n    {\r\n        window.TFAnswers=[];\r\n        var ansGroup=\"\"\r\n        \r\n        for(var i=0;i<window.TFQuestions.length;i++)\r\n        {\r\n            ansGroup=\"AnswerTF\" + (i+1)\r\n            if(document.getElementById(ansGroup)!=null)\r\n            {\r\n                window.TFAnswers.push($(`input[name='${ansGroup}']:checked`).val());\r\n            }\r\n         \r\n\r\n        }\r\n        \r\n      \r\n    }\r\n\r\n    render() {\r\n       \r\n        var ExamTF = this.state.QuestionList;\r\n        window.TFQuestions=ExamTF;\r\n        var name=this.props.passedname\r\n        var TFHead = \"\";\r\n        var TF = \"\";\r\n        var answer=\"\";\r\n        if (ExamTF.length != 0) {\r\n            TFHead = <div><Form.Label  ><b>True or False:</b></Form.Label> <Button style={{width:'21%',margin: '10px 10px 10px 10px'}} onClick={this.handleSubmit} size=\"sm\" variant=\"primary\" >Submit T & F</ Button>\r\n            <br /></div>;\r\n            TF = ExamTF.map((Question, index) => {\r\n                answer=\"AnswerTF\"+(index+1)\r\n                \r\n                return (\r\n                    <div>\r\n                        <Form.Label  > {index + 1})&nbsp;{ExamTF[index]}  </Form.Label>\r\n                        <Form.Label style={{ paddingRight:\"6px\" ,margin:\"10px 10px 10px 10px\" }}><input type=\"radio\" name={answer} id={answer}  value=\"True\"  />True </Form.Label>   \r\n                        <Form.Label style={{paddingRight:\"6px\",margin:\"10px 10px 10px 10px\"}}><input type=\"radio\" name={answer} id={answer}  value=\"False\" />False </Form.Label> \r\n                        \r\n                        \r\n                    </div>\r\n                )\r\n            }\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {TFHead}\r\n                {TF}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TakeTF;","import React, { Component } from 'react';\r\n\r\nimport './Exam.css';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nclass TakeComplete extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[]};\r\n        this.GetComplete()\r\n        window.CompleteQuestions=[];\r\n        window.CompleteAnswers=[];\r\n    }\r\n\r\n    GetComplete()\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/GetComplete/'+examname+'/'+1)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \r\n            ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n\r\n    handleSubmit()\r\n    {\r\n        window.CompleteAnswers=[];\r\n        for(var i=0;i<window.CompleteCount;i++)\r\n        {\r\n            \r\n            if(document.getElementById(\"AnswerComplete\" + (i+1))!=null)\r\n            {\r\n                window.CompleteAnswers.push(document.getElementById(\"AnswerComplete\" + (i+1)).value);\r\n            }\r\n\r\n        }\r\n        \r\n        \r\n    }\r\n    render() {\r\n        var ExamComplete = this.state.QuestionList;\r\n        window.CompleteQuestions=ExamComplete;\r\n        var Examname=this.props.passedname;\r\n        var CompleteHead = \"\";\r\n        var Complete = \"\";\r\n        var i=0\r\n        if (ExamComplete.length != 0) {\r\n            CompleteHead = <div><Form.Label  ><b>Complete the following:</b></Form.Label>  <Button style={{width:'21%',margin: '10px 10px 10px 10px'}} onClick={this.handleSubmit} size=\"sm\" variant=\"primary\" >Submit Complete</ Button>\r\n            <br /></div>;\r\n            Complete = ExamComplete.map((Question, index) => {\r\n               \r\n                if (index%2==0)\r\n                {\r\n                    i+=1;\r\n                    var answerid = \"AnswerComplete\" + i;\r\n                    window.CompleteCount=i;\r\n                    return (\r\n                        <div>\r\n                            <Form.Label  > {i})&nbsp; </Form.Label> \r\n                            <Form.Label>  {ExamComplete[index]}   </Form.Label>\r\n                            <input type=\"text\" id={answerid} placeholder=\"Enter Answer Here\"  style={{margin:\"6px\"}}/>\r\n                            <Form.Label> {ExamComplete[index+1]} </Form.Label>\r\n                           \r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {CompleteHead}\r\n                {Complete}\r\n                          \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TakeComplete;","import React, { Component } from 'react';\r\n\r\nimport './Exam.css';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nimport TakeMCQ from './TakeMCQ.js';\r\nimport TakeEssay from './TakeEssay.js';\r\nimport TakeTF from './TakeTF.js';\r\nimport TakeComplete from './TakeComplete.js';\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\n\r\nclass TakeExam extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '',Submit:null};\r\n\r\n      }\r\n\r\n      handleSubmitAnswers()\r\n      {\r\n        document.getElementById('ExamSubmitBox').style.display='block';\r\n      }\r\n      SubmitStudentExam(StudentID, MCQList, MCQAnswers, \r\n        CompleteList, CompleteAnswers, TFList, TFAnswers, EssayList, EssayAnswers)\r\n      {\r\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n        const examname = params.get('name');\r\n        // console.log(\"Question\",question)\r\n        if (MCQList==[])\r\n        {\r\n          MCQList = ['']\r\n        }\r\n        if (MCQAnswers==[])\r\n        {\r\n          MCQAnswers = ['']\r\n        }\r\n        if (CompleteList==[])\r\n        {\r\n          CompleteList = ['']\r\n        }\r\n        if (CompleteAnswers==[])\r\n        {\r\n          CompleteAnswers = ['']\r\n        }\r\n        if (TFList==[])\r\n        {\r\n          TFList = ['']\r\n        }\r\n        if (TFAnswers==[])\r\n        {\r\n          TFAnswers = ['']\r\n        }\r\n        if (EssayList==[])\r\n        {\r\n          EssayList = ['']\r\n        }\r\n        if (EssayAnswers==[])\r\n        {\r\n          EssayAnswers = ['']\r\n        }\r\n        fetch('/SubmitStudentExam/'+examname+'/'+StudentID+'/'+MCQList+'/'+MCQAnswers+'/'+CompleteList+'/'+CompleteAnswers+'/'+TFList+\r\n        '/'+TFAnswers+'/'+EssayList+'/'+EssayAnswers)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({Submit : data.successful}));\r\n          this.handleSubmitAnswers();\r\n      }\r\n\r\n    render() {\r\n        \r\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n        const name = params.get('name');\r\n        return (\r\n            <div>\r\n     <div style={{display:'none'}} class=\"modal-custom\" id=\"ExamSubmitBox\">\r\n          <Modal.Dialog  >\r\n              <Modal.Header >\r\n              <Modal.Title>Exam Alert</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                Exam \"{name}\" Submitted Successfully\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"primary\" onClick={event =>  window.location.href='#/student-home'} >Ok</Button>\r\n            </Modal.Footer>\r\n          </Modal.Dialog>\r\n          </div>\r\n        <Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\r\n            <br />\r\n        <Form>\r\n        <Form.Label style={{ display: 'flex', justifyContent: 'center' }}><b>{name}</b> </Form.Label>\r\n            <TakeMCQ passedname={name}/>\r\n            <TakeTF passedname={name}/>\r\n            <TakeComplete passedname={name}/>\r\n            <TakeEssay passedname={name}/>\r\n            <Button style={{ float:'right'}} variant=\"primary\"  type=\"submit\"onClick={()=>{this.SubmitStudentExam('1',window.MCQQuestions,window.MCQAnswers,window.CompleteQuestions,window.CompleteAnswers,window.TFQuestions,window.TFAnswers,window.EssayQuestions,window.EssayAnswers)}}>Submit Answers</Button>\r\n        </Form>\r\n        </Container>\r\n            </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default TakeExam;\r\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './StudentHome.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nclass StudentHome extends Component {\n\n    render() {\n        return (\n        <div>\n          \n          <h1>Welcome ya Taleb.</h1>\n    <br />\n    <Container style={{ justifyContent:'center'}}>\n     <Row style={{ justifyContent:'space-evenly'}}>\n         <Col  style={{ flexGrow:'unset'}}><Button style={{width: 'max-content'}} href=\"#/student-ask\" size=\"lg\"variant=\"primary\">Ask a Question</Button></Col>\n         <Col style={{ flexGrow:'unset'}} ><Button style={{width: 'max-content'}} href=\"#/student-view-all\" size=\"lg\" variant=\"primary\">Take Exam</Button></Col>\n     </Row>\n\n </Container>\n            \n          </div>\n        );\n    }\n}\n\nexport default StudentHome;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './StudentAsk.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nclass StudentAsk extends Component {\n\n \n    render() {\n        return (\n        <div>\n    <Container style={{width:'660px',height:'590px',backgroundColor:'white',overflow:'scroll'}}>\n        <br />\n    <Form style={{backgroundColor:'white'}}>\n\n  <Form.Group  id=\"formExamEssay\" controlId=\"formExamEssay\">\n    <Form.Label>Essay Question</Form.Label>\n    <Form.Control id=\"TextEssay\" as=\"textarea\" placeholder=\"Enter Your Essay Question\" />\n   <br />\n    <Button  style={{float:'right'}} variant=\"success\" >Get Answer</Button>\n\n  </Form.Group>\n\n</Form>\n\n </Container>\n            \n          </div>\n        );\n    }\n}\n\nexport default StudentAsk;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './StudentExams.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup'\nclass StudentExams extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {value: '', Exams:null};\n        fetch('/ViewExams/'+1)\n          .then(response => response.json())\n          .then(data => this.setState({Exams : data.ans}));\n          \n          \n    }\n\n    render() {\n       //var names= window.ExamTitle;\n       var names = this.state.Exams\n       if (names==null)\n       {\n        var nameslist='No Exams Yet'\n       }\n       else\n       {\n        var nameslist= names.map(function(name){\n            const href = `/#/student-take-exam?${new URLSearchParams({ name }).toString()}`;\n            return <ListGroup.Item href={href} action>{name}</ListGroup.Item>;\n          })\n       }\n    \n        \n       return (\n        <div>\n          \n          <h1>All Exams</h1>\n   \n    <Container style={{width:'660px',height:'550px',backgroundColor:'white',overflow:'scroll'}}>\n        <br />\n       <ListGroup style={{textAlign: 'center'}} >{nameslist}</ListGroup>\n    </Container>\n        </div>\n        );\n    }\n}\n\nexport default StudentExams;\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Exam.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport Exam from './Exam.js';\r\n\r\nclass ExamMCQ extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', QuestionList:[], CounterList:[], AnswerList:[],CorrectAnswerList:[], \r\n        ILOList:[], GradeList:[]};\r\n        this.GetMCQ()\r\n          \r\n    }\r\n\r\n    GetMCQ()\r\n    {\r\n        var examname=this.props.passedname\r\n      fetch('/GetMCQ/'+examname+'/'+1)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList:data.QuestionList, CounterList:data.CounterList, AnswerList:data.AnswerList,\r\n            CorrectAnswerList:data.CorrectAnswerList, ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n\r\n    handleTopic(){}\r\n\r\n    render(){\r\n        var ExamMCQQuestions = this.state.QuestionList;\r\n        var ExamMCQCounter   = this.state.CounterList;\r\n        var ExamMCQChoices   = this.state.AnswerList;\r\n        ExamMCQChoices = ExamMCQChoices.toString().split(',');\r\n\r\n        //var ExamMCQQuestions = window.ExamMCQQuestions;\r\n        //var ExamMCQCounter = window.ExamMCQCounter;\r\n        //var ExamMCQChoices = window.ExamMCQChoices;\r\n\r\n        var r = \"\";\r\n        var i = 0;\r\n        var MCQHead = \"\";\r\n        var answer = \"\";\r\n        var choicesNumber = 0;\r\n        if (ExamMCQQuestions.length != 0) {\r\n            MCQHead = <div><Form.Label  ><b>Choose the Correct Answer:</b></Form.Label> <br /></div>;\r\n\r\n            r = ExamMCQChoices.map((choice, index) => {\r\n                if (choicesNumber == 0) {\r\n                    choicesNumber = ExamMCQCounter[i] - 1;\r\n                    i += 1;\r\n                    answer = \"answer\" + (i);\r\n                    return (\r\n                        <div>\r\n                            <Form.Label  >{i})&nbsp;{ExamMCQQuestions[i - 1]}  </Form.Label> \r\n                    \r\n            \r\n                             <br />\r\n                            <Form.Label inline><input type=\"radio\" name={answer} value={choice} disabled /> {choice} </Form.Label>\r\n                            </div>\r\n                    )\r\n                }\r\n                else {\r\n                    choicesNumber -= 1;\r\n                    return (\r\n                        <div >\r\n                            <Form.Label inline><input type=\"radio\" name={answer} value={choice} disabled /> {choice} </Form.Label>\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n\r\n            });\r\n\r\n        }\r\n\r\n        return(\r\n            <div>\r\n            { MCQHead }\r\n            { r }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ExamMCQ;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Exam.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport Exam from './Exam.js';\r\n\r\nclass ExamEssay extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[]};\r\n        this.GetEssay()\r\n          \r\n    }\r\n\r\n    GetEssay()\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/GetEssay/'+examname+'/'+1)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \r\n            ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n    render(){\r\n        //var ExamEssay=window.ExamEssay;\r\n        var ExamEssay = this.state.QuestionList\r\n        \r\n        var EssayHead=\"\";\r\n        var Essay=\"\";\r\n        if(ExamEssay.length!=0){\r\n            EssayHead = <div><Form.Label  ><b>Essay Questions:</b></Form.Label> <br /></div>;\r\n            Essay= ExamEssay.map((Question,index)=>{\r\n            return(\r\n                 <div>\r\n                    <Form.Label  >{index+1})&nbsp;{ExamEssay[index]}  </Form.Label>\r\n                          \r\n                     <br />\r\n                    <Form.Label><textarea placeholder=\"Enter Answer Here\" value={this.state.CorrectAnswerList[index]} disabled style={{width:\"600px\"}}></textarea></Form.Label>\r\n                </div>\r\n                )\r\n            }\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {EssayHead}\r\n                {Essay}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ExamEssay;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Exam.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport Exam from './Exam.js';\r\n\r\nclass ExamTF extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[]};\r\n        this.GetTF()\r\n          \r\n    }\r\n        \r\n    GetTF()\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/GetTF/'+examname+'/'+1)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \r\n            ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n    render() {\r\n        //var ExamTF = window.ExamTF;\r\n        var ExamTF = this.state.QuestionList;\r\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n        const name = params.get('name');\r\n        var TFHead = \"\";\r\n        var TF = \"\";\r\n        if (ExamTF.length != 0) {\r\n            TFHead = <div><Form.Label  ><b>True or False:</b></Form.Label> <br /></div>;\r\n            TF = ExamTF.map((Question, index) => {\r\n                return (\r\n                    <div>\r\n                       <Form.Label  > {index + 1})&nbsp;{ExamTF[index]}  </Form.Label>\r\n                              \r\n                        <Form.Label style={{ paddingRight:\"6px\" ,margin:\"10px 10px 10px 10px\" }}><input type=\"radio\" name={index}  value=\"True\"  />True </Form.Label>   \r\n                        <Form.Label style={{paddingRight:\"6px\",margin:\"10px 10px 10px 10px\"}}><input type=\"radio\" name={index}  value=\"False\" />False </Form.Label> \r\n                        \r\n                    </div>\r\n                )\r\n            }\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {TFHead}\r\n                {TF}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ExamTF;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Exam.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport Exam from './Exam.js';\r\n\r\nclass ExamComplete extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[]};\r\n        this.GetComplete()\r\n        \r\n          \r\n    }\r\n\r\n    GetComplete()\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/GetComplete/'+examname+'/'+1)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \r\n            ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n    render() {\r\n        //var ExamComplete = window.ExamComplete;\r\n        var ExamComplete = this.state.QuestionList;\r\n\r\n        var CompleteHead = \"\";\r\n        var Complete = \"\";\r\n        var i=0\r\n        if (ExamComplete.length != 0) {\r\n            CompleteHead = <div><Form.Label  ><b>Complete the following:</b></Form.Label> <br /></div>;\r\n            Complete = ExamComplete.map((Question, index) => {\r\n                if (index%2==0)\r\n                {\r\n                    i+=1;\r\n                    return (\r\n                        <div>\r\n                           <Form.Label  > {i})&nbsp; </Form.Label> \r\n                            <Form.Label>  {ExamComplete[index]}   </Form.Label>\r\n                            <input type=\"text\" placeholder=\"Enter Answer Here\" value={this.state.CorrectAnswerList[index]} disabled style={{margin:\"6px\"}}/>\r\n                            <Form.Label> {ExamComplete[index+1]} </Form.Label>\r\n\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {CompleteHead}\r\n                {Complete}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ExamComplete;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Exam.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport ExamMCQ from './ExamMCQ.js';\nimport ExamEssay from './ExamEssay.js';\nimport ExamTF from './ExamTF.js';\nimport ExamComplete from './ExamComplete.js';\n\n\n\nclass Exam extends Component {\n\n    constructor(props) {\n        super(props);\n        \n          \n    }\n\n    render() {\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n        const name = params.get('name');\n        window.examname=name;\n        return (\n            <div>\n    \n        <Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\n            <br />\n        <Form>\n        <Form.Label style={{ display: 'flex', justifyContent: 'center' }}>{name}</Form.Label>\n            <ExamMCQ passedname={name} />\n            <ExamTF passedname={name}/>\n            <ExamComplete passedname={name}/>\n            <ExamEssay passedname={name}/>\n        </Form>\n        </Container>\n            </div>\n            );\n    }\n}\n\nexport default Exam;\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Exam.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\n\r\nclass ViewEditMCQ extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', MCQQuestions:[], MCQCounter:[], MCQChoices:[],CorrectAnswerList:[], \r\n        ILOList:[], GradeList:[], Deleted:null};\r\n        this.GetMCQ()\r\n             \r\n    }\r\n\r\n    GetMCQ()\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/GetMCQ/'+examname+'/'+1)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({MCQQuestions : data.QuestionList, MCQCounter : data.CounterList, MCQChoices : data.AnswerList,\r\n            CorrectAnswerList:data.CorrectAnswerList, ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n\r\n    DeleteMCQ(Question)\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/DeleteMCQ/'+examname+'/'+Question)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({Deleted : data.Deleted}));\r\n        window.location.reload(false);\r\n    }\r\n    \r\n\r\n    render(){\r\n        var ExamMCQQuestions = this.state.MCQQuestions;\r\n        var ExamMCQCounter = this.state.MCQCounter;\r\n        var ExamMCQChoices = this.state.MCQChoices;\r\n        ExamMCQChoices = ExamMCQChoices.toString().split(',');\r\n\r\n        var r = \"\";\r\n        var i = 0;\r\n        var MCQHead = \"\";\r\n        var answer = \"\";\r\n        var choicesNumber = 0;\r\n        if (ExamMCQQuestions.length != 0) {\r\n            MCQHead = <div><Form.Label  ><b>Choose the Correct Answer:</b></Form.Label> <br /></div>;\r\n\r\n            r = ExamMCQChoices.map((choice, index) => {\r\n                \r\n                if (choicesNumber == 0) {\r\n                    choicesNumber = ExamMCQCounter[i] - 1;\r\n                    i += 1;\r\n                    answer = \"answer\" + (i);\r\n                    var question = ExamMCQQuestions[i - 1]\r\n                    var exam = this.props.passedname\r\n                    const href1 = `/#/instructor-edit-mcq?${new URLSearchParams({ exam, question }).toString()}`;\r\n                    return (\r\n                        <div>\r\n                            <Form.Label  >Question {i}: {ExamMCQQuestions[i - 1]}  </Form.Label> \r\n                            <br>\r\n                            </br>\r\n\r\n                            <Form.Label inline><input type=\"radio\" name={answer} value={choice} disabled /> {choice} </Form.Label>\r\n\r\n                            <Row>\r\n                            <Form.Label style={{width:'50%',margin: '15px 15px 15px 15px'}}> ILO:{this.state.ILOList[index]}  </Form.Label>\r\n                            <Form.Label style={{width:'40%',margin: '15px 15px 15px 15px'}}> Grade:{this.state.GradeList[index]} </Form.Label>\r\n                            </Row>\r\n\r\n                            <Button style={{width:'10%',margin: '10px 10px 10px 10px',float:'right'}} size=\"sm\" variant=\"danger\" \r\n                            onClick={()=>{this.DeleteMCQ(question)}} >Delete</ Button>\r\n                            <Button style={{width:'10%',margin: '10px 10px 10px 10px',float:'right'}}href={href1} size=\"sm\" variant=\"primary\" >Edit</ Button>\r\n                            <br>\r\n                            </br>\r\n                            <br>\r\n                            </br>\r\n                        </div>\r\n                    )\r\n                }\r\n                else {\r\n                    choicesNumber -= 1;\r\n                    return (\r\n                        <div >\r\n                            <Form.Label inline><input type=\"radio\" name={answer} value={choice} disabled /> {choice} </Form.Label>\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n\r\n            });\r\n\r\n        }\r\n\r\n        return(\r\n            <div>\r\n            { MCQHead }\r\n            { r }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ViewEditMCQ;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Exam.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\n\r\nclass ViewEditEssay extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[], Deleted:null};\r\n        this.GetEssay()\r\n        \r\n          \r\n    }\r\n\r\n    GetEssay()\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/GetEssay/'+examname+'/'+1)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \r\n            ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n\r\n    DeleteEssay(Question)\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/DeleteEssay/'+examname+'/'+Question)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({Deleted : data.Deleted}));\r\n        window.location.reload(false);\r\n    }\r\n\r\n    render(){\r\n        var ExamEssay=this.state.QuestionList;\r\n        \r\n        var EssayHead=\"\";\r\n        var Essay=\"\";\r\n        if(ExamEssay.length!=0){\r\n            EssayHead = <div><Form.Label  ><b>Essay Questions:</b></Form.Label> <br /></div>;\r\n            Essay= ExamEssay.map((Question,index)=>{\r\n                var question = ExamEssay[index]\r\n                var exam = this.props.passedname\r\n                //const href1 = `/#/instructor-edit-essay?${new URLSearchParams({ exam }).toString()}?${new URLSearchParams({ question }).toString()}`;\r\n                const href1 = `/#/instructor-edit-essay?${new URLSearchParams({ exam, question }).toString()}`;\r\n            return(\r\n                 <div>\r\n                    <Form.Label  >Question {index+1}: {ExamEssay[index]}  </Form.Label>\r\n                    \r\n                    <Form.Label><textarea placeholder=\"Enter Answer Here\" value={this.state.CorrectAnswerList[index]} disabled style={{width:\"600px\"}}></textarea></Form.Label>\r\n\r\n                    <Row>\r\n                            <Form.Label style={{width:'50%',margin: '15px 15px 15px 15px'}}> ILO:{this.state.ILOList[index]}  </Form.Label>\r\n                            <Form.Label style={{width:'40%',margin: '15px 15px 15px 15px'}}> Grade:{this.state.GradeList[index]} </Form.Label>\r\n                    </Row>\r\n\r\n                    <Button style={{width:'10%',margin: '10px 10px 10px 10px',float:'right'}} size=\"sm\" variant=\"danger\"\r\n                    onClick={()=>{this.DeleteEssay(question)}}  >Delete</ Button>\r\n                    <Button style={{width:'10%',margin: '10px 10px 10px 10px',float:'right'}} href={href1} size=\"sm\" variant=\"primary\" >Edit</ Button>\r\n                    <br>\r\n                    </br>\r\n                    <br>\r\n                    </br>\r\n                </div>\r\n                )\r\n            }\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {EssayHead}\r\n                {Essay}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewEditEssay;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Exam.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\n\r\nclass ViewEditTF extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[]};\r\n        this.GetTF()\r\n          \r\n    }\r\n\r\n    GetTF()\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/GetTF/'+examname+'/'+1)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \r\n            ILOList:data.ILOList, GradeList:data.GradeList}));\r\n        \r\n    }\r\n\r\n    DeleteTF(Question)\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/DeleteTF/'+examname+'/'+Question)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({Deleted : data.Deleted}));\r\n        window.location.reload(false);\r\n    }\r\n\r\n    render() {\r\n        var ExamTF = this.state.QuestionList;\r\n\r\n        var TFHead = \"\";\r\n        var TF = \"\";\r\n        if (ExamTF.length != 0) {\r\n            TFHead = <div><Form.Label  ><b>True or False:</b></Form.Label> <br /></div>;\r\n            TF = ExamTF.map((Question, index) => {\r\n                var question = ExamTF[index]\r\n                var exam = this.props.passedname\r\n                const href1 = `/#/instructor-edit-tf?${new URLSearchParams({ exam, question }).toString()}`;\r\n                return (\r\n                    <div>\r\n                        <Form.Label  >Question {index + 1}: {ExamTF[index]}  </Form.Label>\r\n                        \r\n                        <Form.Label style={{float:\"left\", paddingRight:\"6px\"}}><input type=\"radio\" name={index} value=\"False\" disabled/>T </Form.Label> \r\n                        <Form.Label style={{ float: \"left\" ,paddingRight:\"6px\"  }}><input type=\"radio\" name={index} value=\"True\" disabled />F </Form.Label>\r\n                        <Row>\r\n                            <Form.Label style={{width:'50%',margin: '15px 15px 15px 15px'}}> ILO:{this.state.ILOList[index]}  </Form.Label>\r\n                            <Form.Label style={{width:'40%',margin: '15px 15px 15px 15px'}}> Grade:{this.state.GradeList[index]} </Form.Label>\r\n                        </Row>\r\n                        <Button style={{width:'10%',margin: '10px 10px 10px 10px',float:'right'}} size=\"sm\" variant=\"danger\"\r\n                        onClick={()=>{this.DeleteTF(question)}} >Delete</ Button>\r\n                        <Button style={{width:'10%',margin: '10px 10px 10px 10px',float:'right'}} href={href1} size=\"sm\" variant=\"primary\" >Edit</ Button>\r\n                        <br>\r\n                        </br>\r\n                        <br>\r\n                        </br>\r\n                    </div>\r\n                )\r\n            }\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {TFHead}\r\n                {TF}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewEditTF;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Exam.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\n\r\nclass ViewEditComplete extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[], Deleted:null};\r\n        this.GetComplete()\r\n        \r\n          \r\n    }\r\n\r\n    GetComplete()\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/GetComplete/'+examname+'/'+1)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \r\n            ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n\r\n    DeleteComplete(Question)\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/DeleteComplete/'+examname+'/'+Question)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({Deleted : data.Deleted}));\r\n        window.location.reload(false);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        var ExamComplete = this.state.QuestionList;\r\n\r\n        var CompleteHead = \"\";\r\n        var Complete = \"\";\r\n        var i=0\r\n        if (ExamComplete.length != 0) {\r\n            CompleteHead = <div><Form.Label  ><b>Complete:</b></Form.Label> <br /></div>;\r\n            Complete = ExamComplete.map((Question, index) => {\r\n                if (index%2==0)\r\n                {\r\n                    i+=1;\r\n                    var question = ExamComplete[index]\r\n                    var exam = this.props.passedname\r\n                    const href1 = `/#/instructor-edit-complete?${new URLSearchParams({ exam, question }).toString()}`;\r\n                    return (\r\n                        <div>\r\n                            <Form.Label  >Question {i}: </Form.Label> \r\n                            <Form.Label>  {ExamComplete[index]}   </Form.Label>\r\n                            <input type=\"text\" placeholder=\"Complete..\" value={this.state.CorrectAnswerList[index]} disabled style={{margin:\"6px\"}}/>\r\n\r\n                            \r\n                            <Row>\r\n                            <Form.Label style={{width:'50%',margin: '15px 15px 15px 15px'}}> ILO:{this.state.ILOList[index]}  </Form.Label>\r\n                            <Form.Label style={{width:'40%',margin: '15px 15px 15px 15px'}}> Grade:{this.state.GradeList[index]} </Form.Label>\r\n                            </Row>\r\n                            \r\n\r\n                            <Button style={{width:'10%',margin: '10px 10px 10px 10px',float:'right'}} size=\"sm\" variant=\"danger\" \r\n                            onClick={()=>{this.DeleteComplete(question)}} >Delete</ Button>\r\n                            <Button style={{width:'10%',margin: '10px 10px 10px 10px',float:'right'}} href={href1} size=\"sm\" variant=\"primary\">Edit</ Button>\r\n                            <br>\r\n                            </br>\r\n                            <br>\r\n                            </br>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {CompleteHead}\r\n                {Complete}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewEditComplete;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Exam.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport ViewEditMCQ from './ViewEditMCQ.js';\nimport ViewEditEssay from './ViewEditEssay.js';\nimport ViewEditTF from './ViewEditTF.js';\nimport ViewEditComplete from './ViewEditComplete.js';\n\n\n\nclass ViewEditExam extends Component {\n\n    constructor(props) {\n        super(props);\n        \n          \n    }\n\n    render() {\n\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n        const name = params.get('name');\n\n        return (\n            <div>\n    \n        <Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\n            <br />\n        <Form>\n            <ViewEditMCQ passedname={name}/>\n            <ViewEditTF passedname={name}/>\n            <ViewEditComplete passedname={name}/>\n            <ViewEditEssay passedname={name}/>\n        </Form>\n        </Container>\n            </div>\n            );\n    }\n}\n\nexport default ViewEditExam;\n","import React, { Component } from 'react';\r\nimport { HashRouter as Router, Route, Link, NavLink } from 'react-router-dom';\r\nimport SignUpForm from './Pages/SignUpForm';\r\nimport SignInForm from './Pages/SignInForm';\r\nimport Homepage from './Pages/Homepage';\r\nimport InstructorHome from './Pages/InstructorHome';\r\nimport CreateExam from './Pages/CreateExam';\r\nimport FromExisting from './Pages/FromExisting';\r\nimport ViewExams from './Pages/ViewExams';\r\nimport ViewEdit from './Pages/ViewEdit';\r\nimport ViewGrade from './Pages/ViewGrade';\r\nimport EditMCQ from './Pages/EditMCQ';\r\nimport EditTF from './Pages/EditTF';\r\nimport EditComplete from './Pages/EditComplete';\r\nimport EditEssay from './Pages/EditEssay';\r\nimport TakeExam from './Pages/TakeExam';\r\nimport StudentHome from './Pages/StudentHome';\r\nimport StudentAsk from './Pages/StudentAsk';\r\nimport StudentExams from './Pages/StudentExams';\r\nimport Exam from './Pages/Exam';\r\nimport ViewEditExam from './Pages/ViewEditExam';\r\n\r\nimport './App.css';\r\nimport { Container } from '@material-ui/core';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      \r\n      <Router basename=\"/esae-frontend/\">\r\n       <Container fixed>\r\n          <Navbar fixed=\"top\" bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand href=\"#home\">E.S.A.E</Navbar.Brand>\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link href=\"#home\">Home</Nav.Link>\r\n\r\n        </Nav>\r\n        <Form inline>\r\n          <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n          <Button variant=\"outline-info\">Search</Button>\r\n        </Form>\r\n      </Navbar>\r\n       </Container>\r\n              <Route exact path=\"/home\" component={Homepage}>\r\n              </Route>\r\n              <Route exact path=\"/\" component={Homepage}>\r\n              </Route>\r\n              <Route path=\"/sign-up\" component={SignUpForm}>\r\n              </Route>\r\n              <Route path=\"/sign-in\" component={SignInForm}>\r\n              </Route>\r\n              <Route path=\"/instructor-home\" component={InstructorHome}>\r\n              </Route>\r\n              <Route path=\"/instructor-create\" component={CreateExam}>\r\n              </Route>\r\n\t\t\t        <Route path=\"/instructor-from-exist\" component={FromExisting}>\r\n              </Route>\r\n              <Route path=\"/instructor-view-all\" component={ViewExams}>\r\n              </Route>\r\n\t\t\t        <Route path=\"/instructor-view-edit\" component={ViewEdit}>\r\n              </Route>\r\n              <Route path=\"/instructor-view-grade\" component={ ViewGrade}>\r\n              </Route>\r\n              <Route path=\"/instructor-view-edit-exam\" component={ViewEditExam}>\r\n              </Route>\r\n              <Route path=\"/instructor-exam\" component={Exam}>\r\n              </Route>\r\n\t\t\t        <Route path=\"/instructor-edit-mcq\" component={EditMCQ}>\r\n              </Route>\r\n              <Route path=\"/instructor-edit-tf\" component={EditTF}>\r\n              </Route>\r\n              <Route path=\"/instructor-edit-complete\" component={EditComplete}>\r\n              </Route>\r\n              <Route path=\"/instructor-edit-essay\" component={EditEssay}>\r\n              </Route>\r\n\t\t\t  \r\n              <Route path=\"/student-home\" component={StudentHome}>\r\n              </Route>\r\n              <Route path=\"/student-ask\" component={StudentAsk}>\r\n              </Route>\r\n              <Route path=\"/student-view-all\" component={StudentExams}>\r\n              </Route>\r\n              <Route path=\"/student-take-exam\" component={TakeExam}>\r\n              </Route>\r\n    \r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}