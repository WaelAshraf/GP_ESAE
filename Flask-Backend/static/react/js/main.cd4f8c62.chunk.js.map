{"version":3,"sources":["Pages/SignUpForm.js","Pages/SignInForm.js","Pages/Homepage.js","Pages/InstructorHome.js","Pages/CreateExam.js","Pages/FromExisting.js","Pages/ViewExams.js","Pages/ViewEdit.js","Pages/ViewGrade.js","Pages/EditMCQ.js","Pages/EditTF.js","Pages/EditComplete.js","Pages/EditEssay.js","Pages/TakeMCQ.js","Pages/TakeEssay.js","Pages/TakeTF.js","Pages/TakeComplete.js","Pages/TakeExam.js","Pages/StudentHome.js","Pages/StudentAsk.js","Pages/StudentExams.js","Pages/ExamMCQ.js","Pages/ExamEssay.js","Pages/ExamTF.js","Pages/ExamComplete.js","Pages/Exam.js","Pages/ViewEditMCQ.js","Pages/ViewEditEssay.js","Pages/ViewEditTF.js","Pages/ViewEditComplete.js","Pages/ViewEditExam.js","App.js","serviceWorker.js","index.js","Pages/student.png","Pages/instructor.png"],"names":["SignUpForm","props","state","value","SignUpResult","username","Identity","UserName","Name","Password","this","fetch","then","response","json","setState","SignUp","alert","params","URLSearchParams","window","location","hash","split","get","Authenticate","document","getElementById","style","display","instructor_in","instructor","toString","student_in","student","name","href1","class","id","Modal","Dialog","Header","Title","Body","Footer","Button","variant","onClick","event","href","className","type","placeholder","SignUpStudentInstructor","Component","SignInForm","SignInResult","ID","IDToken","SignIn","instructor_up","student_up","home","SignInStudentInstructor","Homepage","Container","textAlign","Row","justifyContent","Col","Card","bg","width","Img","src","require","Text","size","InstructorHome","fullname","GetName","data","href2","href3","href4","href5","handleCreate","CreateExam","answer","MCQreturn","Completereturn","TFreturn","Essayreturn","finished","ExamTitleBOX","ExamMCQCounter","ExamMCQQuestions","ExamMCQChoices","ExamComplete","ExamTF","ExamEssay","GetInstUsername","handleChange","bind","handleSubmit","target","ExamTitle","Question","Answers","CorrectAns","Grade","ILO","MCQReturn","handleFinishQuestion","FetchMCQ","Question1","Question2","Answer","CompleteReturn","FetchComplete","TFReturn","FetchTF","EssayReturn","FetchEssay","ChoiceCounter","x","createElement","setAttribute","innerHTML","appendChild","y","innerText","z","removeChild","push","i","textContent","reset","$","empty","FinishQuestionAlert","Alert","key","hideAlert","float","handleFinishExam","Form","Group","controlId","Control","handleConfirm","height","backgroundColor","overflow","Label","as","margin","onChange","hidden","handleAddChoice","handleDeleteChoice","SubmitMCQ","SubmitComplete","SubmitTrueFalse","SubmitEssay","FromExisting","Mixreturn","QuestionList","CounterList","AnswerList","CorrectAnswerList","ILOList","GradeList","GetILO","ILO_List","QuestionType","Number","MixQues","FetchMix","closeButton","map","fbb","required","MixQuestion","ViewExams","Exams","ans","names","nameslist","ListGroup","Item","action","ViewEdit","Deleted","FetchDelete","reload","disabled","DeleteExam","ViewGrade","Grades","GetExams","GradeExam","GradedExam","showProgress","FetchGrade","FinishGradingAlert","Spinner","animation","role","EditMCQ","CorrectAnswer","IsUpdated","OldQuestion","Autofill","exam","question","NewQuestion","NewAnswers","NewCorrectAns","NewILO","NewGrade","Updated","FetchUpdateMCQ","GetMCQInfo","length","UpdateMCQ","EditTF","FetchUpdateTF","GetTFInfo","UpdateTrueFalse","EditComplete","OldQuestion1","OldQuestion2","NewQuestion1","NewQuestion2","FetchUpdateComp","GetCompleteInfo","UpdateComplete","EditEssay","FetchUpdateEssay","GetEssayInfo","UpdateEssay","TakeMCQ","GetMCQ","MCQQuestions","MCQAnswers","examname","passedname","ansGroup","val","r","MCQHead","choicesNumber","color","choice","index","TakeEssay","GetEssay","EssayQuestions","EssayAnswers","EssayCount","EssayHead","Essay","answerid","TakeTF","GetTF","TFQuestions","TFAnswers","TFHead","TF","paddingRight","TakeComplete","GetComplete","CompleteQuestions","CompleteAnswers","CompleteCount","CompleteHead","Complete","TakeExam","Submit","MCQList","CompleteList","TFList","EssayList","successful","FetchSubmitExam","GetNamyByID","handleSubmitAnswers","fontStyle","fontWeight","textDecorationLine","SubmitStudentExam","StudentHome","StudentName","flexGrow","StudentAsk","context","dummy","console","log","ref","node","setContext","readOnly","StudentExams","ExamMCQ","passedid","prop","inline","Exam","ViewEditMCQ","MCQCounter","MCQChoices","DeleteMCQ","ViewEditEssay","DeleteEssay","ViewEditTF","DeleteTF","ViewEditComplete","DeleteComplete","ViewEditExam","App","basename","fixed","Navbar","Brand","Nav","Link","exact","path","component","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"js/main.cd4f8c62.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n//import { HashRouter as Router, Route, Link, NavLink } from 'react-router-dom';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\n\r\nclass SignUpForm extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {value: '', SignUpResult:null, username:null};\r\n\r\n    }\r\n\r\n    async Authenticate(Identity, UserName, Name, Password)\r\n    {\r\n      this.state.username = UserName\r\n      //alert(this.state.username)\r\n      const response = await fetch('/SignUpStudentInstructor/'+Identity+'/'+UserName+'/'+Name+'/'+Password).then(response => response.json());\r\n      this.setState({SignUpResult:response.SignUp});\r\n    }\r\n    async SignUpStudentInstructor(UserName, Name, Password)\r\n    {\r\n      if(UserName==\"\"||Password==\"\"||Name==\"\")\r\n      {\r\n        alert(\"You Must Enter Name, Username and Password\")\r\n      }\r\n      else\r\n      {\r\n        var Identity = 0\r\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n        if(params.get('student'))\r\n        {\r\n          Identity='student'\r\n        }\r\n        else if (params.get('instructor'))\r\n        {\r\n          Identity='instructor'\r\n        }\r\n        await this.Authenticate(Identity, UserName, Name, Password)\r\n        if (this.state.SignUpResult == \"Added successfully\")\r\n        {\r\n          document.getElementById('SignupFinish').style.display='block';\r\n        }\r\n        else \r\n        {\r\n          alert(\"Unsuccessful process, please try again. \")\r\n        }\r\n      }\r\n      \r\n      \r\n    }\r\n\r\n\r\n    render() {\r\n      const instructor=\"instructor\";\r\n      const student=\"student\";\r\n      const instructor_in = `/#/sign-in?${new URLSearchParams({instructor}).toString()}`;\r\n      const student_in = `/#/sign-in?${new URLSearchParams({student}).toString()}`;\r\n      const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n      var name = \"\";\r\n      if(params.get('student'))\r\n      {\r\n        name=params.get('student')\r\n        \r\n      }\r\n      else if (params.get('instructor'))\r\n      {\r\n        name=params.get('instructor')\r\n        \r\n      }\r\n      var href1=\"\";\r\n      if (name==\"student\")\r\n      {\r\n        href1=student_in;\r\n      }\r\n      else if (name==\"instructor\")\r\n      {\r\n        href1=instructor_in\r\n      }\r\n      else\r\n      {\r\n        href1=\"#/sign-in\";\r\n      }\r\n        return (\r\n          <div>\r\n\r\n            <div style={{display:'none'}} class=\"modal-custom\" id=\"SignupFinish\">\r\n            <Modal.Dialog  >\r\n                <Modal.Header >\r\n                <Modal.Title>Sign Up Process</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                  Welcome {this.state.username}, you have successfully signed up, now please login with your credentials\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button variant=\"primary\" onClick={event =>  window.location.href='#/'} >Ok</Button>\r\n              </Modal.Footer>\r\n            </Modal.Dialog>\r\n            </div>\r\n\r\n\r\n            <form className=\"signin-forum-container\">\r\n              <h1>Sign Up</h1>\r\n              <input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Name\" /><br />\r\n              <input type=\"text\" name=\"username\" id=\"username\" placeholder=\"User Name [must be unique]\" /><br />\r\n              <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" /><br />\r\n              <a href={href1}>Already a member? Sign in now!</a>\r\n              <Button variant=\"primary\" \r\n              onClick={()=>{this.SignUpStudentInstructor(document.getElementById('username').value, document.getElementById('name').value,\r\n              document.getElementById('password').value)}}>Sign Up</Button><br />\r\n              \r\n            </form>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignUpForm;\r\n","import React, { Component } from 'react';\r\n//import { HashRouter as Router, Route, Link, NavLink } from 'react-router-dom';\r\nimport './signin.css';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\n\r\nclass SignInForm extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {value: '', SignInResult:null, Name:null, ID:null};\r\n      window.IDToken=[];\r\n\r\n    }\r\n\r\n    async Authenticate(Identity, UserName, Password)\r\n    {\r\n      const response = await fetch('/SignInStudentInstructor/'+Identity+'/'+UserName+'/'+Password).then(response => response.json());\r\n      this.setState({SignInResult:response.SignIn, ID:response.ID});\r\n    }\r\n    async SignInStudentInstructor(UserName, Password)\r\n    {\r\n      if(UserName==\"\"||Password==\"\")\r\n      {\r\n        alert(\"You Must Enter Username and Password\")\r\n      }\r\n      else\r\n      {\r\n        this.state.Name=UserName;\r\n        var Identity = 0\r\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n        if(params.get('student'))\r\n        {\r\n          Identity='student'\r\n        }\r\n        else if (params.get('instructor'))\r\n        {\r\n          Identity='instructor'\r\n        }\r\n        await this.Authenticate(Identity, UserName, Password)\r\n        //globalThis.window.IDToken=this.state.ID\r\n        //Object.freeze(globalThis.window.IDToken)\r\n        window.IDToken = this.state.ID\r\n        if (this.state.SignInResult == \"Found\")\r\n        {\r\n          document.getElementById('SigninFinish').style.display='block';\r\n          \r\n        }\r\n        else \r\n        {\r\n          alert(\"Invalid credentials\")\r\n        }\r\n        \r\n        \r\n      }\r\n\r\n    }\r\n\r\n    RouteAfterSignIn()\r\n    {\r\n\r\n    }\r\n    render() {\r\n      const instructor=\"instructor\";\r\n      const student=\"student\";\r\n      const instructor_up = `/#/sign-up?${new URLSearchParams({instructor}).toString()}`;\r\n      const student_up = `/#/sign-up?${new URLSearchParams({student}).toString()}`;\r\n      const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n      var name = \"\";\r\n      var home = \"\";\r\n      if(params.get('student'))\r\n      {\r\n        name=params.get('student')\r\n        window.Name=this.state.Name\r\n        var username=this.state.Name\r\n        //alert(username)\r\n        home = `#/student-home?${new URLSearchParams({username}).toString()}`;\r\n      }\r\n      else if (params.get('instructor'))\r\n      {\r\n        name=params.get('instructor')\r\n        window.Name=this.state.Name\r\n        var username=this.state.Name\r\n        var IDToken = this.state.ID\r\n        home = `#/instructor-home?${new URLSearchParams({username,IDToken}).toString()}`;\r\n        \r\n      }\r\n      var href1=\"\";\r\n      if (name==\"student\")\r\n      {\r\n        href1=student_up;\r\n      }\r\n      else if (name==\"instructor\")\r\n      {\r\n        href1=instructor_up\r\n      }\r\n      else\r\n      {\r\n        href1=\"#/sign-up\";\r\n      }\r\n        return (\r\n          <div>\r\n            <div style={{display:'none'}} class=\"modal-custom\" id=\"SigninFinish\">\r\n            <Modal.Dialog  >\r\n                <Modal.Header >\r\n                <Modal.Title>Authentication</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                  Welcome {window.Name}, you have been successfully authenticated\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button variant=\"primary\" onClick={event =>  window.location.href=home} >Ok</Button>\r\n              </Modal.Footer>\r\n            </Modal.Dialog>\r\n            </div>\r\n            <form className=\"signin-forum-container\" >\r\n            <h1>Sign In</h1>\r\n            <input type=\"text\" name=\"username\" id=\"username\" placeholder=\"User Name\" /><br />\r\n            <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" /><br />\r\n            <a href={href1}>Not a member? Sign up now!</a>\r\n            <Button variant=\"primary\" \r\n            onClick={()=>{this.SignInStudentInstructor(document.getElementById('username').value, document.getElementById('password').value)}} >Sign In</Button><br />\r\n            \r\n          </form>\r\n          </div>\r\n          \r\n        );\r\n    }\r\n}\r\n\r\nexport default SignInForm;\r\n","import React, { Component } from 'react';\r\n//import { Link } from 'react-router-dom';\r\nimport './homestyle.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nclass Homepage extends Component {\r\n  \r\n    render() {\r\n        const instructor=\"instructor\";\r\n        const student=\"student\";\r\n        const instructor_up = `/#/sign-up?${new URLSearchParams({instructor}).toString()}`;\r\n        const student_up = `/#/sign-up?${new URLSearchParams({student}).toString()}`;\r\n        const instructor_in = `/#/sign-in?${new URLSearchParams({instructor}).toString()}`;\r\n        const student_in = `/#/sign-in?${new URLSearchParams({student}).toString()}`;\r\n        return (\r\n        <div>\r\n <h1>Welcome to Exam Solver and Evaluator</h1>\r\n           <Container style={{textAlign:'center'}}>\r\n            <Row style={{ justifyContent:'space-around',display:'inline-flex'}}>\r\n                <Col  >\r\n                <Card bg=\"light\" style={{ width: '15rem' }}>\r\n            <Card.Img variant=\"top\" src={require('./student.png')} />\r\n            <Card.Body style={{ textAlign:'center'}}>\r\n                <Card.Title>I'm a Student</Card.Title>\r\n                <Card.Text>\r\n                Now you can Get Question's Answers and Take Exams with One Click\r\n                </Card.Text>\r\n                \r\n                <Button href={student_up} size=\"lg\" variant=\"success\">Join Now!</Button>\r\n                <Button href={student_in} size=\"lg\" variant=\"primary\">Sign in!</Button>\r\n            </Card.Body>\r\n            </Card>\r\n            </Col>\r\n                <Col >\r\n                <Card bg=\"light\" style={{ width: '15rem' }}>\r\n            <Card.Img variant=\"top\" src={require('./instructor.png')} />\r\n            <Card.Body style={{ textAlign:'center'}}>\r\n                <Card.Title>I'm an Instructor</Card.Title>\r\n                <Card.Text>\r\n                Now you can Form your Exams and Evaluate it with One Click\r\n                </Card.Text>\r\n                <Button href={instructor_up} size=\"lg\" variant=\"danger\">Join Now!</Button>\r\n                <Button href={instructor_in} size=\"lg\" variant=\"primary\">Sign in!</Button>\r\n            </Card.Body>\r\n            </Card>\r\n            </Col>\r\n            </Row>\r\n\r\n        </Container>\r\n        \r\n        \r\n\r\n            \r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Homepage;\r\n","import React, { Component } from 'react';\r\n//import { Link } from 'react-router-dom';\r\nimport './InstructorHome.css';\r\n//import Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport './SignInForm';\r\n\r\nclass InstructorHome extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', fullname:null, id:null};\r\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n        const username=params.get('username')\r\n        const IDToken=params.get('IDToken')\r\n        this.state.id=IDToken\r\n        //alert(this.state.id)\r\n        this.GetName(username)\r\n        \r\n  \r\n    }\r\n\r\n    GetName(username)\r\n    {\r\n      fetch('/GetInstName/'+username)\r\n        .then(response => response.json())\r\n        .then(data => this.setState({fullname : data.name}));\r\n    }\r\n\r\n    handleCreate()\r\n    {\r\n        if (document.getElementById('BtnNew').style.display=='block'||document.getElementById('BtnExist').style.display=='block')\r\n        {\r\n            document.getElementById('BtnNew').style.display='none';\r\n            document.getElementById('BtnExist').style.display='none';\r\n        }\r\n        else\r\n        {\r\n            document.getElementById('BtnNew').style.display='block';\r\n            document.getElementById('BtnExist').style.display='block';\r\n        }\r\n    }   \r\n\r\n    render() {\r\n        const IDToken = this.state.id;\r\n        const href1 = `/#/instructor-view-all?${new URLSearchParams({IDToken}).toString()}`;\r\n        const href2 = `/#/instructor-view-edit?${new URLSearchParams({IDToken}).toString()}`;\r\n        const href3 = `/#/instructor-view-grade?${new URLSearchParams({IDToken}).toString()}`;\r\n        const href4 = `/#/instructor-create?${new URLSearchParams({IDToken}).toString()}`;\r\n        const href5 = `/#/instructor-from-exist?${new URLSearchParams({IDToken}).toString()}`;\r\n        return (\r\n        <div>\r\n          \r\n          <h1>Welcome {this.state.fullname}</h1>\r\n    <br />\r\n    <Container>\r\n     <Row style={{ justifyContent:'space-evenly'}}>\r\n         <Col ><Button onClick={this.handleCreate} size=\"lg\"variant=\"primary\">Create Exam</Button></Col>\r\n        <Col  ><Button href={href1} size=\"lg\" variant=\"primary\">View Exams</Button></Col>\r\n         <Col  ><Button href={href2} size=\"lg\"variant=\"primary\">Edit Exam</Button></Col>\r\n         <Col  ><Button href={href3} size=\"lg\"variant=\"primary\">Grade Exam</Button></Col>\r\n     </Row>\r\n     <Row style={{width:'17%'}}>\r\n        \r\n         <Col ><Button id=\"BtnNew\"style={{display:'none'}} href={href4} size=\"sm\"variant=\"primary\">New Exam</Button></Col>\r\n       \r\n     </Row>\r\n     <Row style={{width:'17%'}}>\r\n        \r\n        <Col ><Button id=\"BtnExist\" style={{display:'none'}} href={href5} size=\"sm\"variant=\"primary\">From Existing Exams</Button></Col>\r\n    </Row>\r\n\r\n\r\n </Container>\r\n            \r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InstructorHome;\r\n","import React, { Component } from 'react';\r\n\r\nimport './CreateExam.css';\r\nimport './Popup.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport $ from 'jquery'; \r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\n\r\nclass CreateExam extends Component {\r\n  \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '',answer:null, MCQreturn:null,Completereturn:null, TFreturn:null, Essayreturn:null,finished:false, id:null,name:null};\r\n        window.ExamTitleBOX=[];\r\n        window.ExamMCQCounter=[];\r\n        window.ExamMCQQuestions=[];\r\n        window.ExamMCQChoices=[];\r\n        window.ExamComplete=[];\r\n        window.ExamTF=[];\r\n        window.ExamEssay=[];\r\n        //alert(window.IDToken)\r\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n        const ID = params.get('IDToken');\r\n        this.state.id=ID\r\n        this.GetInstUsername()  \r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n  \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n      }\r\n      GetInstUsername()\r\n      {\r\n        fetch('/GetInstUsername/'+this.state.id)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({name : data.username}));\r\n      }\r\n      handleChange (event) {\r\n        this.setState({value: event.target.value});\r\n      }\r\n\r\n      async FetchMCQ(ExamTitle,Question,Answers,CorrectAns,Grade,ILO)\r\n      {\r\n        const response = await fetch('/AddMCQ/'+ExamTitle+'/'+this.state.id+'/'+Question+'/'+Answers+'/'+CorrectAns+'/'+Grade+'/'+ILO).then(response => response.json());\r\n        this.setState({MCQreturn:response.MCQReturn});\r\n      }\r\n\r\n      async SubmitMCQ(ExamTitle,Question,Answers,CorrectAns,Grade,ILO)\r\n      {\r\n        if (this.handleFinishQuestion() == 0)\r\n        {\r\n\r\n        }\r\n        else\r\n        {\r\n          // console.log(\"Question\",question)\r\n          await this.FetchMCQ(ExamTitle,Question,Answers,CorrectAns,Grade,ILO)\r\n          window.ExamMCQChoices = []\r\n          window.ExamMCQCounter=[]\r\n          \r\n          if (this.state.MCQreturn == 'Question is added successfully')\r\n          {this.setState({finished: true});}\r\n          else if (this.state.MCQreturn == 'There was an issue adding question')\r\n          {alert(this.state.MCQreturn)}\r\n          else if (this.state.MCQreturn == 'Question already exists in the exam')\r\n          {alert(this.state.MCQreturn)}\r\n          else if (this.state.MCQreturn == 'There was an issue creating the exam')\r\n          {alert(this.state.MCQreturn)}\r\n        }\r\n        \r\n        \r\n      }\r\n      \r\n      async FetchComplete(ExamTitle,Question1,Question2,Answer,Grade,ILO)\r\n      {\r\n        const response = await fetch('/AddComplete/'+ExamTitle+'/'+this.state.id+'/'+Question1+'/'+Question2+'/'+Answer+'/'+Grade+'/'+ILO).then(response => response.json());\r\n        this.setState({Completereturn:response.CompleteReturn});\r\n\r\n      }\r\n\r\n      async SubmitComplete(ExamTitle,Question1,Question2,Answer,Grade,ILO)\r\n      {\r\n        if (this.handleFinishQuestion() == 0)\r\n        {\r\n\r\n        }\r\n        else\r\n        {\r\n          await this.FetchComplete(ExamTitle,Question1,Question2,Answer,Grade,ILO)\r\n        \r\n          if (this.state.Completereturn == 'Question is added successfully')\r\n          {this.setState({finished: true});}\r\n          else if (this.state.Completereturn == 'There was an issue adding question')\r\n          {alert(this.state.Completereturn)}\r\n          else if (this.state.Completereturn == 'Question already exists in the exam')\r\n          {alert(this.state.Completereturn)}\r\n          else if (this.state.Completereturn == 'There was an issue creating the exam')\r\n          {alert(this.state.Completereturn)}\r\n        }\r\n        \r\n      }\r\n\r\n      async FetchTF(ExamTitle, Question,Answer,Grade,ILO)\r\n      {\r\n        const response = await fetch('/AddTrueFalse/'+ExamTitle+'/'+this.state.id+'/'+Question+'/'+Answer+'/'+Grade+'/'+ILO).then(response => response.json());\r\n        this.setState({TFreturn:response.TFReturn});\r\n      }\r\n\r\n      async SubmitTrueFalse(ExamTitle, Question,Answer,Grade,ILO)\r\n      {\r\n        if (this.handleFinishQuestion() == 0)\r\n        {\r\n\r\n        }\r\n        else\r\n        {\r\n          await this.FetchTF(ExamTitle, Question,Answer,Grade,ILO)\r\n      \r\n          if (this.state.TFreturn == 'Question is added successfully')\r\n          {this.setState({finished: true});}\r\n          else if (this.state.TFreturn == 'There was an issue adding question')\r\n          {alert(this.state.TFreturn)}\r\n          else if (this.state.TFreturn == 'Question already exists in the exam')\r\n          {alert(this.state.TFreturn)}\r\n          else if (this.state.TFreturn == 'There was an issue creating the exam')\r\n          {alert(this.state.TFreturn)}\r\n        }\r\n        \r\n      }\r\n\r\n      async FetchEssay(ExamTitle, Question,Answer,Grade,ILO)\r\n      {\r\n        const response = await fetch('/AddEssay/'+ExamTitle+'/'+this.state.id+'/'+Question+'/'+Answer+'/'+Grade+'/'+ILO).then(response => response.json());\r\n        this.setState({Essayreturn:response.EssayReturn});\r\n      }\r\n\r\n      async SubmitEssay(ExamTitle, Question,Answer,Grade,ILO)\r\n      {\r\n        if (this.handleFinishQuestion() == 0)\r\n        {\r\n\r\n        }\r\n        else\r\n        {\r\n          await this.FetchEssay(ExamTitle, Question,Answer,Grade,ILO)\r\n        \r\n          if (this.state.Essayreturn == 'Question is added successfully')\r\n          {this.setState({finished: true});}\r\n          else if (this.state.Essayreturn == 'There was an issue adding question')\r\n          {alert(this.state.Essayreturn)}\r\n          else if (this.state.Essayreturn == 'Question already exists in the exam')\r\n          {alert(this.state.Essayreturn)}\r\n          else if (this.state.Essayreturn == 'There was an issue creating the exam')\r\n          {alert(this.state.Essayreturn)}\r\n        }\r\n        \r\n      }\r\n\r\n      handleSubmit(event)\r\n      {\r\n        this.setState({finished: false});\r\n        if (this.state.value=='MCQ')\r\n        {\r\n            document.getElementById('formExamMCQ').style.display='block';\r\n            document.getElementById('formExamComplete').style.display='none';\r\n            document.getElementById('formExamTF').style.display='none';\r\n            document.getElementById('formExamEssay').style.display='none';\r\n           \r\n            window.ChoiceCounter=0;\r\n            \r\n        }\r\n      else  if (this.state.value=='Complete')\r\n        {\r\n            document.getElementById('formExamComplete').style.display='block';\r\n            document.getElementById('formExamMCQ').style.display='none';\r\n            document.getElementById('formExamTF').style.display='none';\r\n            document.getElementById('formExamEssay').style.display='none';\r\n         \r\n        }\r\n       else if (this.state.value=='T and F')\r\n        {\r\n          document.getElementById('formExamTF').style.display='block';\r\n            document.getElementById('formExamComplete').style.display='none';\r\n            document.getElementById('formExamMCQ').style.display='none';\r\n            document.getElementById('formExamEssay').style.display='none';\r\n           \r\n        }\r\n       else if (this.state.value=='Essay Question')\r\n        {\r\n          document.getElementById('formExamEssay').style.display='block';\r\n          document.getElementById('formExamTF').style.display='none';\r\n            document.getElementById('formExamComplete').style.display='none';\r\n            document.getElementById('formExamMCQ').style.display='none';\r\n          \r\n        }\r\n        else\r\n        {\r\n          document.getElementById('formExamMCQ').style.display='none';\r\n          document.getElementById('formExamComplete').style.display='none';\r\n          document.getElementById('formExamTF').style.display='none';\r\n          document.getElementById('formExamEssay').style.display='none';\r\n        \r\n        }\r\n           \r\n      }\r\n      handleAddChoice()\r\n      { \r\n        \r\n        var x = document.createElement(\"div\");\r\n        x.setAttribute(\"class\", \"form-check form-check-inline\");\r\n        x.setAttribute(\"id\",\"choice\"+window.ChoiceCounter);\r\n        x.innerHTML='<input type=\"radio\" disabled class=\"form-check-input\">'+\r\n        '<label title for=\"formExamMCQ\" id= \"'+\"choice\"+window.ChoiceCounter+'\" class=\"form-check-label\">'+ document.getElementById('formChoiceTextbox').value+'</label>';\r\n        document.getElementById('ChoicesDiv').appendChild(x);\r\n        \r\n        var y=document.createElement(\"option\");\r\n        y.innerText=document.getElementById('formChoiceTextbox').value;\r\n        y.setAttribute(\"id\",\"option\"+window.ChoiceCounter);\r\n        document.getElementById('ChoiceModelAns').appendChild(y);\r\n        document.getElementById('formChoiceTextbox').value='';\r\n        window.ChoiceCounter++;\r\n      }\r\n      handleDeleteChoice()\r\n      {\r\n        window.ChoiceCounter--;\r\n        var y=document.getElementById('choice'+window.ChoiceCounter);\r\n        var z=document.getElementById('option'+window.ChoiceCounter);\r\n        document.getElementById('ChoicesDiv').removeChild(y);\r\n        document.getElementById('ChoiceModelAns').removeChild(z);\r\n      }\r\n\r\n      handleFinishQuestion()\r\n      {\r\n        if (document.getElementById('QuestionType').value=='MCQ')\r\n        {\r\n          if(document.getElementById('TextMCQuestion').value==\"\"|| document.getElementById('ChoiceModelAns').value==\"Choose Model Answer\"||\r\n           document.getElementById('MCQGrade').value==\"\"||document.getElementById('MCQILO').value==\"\")\r\n           {\r\n            alert(\"Please Fill All fields\")\r\n            return 0\r\n           }\r\n           else\r\n           {\r\n            window.ExamMCQQuestions.push(document.getElementById('TextMCQuestion').value);\r\n            window.ExamMCQCounter.push(window.ChoiceCounter);\r\n            for(var i=0;i<window.ChoiceCounter;i++)\r\n            {\r\n              \r\n              window.ExamMCQChoices.push(document.getElementById('choice'+i).textContent)\r\n            }\r\n           }\r\n\r\n        }\r\n        if (document.getElementById('QuestionType').value=='Complete')\r\n        {\r\n          \r\n          if(document.getElementById('TextComplete1').value==\"\"||document.getElementById('TextComplete2').value==\"\"||\r\n          document.getElementById('CompILO').value==\"\"||document.getElementById('CompGrade').value==\"\"||document.getElementById('AnswerComplete').value==\"\")\r\n          {\r\n            alert(\"Please Fill All fields\")\r\n            return 0\r\n          }\r\n          else\r\n          {\r\n            window.ExamComplete.push(document.getElementById('TextComplete1').value)\r\n            window.ExamComplete.push(document.getElementById('TextComplete2').value)\r\n          }\r\n  \r\n      \r\n        }\r\n        if (document.getElementById('QuestionType').value=='T and F')\r\n        {\r\n          if(document.getElementById('TextTF').value==\"\"||document.getElementById('TFIlo').value==\"\"||\r\n          document.getElementById('TFGrade').value==\"\"||document.getElementById('TFModelAns').value==\"Choose Model Answer\")\r\n          {\r\n            alert(\"Please Fill All fields\")\r\n            return 0\r\n          }\r\n          else\r\n          {\r\n            window.ExamTF.push(document.getElementById('TextTF').value)\r\n          }\r\n          \r\n        }\r\n        if (document.getElementById('QuestionType').value=='Essay Question')\r\n        {\r\n          if(document.getElementById('TextEssay').value==\"\"|| document.getElementById('AnswerEssay').value==\"\"||\r\n           document.getElementById('EssGrade').value==\"\"|| document.getElementById('EssILO').value==\"\")\r\n          {\r\n            alert(\"Please Fill All fields\")\r\n            return 0\r\n          }\r\n          else\r\n          {\r\n            window.ExamEssay.push(document.getElementById('TextEssay').value)\r\n          }\r\n          \r\n        }\r\n        document.getElementById(\"ExamForm\").reset();\r\n        $(\"#ChoiceModelAns\").empty();\r\n        $(\"#ChoicesDiv\").empty();\r\n        var y=document.createElement(\"option\");\r\n        y.innerText=\"Choose Model Answer\"\r\n        document.getElementById('ChoiceModelAns').appendChild(y);\r\n        document.getElementById('formExamMCQ').style.display='none';\r\n          document.getElementById('formExamComplete').style.display='none';\r\n          document.getElementById('formExamTF').style.display='none';\r\n          document.getElementById('formExamEssay').style.display='none';\r\n    \r\n         \r\n         \r\n      }\r\n     \r\n      handleFinishExam()\r\n      {\r\n        \r\n        \r\n        document.getElementById('ExamFinishBox').style.display='block';\r\n        \r\n      }\r\n      handleConfirm()\r\n      {\r\n          \r\n          if (document.getElementById('TextExamTitle').value==\"\")\r\n          {\r\n              alert(\"You Must Enter an Exam Title First !\")\r\n          }\r\n          else\r\n          {\r\n              window.ExamTitleBOX=document.getElementById('TextExamTitle').value\r\n              document.getElementById('ExamtitleBox').style.display='none';\r\n          }\r\n          \r\n      }\r\n      hideAlert(){\r\n        document.getElementById(\"FinishQuestionAlert\").style.display=\"none\";\r\n      }\r\n    render() {\r\n      var FinishQuestionAlert = \"\";\r\n      if (this.state.finished==true)\r\n      {\r\n        FinishQuestionAlert = <div id=\"FinishQuestionAlert\"> <Alert  key=\"FinishQuestionAlert\" variant='success'>Successfully Added Question to Exam<div className=\"d-flex justify-content-end\">\r\n        <Button onClick={this.hideAlert} variant=\"outline-success\">\r\n          Close \r\n        </Button>\r\n        </div></Alert>\r\n        <Button style={{ float:'right'}}onClick={this.handleFinishExam}   variant=\"success\" >Finish Exam</Button>\r\n        </div>;\r\n        \r\n      }\r\n      else\r\n      {\r\n        FinishQuestionAlert =\"\";\r\n      }\r\n      var IDToken = this.state.id\r\n      var username=this.state.name\r\n      const href1 = `#/instructor-home?${new URLSearchParams( {username,IDToken} ).toString()}`;\r\n        return (\r\n        <div>\r\n          <div style={{display:'none'}} class=\"modal-custom\" id=\"ExamFinishBox\">\r\n          <Modal.Dialog  >\r\n              <Modal.Header >\r\n              <Modal.Title>Exam Alert</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                Exam \"{window.ExamTitleBOX}\" is created successfully\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"primary\" onClick={event =>  window.location.href=href1} >Ok</Button>\r\n            </Modal.Footer>\r\n          </Modal.Dialog>\r\n          </div>\r\n          <div class=\"modal-custom\" id=\"ExamtitleBox\">\r\n          <Modal.Dialog  >\r\n              <Modal.Header >\r\n              <Modal.Title>Exam title</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <Form.Group controlId=\"formExamTitle\">\r\n                <Form.Control type=\"text\" id='TextExamTitle' placeholder=\"Enter Exam Title\" />\r\n                <Form.Text className=\"text-muted\">\r\n                Ex: Marketing Midterm Spring 2020\r\n                </Form.Text>\r\n                </Form.Group>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"primary\" onClick={this.handleConfirm} >Confirm</Button>\r\n            </Modal.Footer>\r\n          </Modal.Dialog>\r\n          </div>\r\n              \r\n    <Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\r\n        <br />\r\n    <Form id=\"ExamForm\" style={{backgroundColor:'white'}}>\r\n  <Form.Group controlId=\"formQuestionType\">\r\n    <Form.Label>Question Type</Form.Label>\r\n    <Row>\r\n    <Form.Control id=\"QuestionType\" as=\"select\" style={{width:'35%',margin: '15px 15px 15px 15px'}} value={this.state.value} onChange={this.handleChange} placeholder=\"Choose Question Type\">\r\n    <option>Choose Question Type</option>\r\n    <option>MCQ</option>\r\n    <option>Complete</option>\r\n    <option>T and F</option>\r\n    <option>Essay Question</option>\r\n    <option hidden>Comparison</option>\r\n    </Form.Control>\r\n    <Button variant=\"primary\" id=\"QuestionTypeBtn\" onClick={this.handleSubmit} >Submit</Button>\r\n   \r\n\r\n    </Row>\r\n    <Form.Text className=\"text-muted\">\r\n      Note: You can change Question Type at anytime from above\r\n    </Form.Text>\r\n\r\n    {FinishQuestionAlert}\r\n\r\n  </Form.Group>\r\n  \r\n  <Form.Group  style={{display:'none'}} id=\"formExamMCQ\" controlId=\"formExamMCQ\">\r\n \r\n    <Form.Label>Multiple Choice Question</Form.Label>\r\n    <Row>\r\n    <Form.Control id=\"MCQILO\"  size=\"sm\" type=\"text\" style={{width:'50%',margin: '15px 15px 15px 15px'}} placeholder=\"Enter Question ILO\"></Form.Control>\r\n  <Form.Control   id=\"MCQGrade\" size=\"sm\" style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\" placeholder=\"Enter Your Grade\" />\r\n   \r\n   </Row>\r\n    <Form.Control size=\"sm\" id=\"TextMCQuestion\" type=\"text\" placeholder=\"Enter Your Question\" />\r\n    <br />\r\n    <Form.Control  size=\"sm\" id=\"formChoiceTextbox\" type=\"text\" placeholder=\"Enter a Choice\" />\r\n    <Button  size=\"sm\" variant=\"primary\" onClick={this.handleAddChoice}>Add Choice</Button>\r\n    <Button id=\"btnDeleteChoice\"  size=\"sm\" variant=\"danger\" onClick={this.handleDeleteChoice}>Delete Choice</Button>\r\n    <div id=\"ChoicesDiv\"></div>\r\n    <Form.Control size=\"sm\" as=\"select\" id=\"ChoiceModelAns\" placeholder=\"Choose Model Answer\">\r\n    <option>Choose Model Answer</option>\r\n    </Form.Control>\r\n    <Button style={{ float:'right'}} variant=\"success\" onClick={()=>{this.SubmitMCQ(window.ExamTitleBOX, document.getElementById('TextMCQuestion').value, window.ExamMCQChoices, \r\n      document.getElementById('ChoiceModelAns').value, document.getElementById('MCQGrade').value,document.getElementById('MCQILO').value)\r\n      }}>Finish Question</Button>\r\n  </Form.Group>\r\n\r\n\r\n  <Form.Group style={{display:'none'}} id=\"formExamComplete\" controlId=\"formExamComplete\">\r\n   \r\n    <Form.Label>Complete Question</Form.Label>\r\n    <Row>\r\n    <Form.Control id=\"CompILO\"  size=\"sm\" type=\"text\" style={{width:'50%',margin: '15px 15px 15px 15px'}} placeholder=\"Enter Question ILO\"></Form.Control>\r\n  <Form.Control id=\"CompGrade\" size=\"sm\" style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\" placeholder=\"Enter Your Grade\" />\r\n   \r\n   </Row>\r\n    <Form.Control size=\"sm\" id=\"TextComplete1\" type=\"text\" placeholder=\"Enter Your 1st part of the Question *before the space*\" />\r\n    <Form.Control size=\"sm\"id=\"TextComplete2\" type=\"text\" placeholder=\"Enter Your 2nd part of the Question *after the space*\" />\r\n    <br />\r\n    <Form.Control size=\"sm\" id=\"AnswerComplete\" type=\"text\" placeholder=\"Enter Your Model Answer *the space*\" />\r\n    <Button style={{ float:'right'}}variant=\"success\"onClick={()=>{this.SubmitComplete(window.ExamTitleBOX,document.getElementById('TextComplete1').value, document.getElementById('TextComplete2').value, \r\n      document.getElementById('AnswerComplete').value, document.getElementById('CompGrade').value, document.getElementById('CompILO').value)}} >Finish Question</Button>\r\n    \r\n  </Form.Group>\r\n\r\n\r\n  <Form.Group style={{display:'none'}} id=\"formExamTF\" controlId=\"formExamTF\">\r\n    <Form.Label>True and False Question</Form.Label>\r\n    <Row>\r\n    <Form.Control id=\"TFIlo\"  size=\"sm\" type=\"text\" style={{width:'50%',margin: '15px 15px 15px 15px'}} placeholder=\"Enter Question ILO\"></Form.Control>\r\n   <Form.Control id=\"TFGrade\" size=\"sm\" style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\" placeholder=\"Enter Your Grade\" />\r\n   \r\n   </Row>\r\n    <Form.Control size=\"sm\" id=\"TextTF\" type=\"text\" placeholder=\"Enter Your Question\" />\r\n      <br />\r\n      <Form.Control size=\"sm\" as=\"select\" id=\"TFModelAns\" placeholder=\"Choose Model Answer\">\r\n    <option>Choose Model Answer</option>\r\n    <option>True</option>\r\n    <option>False</option>\r\n    </Form.Control>\r\n    <Button style={{ float:'right'}} variant=\"success\" \r\n    onClick={ ()=>{this.SubmitTrueFalse(window.ExamTitleBOX,document.getElementById('TextTF').value , \r\n    document.getElementById('TFModelAns').value, document.getElementById('TFGrade').value, document.getElementById('TFIlo').value)}}>Finish Question</Button>\r\n    \r\n  </Form.Group>\r\n\r\n\r\n  <Form.Group style={{display:'none'}} id=\"formExamEssay\" controlId=\"formExamEssay\">\r\n    <Form.Label>Essay Question</Form.Label>\r\n    <Row>\r\n    <Form.Control id=\"EssILO\" size=\"sm\" type=\"text\" style={{width:'50%',margin: '15px 15px 15px 15px'}} placeholder=\"Enter Question ILO\"></Form.Control>\r\n   <Form.Control id=\"EssGrade\" size=\"sm\" style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\" placeholder=\"Enter Your Grade\" />\r\n   \r\n   </Row>\r\n    <Form.Control size=\"sm\" id=\"TextEssay\" type=\"text\" placeholder=\"Enter Your Essay Question\" />\r\n   <br />\r\n    <Form.Control size=\"sm\" as=\"textarea\"id=\"AnswerEssay\" placeholder=\"Enter Your Model Answer\" />\r\n    <Button style={{ float:'right'}} variant=\"success\" \r\n    onClick={()=>{this.SubmitEssay(window.ExamTitleBOX,document.getElementById('TextEssay').value , \r\n    document.getElementById('AnswerEssay').value, document.getElementById('EssGrade').value, document.getElementById('EssILO').value)}}\r\n    >Finish Question</Button>\r\n    \r\n  </Form.Group>\r\n</Form>\r\n\r\n </Container>\r\n            \r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateExam;\r\n","import React, { Component } from 'react';\r\n//import { Link } from 'react-router-dom';\r\nimport './CreateExam.css';\r\nimport './Popup.css';\r\n//import Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\n//import Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\n//import DropdownButton from 'react-bootstrap/DropdownButton';\r\n//import Dropdown from 'react-bootstrap/Dropdown';\r\nimport Modal from 'react-bootstrap/Modal'\r\n//import ListGroup from 'react-bootstrap/ListGroup'\r\nimport Alert from 'react-bootstrap/Alert'\r\nclass FromExisting extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {value: '',ILO:[], Mixreturn:[], QuestionList:[], CounterList:[], AnswerList:[],\r\n      CorrectAnswerList:[], ILOList:[], GradeList:[], id:null, finished:false, name:null};\r\n      const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n      const ID = params.get('IDToken');\r\n      this.state.id=ID\r\n      this.GetILO();  \r\n      this.GetInstUsername()  \r\n      \r\n    }\r\n\r\n    GetILO()\r\n    {\r\n      fetch('/GetILO/'+this.state.id)\r\n        .then(response => response.json())\r\n        .then(data => this.setState({ILO : data.ILO_List}));\r\n    }\r\n\r\n    GetInstUsername()\r\n    {\r\n      fetch('/GetInstUsername/'+this.state.id)\r\n        .then(response => response.json())\r\n        .then(data => this.setState({name : data.username}));\r\n    }\r\n\r\n    async FetchMix(ExamTitle, QuestionType, ILO, Number)\r\n    {\r\n      const response = await fetch('/MixQuestion/'+ExamTitle+'/'+this.state.id+'/'+QuestionType+'/'+ILO+'/'+Number).then(response => response.json());\r\n      this.setState({Mixreturn:response.MixQues});\r\n    }\r\n\r\n    async MixQuestion(ExamTitle, QuestionType, ILO, Number)\r\n    {\r\n      if(document.getElementById('QuesType').value==\"Choose Question Type\"|| document.getElementById('ILO').value==\"\"|| document.getElementById('Number').value==\"\")\r\n      {\r\n       alert(\"Please Fill All fields\")\r\n      }\r\n      else\r\n      {\r\n      // fetch('/MixQuestion/'+ExamTitle+'/'+this.state.id+'/'+QuestionType+'/'+ILO+'/'+Number)\r\n      //   .then(response => response.json())\r\n      //   .then(data => this.setState({Mixreturn : data.MixQues}));\r\n      await this.FetchMix(ExamTitle, QuestionType, ILO, Number)\r\n      \r\n      if (this.state.Mixreturn == 'There was an issue, please try again')\r\n      {\r\n        alert('There was an issue, please try again')\r\n      }\r\n      else if (this.state.Mixreturn == \"Question is added successfully\")\r\n      {\r\n        this.setState({finished: true});\r\n      }\r\n      else //required number is more than the available questions in the database with the needed ilo\r\n      {\r\n        alert(this.state.Mixreturn)\r\n      }\r\n    }\r\n    }\r\n    handleConfirm()\r\n    {\r\n        \r\n        if (document.getElementById('TextExamTitle').value==\"\")\r\n        {\r\n            alert(\"You Must Enter an Exam Title First !\")\r\n        }\r\n        else\r\n        {\r\n            window.ExamTitleBOX=document.getElementById('TextExamTitle').value\r\n            document.getElementById('ExamtitleBox').style.display='none';\r\n        }\r\n        \r\n    }\r\n    handleFinishExam()\r\n    {\r\n      \r\n      document.getElementById('ExamFinishBox').style.display='block';\r\n      \r\n    }\r\n    hideAlert(){\r\n      document.getElementById(\"FromExsitExamForm\").style.display=\"block\";\r\n      document.getElementById(\"FromExsitExamForm\").reset();\r\n      document.getElementById(\"FinishQuestionAlert\").style.display=\"none\";\r\n    }\r\n    render() {\r\n      var FinishQuestionAlert = \"\";\r\n      if (this.state.finished==true)\r\n      {\r\n        \r\n        \r\n        FinishQuestionAlert = <div id=\"FinishQuestionAlert\"> <Alert  key=\"FinishQuestionAlert\" variant='success'>Successfully Added to Exam<div className=\"d-flex justify-content-end\">\r\n        <Button onClick={this.hideAlert} variant=\"outline-success\">\r\n          Add Again \r\n        </Button>\r\n        </div></Alert>\r\n        <Button style={{ float:'right'}} size=\"lg\" onClick={this.handleFinishExam}   variant=\"success\" >Finish Exam</Button>\r\n        </div>;\r\n        document.getElementById(\"FromExsitExamForm\").style.display=\"none\";\r\n      }\r\n      else\r\n      {\r\n        FinishQuestionAlert =\"\";\r\n      }\r\n      var IDToken = this.state.id\r\n      var username=this.state.name\r\n      const href1 = `#/instructor-home?${new URLSearchParams( {username,IDToken} ).toString()}`;\r\n        return (\r\n        <div>\r\n          <div style={{display:'none'}} class=\"modal-custom\" id=\"ExamFinishBox\">\r\n          <Modal.Dialog  >\r\n              <Modal.Header >\r\n              <Modal.Title>Exam Alert</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                Exam \"{window.ExamTitleBOX}\" Created Successfully\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"primary\" onClick={event =>  window.location.href=href1} >Ok</Button>\r\n            </Modal.Footer>\r\n          </Modal.Dialog>\r\n          </div>\r\n          <div class=\"modal-custom\" id=\"ExamtitleBox\">\r\n          <Modal.Dialog  >\r\n              <Modal.Header closeButton>\r\n              <Modal.Title>Exam title</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <Form.Group controlId=\"formExamTitle\">\r\n                <Form.Control type=\"text\" id='TextExamTitle' placeholder=\"Enter Exam Title\" />\r\n                <Form.Text className=\"text-muted\">\r\n                Ex: Marketing Midterm Spring 2020\r\n                </Form.Text>\r\n                </Form.Group>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"primary\" onClick={this.handleConfirm} >Confirm</Button>\r\n            </Modal.Footer>\r\n          </Modal.Dialog>\r\n          </div>\r\n              \r\n    <Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\r\n        <br />\r\n        {FinishQuestionAlert}\r\n    <Form style={{backgroundColor:'white'}}id=\"FromExsitExamForm\">\r\n    <Form.Label>Now you can Randomly Select Questions According to it's Topic and Type</Form.Label>\r\n    <Form.Label>Choose ILO/Topic</Form.Label>\r\n  <Form.Group controlId=\"formQuestionType\">\r\n    <Row>\r\n    <Form.Control as=\"select\" id=\"ILO\" style={{width:'50%',margin: '15px 15px 15px 15px'}} >\r\n    {this.state.ILO.map((fbb) => <option key={fbb.key} value={fbb.key} >{fbb}</option>)}\r\n    </Form.Control>\r\n\r\n\r\n    <Form.Control id=\"QuestionType\" as=\"select\" id=\"QuesType\" style={{width:'40%',margin: '15px 15px 15px 15px'}}  placeholder=\"Choose Question Type\">\r\n    <option>Choose Question Type</option>\r\n    <option>MCQ</option>\r\n    <option>Complete</option>\r\n    <option>T and F</option>\r\n    <option>Essay</option>\r\n    </Form.Control>\r\n    </Row>\r\n    <Row>\r\n   \r\n    <Form.Control required id=\"Number\"  style={{width:'50%',margin: '15px 15px 15px 15px'}} type=\"number\" placeholder=\"Enter Number of Questions Needed\" />\r\n    <Button variant=\"primary\"style={{width:'40%',margin: '15px 15px 15px 15px'}} onClick={()=>{this.MixQuestion(window.ExamTitleBOX,\r\n    document.getElementById('QuesType').value, document.getElementById('ILO').value, document.getElementById('Number').value)\r\n      }}\r\n     >Add to Exam</Button>\r\n   </Row>\r\n   \r\n  \r\n  </Form.Group>\r\n  \r\n</Form>\r\n\r\n </Container>\r\n            \r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FromExisting;\r\n","import React, { Component } from 'react';\r\n//import { Link } from 'react-router-dom';\r\nimport './ViewExams.css';\r\n//import Card from 'react-bootstrap/Card';\r\n//import Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\n//import Row from 'react-bootstrap/Row';\r\n//import Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\n//import SignInForm from './SignInForm.js';\r\n\r\nclass ViewExams extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', Exams:null,id:null};\r\n        //alert(window.IDToken)\r\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n        const ID = params.get('IDToken');\r\n        this.state.id=ID\r\n        //alert(this.state.id)\r\n        fetch('/ViewExams/'+this.state.id)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({Exams : data.ans}));\r\n        \r\n          \r\n    }\r\n\r\n    render() {\r\n       //var names= window.ExamTitle;\r\n       var names = this.state.Exams\r\n       \r\n       //enta 3yz el list kolha wla esm w7ed bs\r\n       if (names==null)\r\n       {\r\n        var nameslist='No Exams Yet'\r\n       }\r\n       else\r\n       {\r\n        const ID = this.state.id;\r\n        var nameslist= names.map(function(name){\r\n            const href = `/#/instructor-exam?${new URLSearchParams({ name,ID }).toString()}`;\r\n            return <ListGroup.Item href={href} action>{name}</ListGroup.Item>;\r\n\r\n          })\r\n         \r\n       }\r\n    \r\n        \r\n       return (\r\n        <div>\r\n          \r\n          <h1>All Exams</h1>\r\n   \r\n    <Container style={{width:'660px',height:'550px',backgroundColor:'white', overflow:'scroll'}}>\r\n        <br />\r\n        <ListGroup style={{textAlign: 'center'}}  >{nameslist}</ListGroup>\r\n    </Container>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ViewExams;\r\n","import React, { Component } from 'react';\r\n//import { Link } from 'react-router-dom';\r\nimport './ViewExams.css';\r\n//import Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\n//import Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nclass ViewEdit extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {value: '', Exams:null, Deleted:null, id:null};\r\n      const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n      const ID = params.get('IDToken');\r\n      this.state.id=ID\r\n      fetch('/ViewExams/'+this.state.id)\r\n        .then(response => response.json())\r\n        .then(data => this.setState({Exams : data.ans}));\r\n        \r\n    }\r\n\r\n    async FetchDelete(ExamTitle)\r\n    {\r\n      const response = await fetch('/DeleteExam/'+ExamTitle).then(response => response.json());\r\n      this.setState({Deleted:response.Deleted});\r\n    }\r\n    async DeleteExam(ExamTitle)\r\n    {\r\n      await this.FetchDelete(ExamTitle)\r\n      window.location.reload(false);\r\n    }\r\n\r\n    render() {\r\n       //var names=  window.ExamTitle;\r\n       var names = this.state.Exams\r\n       if (names==null)\r\n       {\r\n        var nameslist='No Exams Yet'\r\n       }\r\n       else\r\n       { \r\n   \r\n\r\n        var  nameslist= names.map((name)=>{\r\n            const ID = this.state.id\r\n            const href1 = `/#/instructor-view-edit-exam?${new URLSearchParams({ name,ID }).toString()}`;\r\n            return (\r\n                \r\n                <Row style={{ justifyContent:'space-evenly'}}>\r\n                  <ListGroup style={{textAlign: 'center',width:'70%',margin: '10px 10px 10px 10px'}} >\r\n                    <ListGroup.Item href=\"/#/instructor-exam\"disabled>{name}</ListGroup.Item>\r\n                   </ ListGroup>\r\n                  \r\n                 <Button style={{width:'10%',margin: '10px 10px 10px 10px'}} href={href1} size=\"sm\" variant=\"primary\" >Edit</ Button>\r\n                 <Button style={{width:'10%',margin: '10px 10px 10px 10px'}} href=\"#\" size=\"sm\" variant=\"danger\" \r\n                 onClick={()=>{this.DeleteExam(name)}} >Delete</ Button>\r\n                </Row>\r\n    \r\n              \r\n                   ) \r\n          })\r\n       }\r\n    \r\n        \r\n       return (\r\n        <div>\r\n          \r\n          <h1>All Exams</h1>\r\n   \r\n    <Container style={{width:'660px',height:'550px',backgroundColor:'white', overflow:'scroll'}}>\r\n        <br />\r\n        {nameslist}\r\n    </Container>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ViewEdit;\r\n","import React, { Component } from 'react';\r\n//import { Link } from 'react-router-dom';\r\nimport './ViewExams.css';\r\n//import Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\n//import Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport Alert from 'react-bootstrap/Alert'\r\nclass ViewGrade extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {value: '', Exams:null, Grades:null, id:null};\r\n    const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n    const ID = params.get('IDToken');\r\n    this.state.id=ID\r\n    this.GetExams()\r\n    this.GradeExam = this.GradeExam.bind(this);\r\n      \r\n  }\r\n  showProgress()\r\n  {\r\n    document.getElementById(\"Progressbar\").style.display='block';\r\n\r\n    \r\n    \r\n  }\r\n  GetExams()\r\n  {\r\n    fetch('/ViewExams/'+this.state.id)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({Exams : data.ans}));\r\n  }\r\n\r\n  async FetchGrade(ExamTitle)\r\n  {\r\n    const response = await fetch('/GradeExam/'+ExamTitle).then(response => response.json());\r\n    this.setState({Grades:response.Grades});\r\n  }\r\n\r\n  async GradeExam(ExamTitle)\r\n  {\r\n    window.GradedExam=ExamTitle\r\n    this.showProgress();\r\n    await this.FetchGrade(ExamTitle);\r\n  }\r\n  hideAlert(){\r\n    document.getElementById(\"FinishGradingAlert\").style.display=\"none\";\r\n  }\r\n    render() {\r\n        var FinishGradingAlert = \"\";\r\n        if(this.state.Grades=='Finished generating the excel sheet successfully')\r\n        {\r\n          document.getElementById(\"Progressbar\").style.display='none';\r\n          \r\n          FinishGradingAlert = <div id=\"FinishGradingAlert\"> <Alert  key=\"FinishGradingAlert\" variant='success'>Successfully Finished Grading '{window.GradedExam}' Exam <div className=\"d-flex justify-content-end\">\r\n            <Button onClick={this.hideAlert} variant=\"outline-success\">\r\n              Close \r\n            </Button>\r\n            </div></Alert>\r\n            </div>\r\n            \r\n        }\r\n          else\r\n          {\r\n            FinishGradingAlert =\"\";\r\n          }\r\n        \r\n      \r\n       var names= this.state.Exams\r\n       if (names==null)\r\n       {\r\n        var nameslist='No Exams Yet'\r\n       }\r\n       else\r\n       { \r\n   \r\n\r\n           var nameslist= names.map((name)=>{\r\n            return (\r\n                \r\n                <Row style={{ justifyContent:'space-evenly'}}>\r\n                  <ListGroup style={{textAlign: 'center',width:'80%',margin: '10px 10px 10px 10px'}} >\r\n                    <ListGroup.Item href=\"/#/instructor-exam\"disabled>{name}</ListGroup.Item>\r\n                   </ ListGroup>\r\n                 <Button style={{width:'10%',margin: '10px 10px 10px 10px'}} size=\"sm\" variant=\"success\" onClick={()=>this.GradeExam(name)} >Grade</ Button>\r\n               \r\n                </Row>\r\n    \r\n              \r\n                   ) \r\n          })\r\n       }\r\n    \r\n        \r\n       return (\r\n        <div>\r\n          \r\n          <h1>All Exams</h1>\r\n   \r\n    <Container style={{width:'660px',height:'550px',backgroundColor:'white', overflow:'scroll'}}>\r\n        <br />\r\n        {nameslist}\r\n        <Row style={{justifyContent:'center'}}>\r\n      <Spinner style={{display:'none'}} id=\"Progressbar\" animation=\"border\" variant=\"primary\" role=\"status\">\r\n       <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      </Row>\r\n      {FinishGradingAlert}\r\n    </Container>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ViewGrade;\r\n","import React, { Component } from 'react';\r\n//import { Link } from 'react-router-dom';\r\nimport './CreateExam.css';\r\nimport './Popup.css';\r\n//import Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\n//import Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\n//import DropdownButton from 'react-bootstrap/DropdownButton';\r\n//import Dropdown from 'react-bootstrap/Dropdown';\r\n\r\nclass EditMCQ extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {value: '', Question:null, AnswerList:null, CorrectAnswer:null, ILO:null,  Grade:null, IsUpdated:null,\r\n      OldQuestion:null};\r\n      //this.GetMCQInfo()\r\n      this.Autofill()\r\n      \r\n    }\r\n\r\n    //this is for one question\r\n    async GetMCQInfo()\r\n    {\r\n      const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n      const exam = params.get('exam');\r\n      //params = new URLSearchParams(window.location.hash.split(\"?\")[2]);\r\n      const question = params.get('question');\r\n      const id = params.get('id');\r\n      const response = await fetch('/GetAMCQ/'+exam+'/'+id+'/'+question).then(response => response.json());\r\n      this.setState({Question:response.Question, AnswerList:response.AnswerList,\r\n          CorrectAnswer:response.CorrectAnswer, ILO:response.ILO,  Grade:response.Grade});\r\n\r\n    \r\n    }\r\n\r\n    async FetchUpdateMCQ(question, NewQuestion, NewAnswers, NewCorrectAns, exam, NewILO, NewGrade, id)\r\n    {\r\n        const response = await fetch('/UpdateMCQ/'+question+'/'+NewQuestion+'/'+NewAnswers+'/'+NewCorrectAns+'/'+exam+'/'\r\n        +NewILO+'/'+NewGrade+'/'+id).then(response => response.json());\r\n        this.setState({IsUpdated:response.Updated});\r\n    }\r\n\r\n    //et2aked ml choices variable\r\n    async UpdateMCQ(NewQuestion, NewAnswers, NewCorrectAns, NewILO, NewGrade)\r\n    {\r\n      window.ExamMCQChoices=[]\r\n      \r\n      for(var i=0;i<window.ChoiceCounter;i++)\r\n      {\r\n        \r\n        window.ExamMCQChoices.push(document.getElementById('choice'+i).textContent)\r\n      }\r\n      NewAnswers=window.ExamMCQChoices;\r\n      const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n      const exam = params.get('exam');\r\n      //params = new URLSearchParams(window.location.hash.split(\"?\")[2]);\r\n      const question = params.get('question');\r\n      const id = params.get('id');\r\n      await this.FetchUpdateMCQ(question, NewQuestion, NewAnswers, NewCorrectAns, exam, NewILO, NewGrade, id)\r\n      if (this.state.IsUpdated == \"Successfully updated\")\r\n      {\r\n          alert(\"Successfully updated\")\r\n      }\r\n      else\r\n      {\r\n          alert(\"There was an issue in update, please try again\")\r\n      }\r\n      \r\n      //this.handleSave();\r\n    }\r\n\r\n    async Autofill()\r\n    {\r\n        await this.GetMCQInfo();\r\n        document.getElementById('MCQILO').value=this.state.ILO;\r\n        document.getElementById('MCQGrade').value=this.state.Grade;\r\n        document.getElementById('TextMCQuestion').value=this.state.Question;\r\n       \r\n        var ExamMCQChoices=this.state.AnswerList;\r\n      \r\n        ExamMCQChoices = ExamMCQChoices.toString().split(',');\r\n        window.ChoiceCounter=0;\r\n        for(var i=0;i<ExamMCQChoices.length;i++)\r\n        {\r\n          var x = document.createElement(\"div\");\r\n          x.setAttribute(\"class\", \"form-check form-check-inline\");\r\n          x.setAttribute(\"id\",\"choice\"+i);\r\n          x.innerHTML='<input type=\"radio\" disabled class=\"form-check-input\">'+\r\n          '<label title for=\"formExamMCQ\" id= \"'+\"choice\"+i+'\" class=\"form-check-label\">'+ ExamMCQChoices[i]+'</label>';\r\n          document.getElementById('ChoicesDiv').appendChild(x);\r\n          \r\n          var y=document.createElement(\"option\");\r\n          y.innerText=ExamMCQChoices[i];\r\n          y.setAttribute(\"id\",\"option\"+i);\r\n          document.getElementById('ChoiceModelAns').appendChild(y);\r\n          window.ChoiceCounter=i;\r\n        }\r\n        window.ChoiceCounter+=1;\r\n        document.getElementById('ChoiceModelAns').value=this.state.CorrectAnswer;\r\n    }\r\n   handleSave()\r\n   {\r\n    if (this.state.IsUpdated == \"Successfully updated\")\r\n    {\r\n      alert(\"Saved Successfully\");\r\n    }\r\n    else\r\n    {\r\n      alert(\"Unsuccessful try\");\r\n      window.location.reload(false);\r\n    } \r\n   }\r\n\r\n   handleAddChoice()\r\n   { \r\n     \r\n     var x = document.createElement(\"div\");\r\n     x.setAttribute(\"class\", \"form-check form-check-inline\");\r\n     x.setAttribute(\"id\",\"choice\"+window.ChoiceCounter);\r\n     x.innerHTML='<input type=\"radio\" disabled class=\"form-check-input\">'+\r\n     '<label title for=\"formExamMCQ\" id= \"'+\"choice\"+window.ChoiceCounter+'\" class=\"form-check-label\">'+ document.getElementById('formChoiceTextbox').value+'</label>';\r\n     document.getElementById('ChoicesDiv').appendChild(x);\r\n     \r\n     var y=document.createElement(\"option\");\r\n     y.innerText=document.getElementById('formChoiceTextbox').value;\r\n     y.setAttribute(\"id\",\"option\"+window.ChoiceCounter);\r\n     document.getElementById('ChoiceModelAns').appendChild(y);\r\n     document.getElementById('formChoiceTextbox').value='';\r\n     window.ChoiceCounter++;\r\n   }\r\n   handleDeleteChoice()\r\n   {\r\n     window.ChoiceCounter--;\r\n     var y=document.getElementById('choice'+window.ChoiceCounter);\r\n     var z=document.getElementById('option'+window.ChoiceCounter);\r\n     document.getElementById('ChoicesDiv').removeChild(y);\r\n     document.getElementById('ChoiceModelAns').removeChild(z);\r\n   }\r\n    render() {\r\n        return (\r\n        <div>\r\n      <Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\r\n              <br />\r\n      <Form.Group   id=\"formExamMCQ\" controlId=\"formExamMCQ\">\r\n      \r\n      <Form.Label>Multiple Choice Question</Form.Label>\r\n      <Row>\r\n      <Form.Control  size=\"sm\" type=\"text\" id=\"MCQILO\" style={{width:'50%',margin: '15px 15px 15px 15px'}} placeholder=\"Enter Question ILO\"></Form.Control>\r\n      <Form.Control required size=\"sm\"id=\"MCQGrade\" style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\" placeholder=\"Enter Your Grade\" />\r\n\r\n      </Row>\r\n      <Form.Control required size=\"sm\" id=\"TextMCQuestion\" type=\"text\" placeholder=\"Enter Your Question\" />\r\n      <br />\r\n      <Form.Control  required size=\"sm\" id=\"formChoiceTextbox\" type=\"text\" placeholder=\"Enter a Choice\" />\r\n      <Button  size=\"sm\" variant=\"primary\" onClick={this.handleAddChoice}>Add Choice</Button>\r\n      <Button id=\"btnDeleteChoice\"  size=\"sm\" variant=\"danger\" onClick={this.handleDeleteChoice}>Delete Choice</Button>\r\n      <div id=\"ChoicesDiv\"></div>\r\n      <Form.Control required size=\"sm\" as=\"select\" id=\"ChoiceModelAns\" placeholder=\"Choose Model Answer\">\r\n      <option>Choose Model Answer</option>\r\n      </Form.Control>\r\n      <Button size=\"sm\" style={{ float:'right'}} variant=\"success\"\r\n      onClick={()=>{this.UpdateMCQ(document.getElementById('TextMCQuestion').value, \r\n      window.ExamMCQChoices, document.getElementById('ChoiceModelAns').value, \r\n      document.getElementById('MCQILO').value, document.getElementById('MCQGrade').value)\r\n      }}\r\n        >Save Changes</Button>\r\n      </Form.Group>\r\n      </Container>\r\n\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default EditMCQ;","import React, { Component } from 'react';\r\n//import { Link } from 'react-router-dom';\r\nimport './CreateExam.css';\r\nimport './Popup.css';\r\n//import Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\n//import Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\n//import DropdownButton from 'react-bootstrap/DropdownButton';\r\n//import Dropdown from 'react-bootstrap/Dropdown';\r\n\r\nclass EditTF extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', Question:null, CorrectAnswer:null, ILO:null,  Grade:null, IsUpdated:null,\r\n        OldQuestion:null};\r\n        //this.GetTFInfo()\r\n        this.Autofill()\r\n          \r\n    }\r\n\r\n    //this is for one question\r\n    async GetTFInfo()\r\n    {\r\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n        const exam = params.get('exam');\r\n        //params = new URLSearchParams(window.location.hash.split(\"?\")[2]);\r\n        const question = params.get('question');\r\n        const id = params.get('id');\r\n        const response = await fetch('/GetATrueFalseQues/'+exam+'/'+id+'/'+question).then(response => response.json());\r\n        this.setState({Question:response.Question, CorrectAnswer:response.CorrectAnswer, ILO:response.ILO,  Grade:response.Grade});\r\n\r\n    }\r\n\r\n    async FetchUpdateTF(question, NewQuestion, NewCorrectAns, exam, NewILO, NewGrade, id)\r\n    {\r\n        const response = await fetch('/UpdateTrueFalse/'+question+'/'+NewQuestion+'/'+NewCorrectAns+'/'+exam+'/'\r\n        +NewILO+'/'+NewGrade+'/'+id).then(response => response.json());\r\n        this.setState({IsUpdated:response.Updated});\r\n    }\r\n\r\n    async UpdateTrueFalse(NewQuestion, NewCorrectAns, NewILO, NewGrade)\r\n    {\r\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n        const exam = params.get('exam');\r\n        //params = new URLSearchParams(window.location.hash.split(\"?\")[2]);\r\n        const question = params.get('question');\r\n        const id = params.get('id');\r\n\r\n        await this.FetchUpdateTF(question, NewQuestion, NewCorrectAns, exam, NewILO, NewGrade, id)\r\n        if (this.state.IsUpdated == \"Successfully updated\")\r\n        {\r\n            alert(\"Successfully updated\")\r\n        }\r\n        else\r\n        {\r\n            alert(\"There was an issue in update, please try again\")\r\n        }\r\n        \r\n        //this.handleSave();\r\n    }\r\n\r\n    async Autofill()\r\n    {\r\n        await this.GetTFInfo();\r\n        document.getElementById('TFILO').value=this.state.ILO;\r\n        document.getElementById('TFGrade').value=this.state.Grade;\r\n        document.getElementById('TextTF').value=this.state.Question;\r\n        document.getElementById('TFModelAns').value=this.state.CorrectAnswer;\r\n    }\r\n\r\n    handleSave()\r\n    {\r\n     if (this.state.IsUpdated == \"Successfully updated\")\r\n     {\r\n       alert(\"Saved Successfully\");\r\n     }\r\n     else\r\n     {\r\n       alert(\"Unsuccessful try\");\r\n       window.location.reload(false);\r\n     } \r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n<Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\r\n        <br />\r\n<Form.Group  id=\"formExamTF\" controlId=\"formExamTF\">\r\n    <Form.Label>True and False Question</Form.Label>\r\n    <Row>\r\n    <Form.Control  size=\"sm\"id=\"TFILO\" type=\"text\" style={{width:'50%',margin: '15px 15px 15px 15px'}}\r\n    placeholder=\"Enter Question ILO\"></Form.Control>\r\n   <Form.Control size=\"sm\"id=\"TFGrade\" style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\"\r\n   placeholder=\"Enter Your Grade\" />\r\n   \r\n   </Row>\r\n    <Form.Control size=\"sm\" id=\"TextTF\" type=\"text\" placeholder=\"Enter Your Question\" />\r\n      <br />\r\n      <Form.Control size=\"sm\" as=\"select\" id=\"TFModelAns\" placeholder=\"Choose Model Answer\">\r\n    <option>Choose Model Answer</option>\r\n    <option>True</option>\r\n    <option>False</option>\r\n    </Form.Control>\r\n    <Button size=\"sm\" style={{ float:'right'}} variant=\"success\"\r\n    onClick={()=>{this.UpdateTrueFalse(document.getElementById('TextTF').value, \r\n    document.getElementById('TFModelAns').value, document.getElementById('TFILO').value, \r\n    document.getElementById('TFGrade').value)\r\n    }}\r\n     >Save Changes</Button>\r\n   \r\n    </Form.Group>\r\n    </Container>\r\n    \r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default EditTF;","import React, { Component } from 'react';\r\n//import { Link } from 'react-router-dom';\r\nimport './CreateExam.css';\r\nimport './Popup.css';\r\n//import Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\n//import Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\n//import DropdownButton from 'react-bootstrap/DropdownButton';\r\n//import Dropdown from 'react-bootstrap/Dropdown';\r\n\r\nclass EditComplete extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', Question1:null, Question2:null, CorrectAnswer:null, ILO:null,  Grade:null, IsUpdated:null, \r\n        OldQuestion1:null, OldQuestion2:null};\r\n        \r\n        this.Autofill()\r\n        \r\n          \r\n    }\r\n\r\n    //this is for one question\r\n    async GetCompleteInfo()\r\n    {\r\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n        const exam = params.get('exam');\r\n        //params = new URLSearchParams(window.location.hash.split(\"?\")[2]);\r\n        const question = params.get('question');\r\n        const id = params.get('id');\r\n        const response = await fetch('/GetACompleteQues/'+exam+'/'+id+'/'+question).then(response => response.json());\r\n        this.setState({Question1:response.Question1, Question2:response.Question2, \r\n            CorrectAnswer:response.CorrectAnswer, ILO:response.ILO,  Grade:response.Grade});\r\n\r\n        // fetch('/GetACompleteQues/'+exam+'/'+1+'/'+question)\r\n        //     .then(response => response.json())\r\n        //     .then(data => this.setState({Question1:data.Question1, Question2:data.Question2, \r\n        //     CorrectAnswer:data.CorrectAnswer, ILO:data.ILO,  Grade:data.Grade}));\r\n    }\r\n\r\n    async FetchUpdateComp(question, NewQuestion1, NewQuestion2, NewCorrectAns, exam, NewILO, NewGrade, id)\r\n    {\r\n        const response = await fetch('/UpdateComplete/'+question+'/'+NewQuestion1+'/'+NewQuestion2+'/'\r\n        +NewCorrectAns+'/'+exam+'/'+NewILO+'/'+NewGrade+'/'+id).then(response => response.json());\r\n        this.setState({IsUpdated:response.Updated});\r\n    }\r\n\r\n    async UpdateComplete(NewQuestion1, NewQuestion2, NewCorrectAns, NewILO, NewGrade)\r\n    {\r\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n        const exam = params.get('exam');\r\n        //params = new URLSearchParams(window.location.hash.split(\"?\")[2]);\r\n        const question = params.get('question');\r\n        const id = params.get('id');\r\n        await this.FetchUpdateComp(question, NewQuestion1, NewQuestion2, NewCorrectAns, exam, NewILO, NewGrade, id)\r\n        if (this.state.IsUpdated == \"Successfully updated\")\r\n        {\r\n            alert(\"Successfully updated\")\r\n        }\r\n        else\r\n        {\r\n            alert(\"There was an issue in update, please try again\")\r\n        }\r\n        \r\n        //this.handleSave();\r\n\r\n    }\r\n\r\n    async Autofill()\r\n    {\r\n        await this.GetCompleteInfo();\r\n        document.getElementById('CompleteILO').value=this.state.ILO;\r\n        document.getElementById('CompleteGrade').value=this.state.Grade;\r\n        document.getElementById('TextComplete1').value=this.state.Question1;\r\n        document.getElementById('TextComplete2').value=this.state.Question2;\r\n        document.getElementById('AnswerComplete').value=this.state.CorrectAnswer;\r\n    }\r\n\r\n    handleSave()\r\n    {\r\n    \r\n     if (this.state.IsUpdated == \"Successfully updated\")\r\n     {\r\n       alert(\"Saved Successfully\");\r\n     }\r\n     else\r\n     {\r\n       alert(\"Unsuccessful try\");\r\n       window.location.reload(false);\r\n     } \r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n<Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\r\n        <br />\r\n<Form.Group id=\"formExamComplete\" controlId=\"formExamComplete\">\r\n   \r\n   <Form.Label>Complete Question</Form.Label>\r\n   <Row>\r\n   <Form.Control  size=\"sm\" id=\"CompleteILO\" type=\"text\" style={{width:'50%',margin: '15px 15px 15px 15px'}} placeholder=\"Enter Your ILO \" ></Form.Control>\r\n   <Form.Control size=\"sm\" id=\"CompleteGrade\" style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\" placeholder=\"Enter Your Grade \"/>\r\n   \r\n   </Row>\r\n   <Form.Control size=\"sm\" id=\"TextComplete1\" type=\"text\"  placeholder=\"Enter Your 1st part of the Question *before the space*\" />\r\n   <Form.Control size=\"sm\"id=\"TextComplete2\" type=\"text\"   placeholder=\"Enter Your 2nd part of the Question *after the space*\" />\r\n   <br />\r\n   <Form.Control size=\"sm\" id=\"AnswerComplete\" type=\"text\" placeholder=\"Enter Your Model Answer *the space*\" />\r\n   <Button size=\"sm\" style={{ float:'right'}} variant=\"success\"\r\n   onClick={()=>{this.UpdateComplete(document.getElementById('TextComplete1').value, \r\n   document.getElementById('TextComplete2').value, document.getElementById('AnswerComplete').value,\r\n    document.getElementById('CompleteILO').value, document.getElementById('CompleteGrade').value)\r\n   }}\r\n   >Save Changes</Button>\r\n   \r\n   </Form.Group>\r\n   </Container>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default EditComplete;","import React, { Component } from 'react';\r\n//import { Link } from 'react-router-dom';\r\nimport './CreateExam.css';\r\nimport './Popup.css';\r\n//import Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\n//import Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\n//import DropdownButton from 'react-bootstrap/DropdownButton';\r\n//import Dropdown from 'react-bootstrap/Dropdown';\r\n\r\nclass EditEssay extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', Question:null, CorrectAnswer:null, ILO:null,  Grade:null, IsUpdated:null,\r\n        OldQuestion:null};\r\n        //this.GetEssayInfo()\r\n        this.Autofill()\r\n        \r\n          \r\n    }\r\n\r\n    //this is for one question\r\n    async GetEssayInfo()\r\n    {\r\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n        const exam = params.get('exam');\r\n        //params = new URLSearchParams(window.location.hash.split(\"?\")[2]);\r\n        const question = params.get('question');\r\n        const id = params.get('id');\r\n        const response = await fetch('/GetAEssQues/'+exam+'/'+id+'/'+question).then(response => response.json());\r\n        this.setState({Question:response.Question, CorrectAnswer:response.CorrectAnswer, ILO:response.ILO,  Grade:response.Grade});\r\n\r\n    }\r\n\r\n    async FetchUpdateEssay(question, NewQuestion, NewCorrectAns, exam, NewILO, NewGrade, id)\r\n    {\r\n        const response = await fetch('/UpdateEssay/'+question+'/'+NewQuestion+'/'+NewCorrectAns+'/'+exam+'/'+NewILO+'/'+NewGrade+'/'+id).then(response => response.json());\r\n        this.setState({IsUpdated:response.Updated});\r\n    }\r\n\r\n    async UpdateEssay(NewQuestion, NewCorrectAns, NewILO, NewGrade)\r\n    {\r\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n        const exam = params.get('exam');\r\n        //params = new URLSearchParams(window.location.hash.split(\"?\")[2]);\r\n        const question = params.get('question');\r\n        const id = params.get('id');\r\n        await this.FetchUpdateEssay(question, NewQuestion, NewCorrectAns, exam, NewILO, NewGrade, id)\r\n        if (this.state.IsUpdated == \"Successfully updated\")\r\n        {\r\n            alert(\"Successfully updated\")\r\n        }\r\n        else\r\n        {\r\n            alert(\"There was an issue in update, please try again\")\r\n        }\r\n        \r\n        //this.handleSave();\r\n    }\r\n\r\n    async Autofill()\r\n    {\r\n        await this.GetEssayInfo()\r\n        document.getElementById('EssayILO').value=this.state.ILO;\r\n        document.getElementById('EssayGrade').value=this.state.Grade;\r\n        document.getElementById('TextEssay').value=this.state.Question;\r\n        document.getElementById('AnswerEssay').value=this.state.CorrectAnswer;\r\n    }\r\n\r\n    handleSave()\r\n    {\r\n     if (this.state.IsUpdated == \"Successfully updated\")\r\n     {\r\n       alert(\"Saved Successfully\");\r\n     }\r\n     else\r\n     {\r\n       alert(\"Unsuccessful try\");\r\n       window.location.reload(false);\r\n     } \r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n<Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\r\n        <br />\r\n<Form.Group  id=\"formExamEssay\" controlId=\"formExamEssay\">\r\n    <Form.Label>Essay Question</Form.Label>\r\n    <Row>\r\n    <Form.Control  size=\"sm\"id=\"EssayILO\" type=\"text\" style={{width:'50%',margin: '15px 15px 15px 15px'}}\r\n    placeholder=\"Enter Question ILO\"></Form.Control>\r\n   <Form.Control size=\"sm\" id=\"EssayGrade\"style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\"\r\n    placeholder=\"Enter Your Grade\" />\r\n   \r\n   </Row>\r\n    <Form.Control size=\"sm\" id=\"TextEssay\" type=\"text\" placeholder=\"Enter Your Essay Question\" />\r\n   <br />\r\n    <Form.Control size=\"sm\" as=\"textarea\"id=\"AnswerEssay\" placeholder=\"Enter Your Model Answer\" />\r\n    <Button size=\"sm\" style={{ float:'right'}} variant=\"success\"\r\n     onClick={()=>{this.UpdateEssay(document.getElementById('TextEssay').value, \r\n     document.getElementById('AnswerEssay').value, document.getElementById('EssayILO').value, \r\n     document.getElementById('EssayGrade').value)\r\n     }}\r\n      >Save Changes</Button>\r\n    </Form.Group>\r\n    </Container>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default EditEssay;","import React, { Component } from 'react';\r\n\r\nimport './Exam.css';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\nimport $ from 'jquery'; \r\n\r\nclass TakeMCQ extends Component{\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value:'', QuestionList:[], CounterList:[], AnswerList:[],CorrectAnswerList:[], \r\n        ILOList:[], GradeList:[]};\r\n        this.GetMCQ()\r\n        window.MCQQuestions=[];\r\n        window.MCQAnswers=[];\r\n    }\r\n\r\n    GetMCQ()\r\n    {\r\n        var examname=this.props.passedname;\r\n      fetch('/GetMCQStud/'+examname)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList:data.QuestionList, CounterList:data.CounterList, AnswerList:data.AnswerList,\r\n            CorrectAnswerList:data.CorrectAnswerList, ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n\r\n    handleSubmit()\r\n    {\r\n        window.MCQAnswers=[];\r\n        var ansGroup=\"\"\r\n    \r\n        for(var i=0;i<window.MCQQuestions.length;i++)\r\n        {\r\n            ansGroup=\"AnswerMCQ\" + (i+1)\r\n            if(document.getElementById(ansGroup)!=null)\r\n            {\r\n                window.MCQAnswers.push($(`input[name='${ansGroup}']:checked`).val());\r\n            }\r\n         \r\n\r\n        }\r\n        \r\n       \r\n    }\r\n    render(){\r\n        //var name=this.props.passedname\r\n        var ExamMCQQuestions = this.state.QuestionList;\r\n        var ExamMCQCounter = this.state.CounterList;\r\n        var ExamMCQChoices = this.state.AnswerList;\r\n        ExamMCQChoices = ExamMCQChoices.toString().split(',');\r\n        window.MCQQuestions=ExamMCQQuestions;\r\n        var r = \"\";\r\n        var i = 0;\r\n        var MCQHead = \"\";\r\n        var answer = \"\";\r\n        var choicesNumber = 0;\r\n        if (ExamMCQQuestions.length != 0) {\r\n            MCQHead = <div><Form.Label style={{ color:'green'}} ><b>Choose the Correct Answer:</b></Form.Label> <Button style={{width:'21%',margin: '10px 10px 10px 10px'}} onClick={this.handleSubmit} size=\"sm\" variant=\"primary\" >Submit MCQ</ Button> <br /></div>;\r\n\r\n            r = ExamMCQChoices.map((choice, index) => {\r\n                if (choicesNumber == 0) {\r\n                    choicesNumber = ExamMCQCounter[i] - 1;\r\n                    i += 1;\r\n                    answer = \"AnswerMCQ\" + (i);\r\n                    return (\r\n                        <div>\r\n                            <Form.Label  >{i})&nbsp;{ExamMCQQuestions[i - 1]}  </Form.Label> \r\n                    \r\n            \r\n                             <br />\r\n                            <Form.Label ><input type=\"radio\" name={answer} value={choice} id={answer} /> {choice} </Form.Label>\r\n                            </div>\r\n                    )\r\n                }\r\n                else {\r\n                    choicesNumber -= 1;\r\n                    return (\r\n                        <div >\r\n                            <Form.Label ><input type=\"radio\" name={answer} value={choice} id={answer} /> {choice} </Form.Label>\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n\r\n            });\r\n\r\n        }\r\n\r\n        return(\r\n            <div>\r\n            \r\n            { MCQHead }\r\n            { r }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default TakeMCQ;","import React, { Component } from 'react';\r\n\r\nimport './Exam.css';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nclass TakeEssay extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value:'', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[]};\r\n        this.GetEssay()\r\n        window.EssayQuestions=[];\r\n        window.EssayAnswers=[];\r\n    }\r\n\r\n    GetEssay()\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/GetEssayStud/'+examname)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \r\n            ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n\r\n    handleSubmit()\r\n    {\r\n        window.EssayAnswers=[];\r\n        \r\n        for(var i=0;i<window.EssayCount;i++)\r\n        {\r\n            \r\n            if(document.getElementById(\"AnswerEssay\" + (i+1))!=null)\r\n            {\r\n                window.EssayAnswers.push(document.getElementById(\"AnswerEssay\" + (i+1)).value);\r\n            }\r\n\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    render(){\r\n        var ExamEssay=this.state.QuestionList;\r\n        window.EssayQuestions=ExamEssay;\r\n        //var name=this.props.passedname\r\n        var EssayHead=\"\";\r\n        var Essay=\"\";\r\n        var answerid = \"\";\r\n        if(ExamEssay.length!=0){\r\n            EssayHead = <div><Form.Label style={{ color:'green'}}  ><b>Answer the following Essay Question(s):</b></Form.Label> <Button style={{width:'21%',margin: '10px 10px 10px 10px'}} onClick={this.handleSubmit} size=\"sm\" variant=\"primary\" >Submit Essay</ Button>\r\n            <br /></div>;\r\n            Essay= ExamEssay.map((Question,index)=>{\r\n                window.EssayCount=index+1;\r\n                answerid = \"AnswerEssay\" + (index+1);\r\n            return(\r\n                 <div>\r\n                    <Form.Label  >{index+1})&nbsp;{ExamEssay[index]}  </Form.Label>\r\n                          \r\n                     <br />\r\n                    <Form.Label><textarea placeholder=\"Enter Answer Here\" id={answerid}  style={{width:\"600px\"}}></textarea></Form.Label>\r\n                </div>\r\n                )\r\n            }\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {EssayHead}\r\n                {Essay}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TakeEssay;","import React, { Component } from 'react';\r\nimport './Exam.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport $ from 'jquery'; \r\nclass TakeTF extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value:'', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[]};\r\n        this.GetTF()\r\n        window.TFQuestions=[];\r\n        window.TFAnswers=[];\r\n    }\r\n\r\n    GetTF()\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/GetTFStud/'+examname)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \r\n            ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n\r\n    handleSubmit()\r\n    {\r\n        window.TFAnswers=[];\r\n        var ansGroup=\"\"\r\n        \r\n        for(var i=0;i<window.TFQuestions.length;i++)\r\n        {\r\n            ansGroup=\"AnswerTF\" + (i+1)\r\n            if(document.getElementById(ansGroup)!=null)\r\n            {\r\n                window.TFAnswers.push($(`input[name='${ansGroup}']:checked`).val());\r\n            }\r\n         \r\n\r\n        }\r\n        \r\n      \r\n    }\r\n\r\n    render() {\r\n       \r\n        var ExamTF = this.state.QuestionList;\r\n        window.TFQuestions=ExamTF;\r\n        //var name=this.props.passedname\r\n        var TFHead = \"\";\r\n        var TF = \"\";\r\n        var answer=\"\";\r\n        if (ExamTF.length != 0) {\r\n            TFHead = <div><Form.Label style={{ color:'green'}}  ><b>Select True or False:</b></Form.Label> <Button style={{width:'21%',margin: '10px 10px 10px 10px'}} onClick={this.handleSubmit} size=\"sm\" variant=\"primary\" >Submit T & F</ Button>\r\n            <br /></div>;\r\n            TF = ExamTF.map((Question, index) => {\r\n                answer=\"AnswerTF\"+(index+1)\r\n                \r\n                return (\r\n                    <div>\r\n                        <Form.Label  > {index + 1})&nbsp;{ExamTF[index]}  </Form.Label>\r\n                        <br></br>\r\n                        <Form.Label style={{ paddingRight:\"6px\" ,margin:\"10px 10px 10px 10px\" }}><input type=\"radio\" name={answer} id={answer}  value=\"True\"  />True </Form.Label>   \r\n                        <Form.Label style={{paddingRight:\"6px\",margin:\"10px 10px 10px 10px\"}}><input type=\"radio\" name={answer} id={answer}  value=\"False\" />False </Form.Label> \r\n                        \r\n                        \r\n                    </div>\r\n                )\r\n            }\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {TFHead}\r\n                {TF}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TakeTF;","import React, { Component } from 'react';\r\n\r\nimport './Exam.css';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nclass TakeComplete extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[]};\r\n        this.GetComplete()\r\n        window.CompleteQuestions=[];\r\n        window.CompleteAnswers=[];\r\n    }\r\n\r\n    GetComplete()\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/GetCompleteStud/'+examname)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \r\n            ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n\r\n    handleSubmit()\r\n    {\r\n        window.CompleteAnswers=[];\r\n        for(var i=0;i<window.CompleteCount;i++)\r\n        {\r\n            \r\n            if(document.getElementById(\"AnswerComplete\" + (i+1))!=null)\r\n            {\r\n                window.CompleteAnswers.push(document.getElementById(\"AnswerComplete\" + (i+1)).value);\r\n            }\r\n\r\n        }\r\n        \r\n        \r\n    }\r\n    render() {\r\n        var ExamComplete = this.state.QuestionList;\r\n        window.CompleteQuestions=ExamComplete;\r\n        //var Examname=this.props.passedname;\r\n        var CompleteHead = \"\";\r\n        var Complete = \"\";\r\n        var i=0\r\n        if (ExamComplete.length != 0) {\r\n            CompleteHead = <div><Form.Label style={{ color:'green'}}  ><b>Complete the following sentences:</b></Form.Label>  <Button style={{width:'21%',margin: '10px 10px 10px 10px'}} onClick={this.handleSubmit} size=\"sm\" variant=\"primary\" >Submit Complete</ Button>\r\n            <br /></div>;\r\n            Complete = ExamComplete.map((Question, index) => {\r\n               \r\n                // if (index%2==0)\r\n                // {\r\n                i+=1;\r\n                var answerid = \"AnswerComplete\" + i;\r\n                window.CompleteCount=i;\r\n                return (\r\n                    <div>\r\n                        <Form.Label  > {i})&nbsp; </Form.Label> \r\n                        <Form.Label>  {ExamComplete[i-1]}   </Form.Label>\r\n                        <br></br>\r\n                        <input type=\"text\" id={answerid} placeholder=\"Enter Answer Here\"  style={{margin:\"6px\"}}/>\r\n                        {/* <Form.Label> {ExamComplete[index+1]} </Form.Label> */}\r\n                        \r\n                    </div>\r\n                )\r\n               // }\r\n            }\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {CompleteHead}\r\n                {Complete}\r\n                          \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TakeComplete;","import React, { Component } from 'react';\r\n\r\nimport './Exam.css';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nimport TakeMCQ from './TakeMCQ.js';\r\nimport TakeEssay from './TakeEssay.js';\r\nimport TakeTF from './TakeTF.js';\r\nimport TakeComplete from './TakeComplete.js';\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\n\r\nclass TakeExam extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '',Submit:null, id:null, username:null};\r\n\r\n      }\r\n\r\n      handleSubmitAnswers()\r\n      {\r\n        document.getElementById('ExamSubmitBox').style.display='block';\r\n      }\r\n\r\n      async FetchSubmitExam(examname, id, MCQList, MCQAnswers, CompleteList, CompleteAnswers, TFList, TFAnswers, EssayList, EssayAnswers)\r\n      {\r\n        const response = await fetch('/SubmitStudentExam/'+examname+'/'+id+'/'+MCQList+'/'+MCQAnswers+'/'+CompleteList+'/'\r\n        +CompleteAnswers+'/'+TFList+'/'+TFAnswers+'/'+EssayList+'/'+EssayAnswers).then(response => response.json());\r\n        this.setState({Submit:response.successful});\r\n      }\r\n\r\n      async GetNamyByID()\r\n      {\r\n        const response = await fetch('/GetStudNamebyID/'+this.state.id).then(response => response.json());\r\n        this.setState({username:response.name});\r\n      }\r\n\r\n      async SubmitStudentExam(MCQList, MCQAnswers, \r\n        CompleteList, CompleteAnswers, TFList, TFAnswers, EssayList, EssayAnswers)\r\n      {\r\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n        const examname = params.get('name');\r\n        const id = params.get('id');\r\n        this.state.id=id;\r\n        // console.log(\"Question\",question)\r\n        if (MCQList.length==0 || MCQList==null||MCQList[0]==\"\")\r\n        {\r\n          //alert(\"d5l fel mcq Q\")\r\n          MCQList = ['empty']\r\n        }\r\n        if (MCQAnswers.length==0 || MCQAnswers==null||MCQAnswers[0]==\"\")\r\n        {\r\n          //alert(\"d5l fel mcq answer\")\r\n          MCQAnswers = ['empty']\r\n        }\r\n        if (CompleteList.length==0 || CompleteList==null||CompleteList[0]==\"\")\r\n        {\r\n         // alert(\"d5l fel Comp Q\")\r\n          CompleteList = ['empty']\r\n        }\r\n        if (CompleteAnswers.length==0 || CompleteAnswers==null||CompleteAnswers[0]==\"\")\r\n        {\r\n          //alert(\"d5l fel comp answer\")\r\n          CompleteAnswers = ['empty']\r\n        }\r\n        if (TFList.length==0 || TFList==null||TFList[0]==\"\")\r\n        {\r\n         // alert(\"d5l fel TF Q\")\r\n          TFList = ['empty']\r\n        }\r\n        if (TFAnswers.length==0 || TFAnswers==null||TFAnswers[0]==\"\")\r\n        {\r\n          //alert(\"d5l fel tf answer\")\r\n          TFAnswers = ['empty']\r\n        }\r\n        if (EssayList.length==0 || EssayList==null||EssayList[0]==\"\")\r\n        {\r\n          //alert(\"d5l fel Ess Q\")\r\n          EssayList = ['empty']\r\n        }\r\n        if (EssayAnswers.length==0 || EssayAnswers==null||EssayAnswers[0]==\"\")\r\n        {\r\n          //alert(\"d5l fel ess answer\")\r\n          EssayAnswers = ['empty']\r\n        }\r\n        //alert(id)\r\n        //alert(MCQList)\r\n        await this.FetchSubmitExam(examname, id, MCQList, MCQAnswers, CompleteList, CompleteAnswers, TFList, TFAnswers, EssayList, EssayAnswers)\r\n        await this.GetNamyByID()\r\n        if (this.state.Submit == 'Exam is submitted')\r\n        {\r\n          this.handleSubmitAnswers();\r\n        }\r\n        else\r\n        {\r\n          alert('There was an issue in submitting the exam, please try again.')\r\n        }\r\n        \r\n        //alert(MCQList)\r\n      }\r\n\r\n    render() {\r\n        \r\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n        const name = params.get('name');\r\n        const username=this.state.username;\r\n        var home = `#/student-home?${new URLSearchParams({username}).toString()}`;\r\n        return (\r\n            <div>\r\n     <div style={{display:'none'}} class=\"modal-custom\" id=\"ExamSubmitBox\">\r\n          <Modal.Dialog  >\r\n              <Modal.Header >\r\n              <Modal.Title>Exam Alert</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                Exam \"{name}\" Submitted Successfully\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"primary\" onClick={event =>  window.location.href=home} >Ok</Button>\r\n            </Modal.Footer>\r\n          </Modal.Dialog>\r\n          </div>\r\n        <Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\r\n            <br />\r\n        <Form>\r\n        <Form.Label style={{ color:'red',display: 'flex', justifyContent: 'center', fontStyle: 'italic', fontWeight: 'bold', textDecorationLine: 'underline' }}><b>{name}</b> </Form.Label>\r\n            <TakeMCQ passedname={name}/>\r\n            <br></br>\r\n            <TakeTF passedname={name}/>\r\n            <br></br>\r\n            <TakeComplete passedname={name}/>\r\n            <br></br>\r\n            <TakeEssay passedname={name}/>\r\n            <Button style={{ float:'right'}} variant=\"primary\"  onClick={()=>{this.SubmitStudentExam(window.MCQQuestions,window.MCQAnswers,window.CompleteQuestions,window.CompleteAnswers,window.TFQuestions,window.TFAnswers,window.EssayQuestions,window.EssayAnswers)}}>Submit Answers</Button>\r\n        </Form>\r\n        </Container>\r\n            </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default TakeExam;\r\n","import React, { Component } from 'react';\r\n//import { Link } from 'react-router-dom';\r\nimport './StudentHome.css';\r\n//import Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nclass StudentHome extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', fullname:null, id:null};\r\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n        const username=params.get('username')\r\n        this.GetName(username)\r\n  \r\n    }\r\n\r\n    GetName(username)\r\n    {\r\n      fetch('/GetStudName/'+username)\r\n        .then(response => response.json())\r\n        .then(data => this.setState({fullname : data.name, id:data.id}));\r\n    }\r\n\r\n    render() {\r\n        window.StudentName = this.state.fullname\r\n        const id = this.state.id\r\n        const href1 = `#/student-view-all?${new URLSearchParams({id}).toString()}`;\r\n        return (\r\n        <div>\r\n          \r\n          <h1>Welcome {window.StudentName}</h1>\r\n    <br />\r\n    <Container style={{ justifyContent:'center'}}>\r\n     <Row style={{ justifyContent:'space-evenly'}}>\r\n         <Col  style={{ flexGrow:'unset'}}><Button style={{width: 'max-content'}} href=\"#/student-ask\" size=\"lg\"variant=\"primary\">Ask a Question</Button></Col>\r\n         <Col style={{ flexGrow:'unset'}} ><Button style={{width: 'max-content'}} href={href1} size=\"lg\" variant=\"primary\">Take Exam</Button></Col>\r\n     </Row>\r\n\r\n </Container>\r\n            \r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StudentHome;\r\n","import React, { Component } from 'react';\r\n//import { Link } from 'react-router-dom';\r\nimport './StudentAsk.css';\r\n//import Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\n//import Row from 'react-bootstrap/Row';\r\n//import Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\n//import DropdownButton from 'react-bootstrap/DropdownButton';\r\n//import Dropdown from 'react-bootstrap/Dropdown';\r\nclass StudentAsk extends Component {\r\n\r\n    constructor(props){\r\n      super(props);\r\n      this.state ={\r\n        answer:null,\r\n      };\r\n      this.context = {value:\"\"};\r\n      this.question={value:\"\"};\r\n      this.dummy={value:\"\"};\r\n    }\r\n    \r\n    // async componentDidMount() {\r\n    //   // Simple POST request with a JSON body using fetch\r\n    //   const requestOptions = {\r\n    //     method: 'POST'\r\n    //   };\r\n    //   const response = await fetch('https://jsonplaceholder.typicode.com/posts', requestOptions);\r\n    //   const data = await response.json();\r\n    //   this.setState({ question: data.ans });\r\n    // }\r\n    async answer(question){\r\n      // console.log(\"Question\",question)\r\n      fetch('/model/' + question)\r\n        .then(response => response.json())\r\n        .then(data => this.setState({answer:data.ans}));\r\n    }\r\n\r\n    async setContext(context) {\r\n      // console.log(\"Context\", context)\r\n      fetch('/context/' + context)\r\n        .then(response => response.json())\r\n        .then(data => this.dummy=data.context);\r\n    }\r\n    render() {\r\n\r\n      console.log(this.state)\r\n        return (\r\n          <div>\r\n            <Container\r\n              style={{\r\n                width: \"660px\",\r\n                height: \"590px\",\r\n                backgroundColor: \"white\"\r\n              }}\r\n            >\r\n              <br />\r\n              <Form\r\n                style={{ backgroundColor: \"white\" }}                \r\n              >\r\n                <Form.Group id=\"formExamEssay\" controlId=\"formExamEssay\">\r\n                  <Form.Label>Essay Question</Form.Label>\r\n                  <br/><br/>\r\n                  <Form.Label>Context</Form.Label>\r\n                  <Form.Control\r\n                    id=\"Context\"\r\n                    as=\"textarea\"\r\n                    name=\"Context\"\r\n                    placeholder=\"Enter Context\"\r\n                    ref={node => this.context = node}\r\n                  />\r\n\r\n                  <Button\r\n                    style={{ float: \"right\" }}\r\n                    variant=\"success\"\r\n                    onClick={() => {\r\n                      this.setContext(this.context.value)\r\n                    }}\r\n                  >\r\n                    Submit Context\r\n                  </Button>\r\n                  <br/>\r\n                  <Form.Label>Question</Form.Label>\r\n\r\n                  <Form.Control\r\n                    id=\"Question\"\r\n                    as=\"textarea\"\r\n                    name=\"Question\"\r\n                    placeholder=\"Enter Question\"   \r\n                    ref={node => this.question=node}\r\n                  />\r\n                  \r\n\r\n                  <br />\r\n                  <Button\r\n                    style={{ float: \"right\" }}\r\n                    variant=\"success\"\r\n                    onClick={()=>{\r\n                      this.answer(this.question.value)}}\r\n                  >\r\n                    Get Answer\r\n                  </Button>\r\n                  <br/>\r\n                  <Form.Control\r\n                    readOnly\r\n                    value={this.state['answer']}\r\n                  />\r\n                </Form.Group>\r\n              </Form>\r\n            </Container>\r\n\r\n\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StudentAsk;","import React, { Component } from 'react';\r\n//import { Link } from 'react-router-dom';\r\nimport './StudentExams.css';\r\n//import Card from 'react-bootstrap/Card';\r\n//import Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\n//import Row from 'react-bootstrap/Row';\r\n//import Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nclass StudentExams extends Component {\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {value: '', Exams:null, id:null};\r\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n        const id=params.get('id')\r\n        this.state.id=id\r\n        fetch('/ViewAllExams/'+this.state.id)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({Exams : data.ans}));\r\n        \r\n        \r\n          \r\n    }\r\n\r\n    render() {\r\n       //var names= window.ExamTitle;\r\n       var names = this.state.Exams\r\n       var id = this.state.id\r\n       if (names==null)\r\n       {\r\n        var nameslist='No Exams Yet'\r\n       }\r\n       else\r\n       {\r\n        var  nameslist= names.map(function(name){\r\n            const href = `/#/student-take-exam?${new URLSearchParams({ name,id }).toString()}`;\r\n            return <ListGroup.Item href={href} action>{name}</ListGroup.Item>;\r\n          })\r\n       }\r\n    \r\n        \r\n       return (\r\n        <div>\r\n          \r\n          <h1>All Exams</h1>\r\n   \r\n    <Container style={{width:'660px',height:'550px',backgroundColor:'white',overflow:'scroll'}}>\r\n        <br />\r\n       <ListGroup style={{textAlign: 'center'}} >{nameslist}</ListGroup>\r\n    </Container>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StudentExams;\r\n","import React, { Component } from 'react';\r\n//import { Link } from 'react-router-dom';\r\nimport './Exam.css';\r\n//import Card from 'react-bootstrap/Card';\r\n//import Button from 'react-bootstrap/Button';\r\n//import Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\n//import Row from 'react-bootstrap/Row';\r\n//import Col from 'react-bootstrap/Col';\r\n//import ListGroup from 'react-bootstrap/ListGroup'\r\n//import Exam from './Exam.js';\r\nimport './SignInForm';\r\nimport $ from 'jquery'; \r\n\r\nclass ExamMCQ extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', QuestionList:[], CounterList:[], AnswerList:[],CorrectAnswerList:[], \r\n        ILOList:[], GradeList:[]};\r\n        //alert(window.IDToken1)\r\n        this.GetMCQ()\r\n        \r\n          \r\n    }\r\n\r\n    GetMCQ()\r\n    {\r\n        var examname=this.props.passedname\r\n        var id=this.props.passedid\r\n        //alert(id)\r\n      fetch('/GetMCQ/'+examname+'/'+id)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList:data.QuestionList, CounterList:data.CounterList, AnswerList:data.AnswerList,\r\n            CorrectAnswerList:data.CorrectAnswerList, ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n\r\n    handleTopic(){}\r\n\r\n    render(){\r\n        var ExamMCQQuestions = this.state.QuestionList;\r\n        var ExamMCQCounter   = this.state.CounterList;\r\n        var ExamMCQChoices   = this.state.AnswerList;\r\n        var CorrectAnswer = this.state.CorrectAnswerList;\r\n        ExamMCQChoices = ExamMCQChoices.toString().split(',');\r\n        CorrectAnswer = CorrectAnswer.toString().split(',');\r\n        var ansGroup=\"\"\r\n\r\n        for(var i=0;i<CorrectAnswer.length;i++)\r\n        {\r\n            ansGroup=\"AnswerMCQ\" + (i+1)\r\n            if(document.getElementById(ansGroup)!=null)\r\n            { \r\n                if($('#'+{ansGroup}).val()==CorrectAnswer[i])\r\n                {\r\n                    $('#'+{ansGroup}).prop(\"checked\", true);\r\n                }\r\n                \r\n            }\r\n         \r\n\r\n        }\r\n        //var ExamMCQQuestions = window.ExamMCQQuestions;\r\n        //var ExamMCQCounter = window.ExamMCQCounter;\r\n        //var ExamMCQChoices = window.ExamMCQChoices;\r\n\r\n        var r = \"\";\r\n        i = 0;\r\n        var MCQHead = \"\";\r\n        var answer = \"\";\r\n        var choicesNumber = 0;\r\n        if (ExamMCQQuestions.length != 0) {\r\n            MCQHead = <div><Form.Label  style={{ color: 'green' }}><b>Choose the Correct Answer:</b></Form.Label> <br /></div>;\r\n\r\n            r = ExamMCQChoices.map((choice, index) => {\r\n                if (choicesNumber == 0) {\r\n                    choicesNumber = ExamMCQCounter[i] - 1;\r\n                    i += 1;\r\n                    answer = \"AnswerMCQ\" + (i);\r\n                    return (\r\n                        <div>\r\n                            <Form.Label  >{i})&nbsp;{ExamMCQQuestions[i - 1]}  </Form.Label> \r\n                    \r\n            \r\n                             <br />\r\n                            <Form.Label inline><input type=\"radio\" name={answer} value={choice} id={answer} disabled /> {choice} </Form.Label>\r\n                            </div>\r\n                    )\r\n                }\r\n                else {\r\n                    choicesNumber -= 1;\r\n                    return (\r\n                        <div >\r\n                            <Form.Label inline><input type=\"radio\" name={answer} value={choice} id={answer} disabled /> {choice} </Form.Label>\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n\r\n            });\r\n\r\n        }\r\n\r\n        return(\r\n            <div>\r\n            { MCQHead }\r\n            { r }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ExamMCQ;","import React, { Component } from 'react';\r\n//import { Link } from 'react-router-dom';\r\nimport './Exam.css';\r\n//import Card from 'react-bootstrap/Card';\r\n//import Button from 'react-bootstrap/Button';\r\n//import Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\n//import Row from 'react-bootstrap/Row';\r\n//import Col from 'react-bootstrap/Col';\r\n//import ListGroup from 'react-bootstrap/ListGroup'\r\n//import Exam from './Exam.js';\r\n\r\nclass ExamEssay extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[]};\r\n        //alert(window.IDToken1)\r\n        this.GetEssay()\r\n          \r\n    }\r\n\r\n    GetEssay()\r\n    {\r\n        var examname=this.props.passedname\r\n        var id=this.props.passedid\r\n        //alert(id)\r\n        fetch('/GetEssay/'+examname+'/'+id)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \r\n            ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n    render(){\r\n        //var ExamEssay=window.ExamEssay;\r\n        var ExamEssay = this.state.QuestionList\r\n        \r\n        var EssayHead=\"\";\r\n        var Essay=\"\";\r\n        if(ExamEssay.length!=0){\r\n            EssayHead = <div><Form.Label style={{ color: 'green' }} ><b>Essay Questions:</b></Form.Label> <br /></div>;\r\n            Essay= ExamEssay.map((Question,index)=>{\r\n            return(\r\n                 <div>\r\n                    <Form.Label  >{index+1})&nbsp;{ExamEssay[index]}  </Form.Label>\r\n                          \r\n                     <br />\r\n                    <Form.Label><textarea placeholder=\"Enter Answer Here\" value={this.state.CorrectAnswerList[index]} disabled style={{width:\"600px\"}}></textarea></Form.Label>\r\n                </div>\r\n                )\r\n            }\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {EssayHead}\r\n                {Essay}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ExamEssay;","import React, { Component } from 'react';\r\n//import { Link } from 'react-router-dom';\r\nimport './Exam.css';\r\n//import Card from 'react-bootstrap/Card';\r\n//import Button from 'react-bootstrap/Button';\r\n//import Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\n//import Row from 'react-bootstrap/Row';\r\n//import Col from 'react-bootstrap/Col';\r\n//import ListGroup from 'react-bootstrap/ListGroup'\r\n//import Exam from './Exam.js';\r\n\r\nclass ExamTF extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[]};\r\n        //alert(window.IDToken1)\r\n        this.GetTF()\r\n          \r\n    }\r\n        \r\n    GetTF()\r\n    {\r\n        var examname=this.props.passedname\r\n        var id=this.props.passedid\r\n        //alert(id)\r\n        fetch('/GetTF/'+examname+'/'+id)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \r\n            ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n    render() {\r\n        //var ExamTF = window.ExamTF;\r\n        var ExamTF = this.state.QuestionList;\r\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n        //const name = params.get('name');\r\n        var TFHead = \"\";\r\n        var TF = \"\";\r\n        if (ExamTF.length != 0) {\r\n            TFHead = <div><Form.Label style={{ color: 'green' }} ><b>True or False:</b></Form.Label> <br /></div>;\r\n            TF = ExamTF.map((Question, index) => {\r\n                return (\r\n                    <div>\r\n                       <Form.Label  > {index + 1})&nbsp;{ExamTF[index]}  </Form.Label>\r\n                        <br></br>\r\n                        <Form.Label style={{ paddingRight:\"6px\" ,margin:\"10px 10px 10px 10px\" }}><input type=\"radio\" name={index} disabled  value=\"True\"  />True </Form.Label>   \r\n                        <Form.Label style={{paddingRight:\"6px\",margin:\"10px 10px 10px 10px\"}}><input type=\"radio\" name={index} disabled value=\"False\" />False </Form.Label> \r\n                        \r\n                    </div>\r\n                )\r\n            }\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {TFHead}\r\n                {TF}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ExamTF;","import React, { Component } from 'react';\r\n//import { Link } from 'react-router-dom';\r\nimport './Exam.css';\r\n//import Card from 'react-bootstrap/Card';\r\n//import Button from 'react-bootstrap/Button';\r\n//import Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\n//import Row from 'react-bootstrap/Row';\r\n//import Col from 'react-bootstrap/Col';\r\n//import ListGroup from 'react-bootstrap/ListGroup'\r\n//import Exam from './Exam.js';\r\n\r\nclass ExamComplete extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[]};\r\n        //alert(window.IDToken1)\r\n        this.GetComplete()\r\n        \r\n          \r\n    }\r\n\r\n    GetComplete()\r\n    {\r\n        var examname=this.props.passedname\r\n        var id=this.props.passedid\r\n        //alert(id)\r\n        fetch('/GetComplete/'+examname+'/'+id)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \r\n            ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n    render() {\r\n        //var ExamComplete = window.ExamComplete;\r\n        var ExamComplete = this.state.QuestionList;\r\n\r\n        var CompleteHead = \"\";\r\n        var Complete = \"\";\r\n        var i=0\r\n        if (ExamComplete.length != 0) {\r\n            CompleteHead = <div><Form.Label style={{ color: 'green' }} ><b>Complete the following:</b></Form.Label> <br /></div>;\r\n            Complete = ExamComplete.map((Question, index) => {\r\n                //if (index%2==0)\r\n               // {\r\n                //    i+=1;\r\n                return (\r\n                    <div>\r\n                        <Form.Label  > {index + 1})&nbsp; </Form.Label> \r\n                        <Form.Label>  {ExamComplete[index]}   </Form.Label>\r\n                        <br></br>\r\n                        <input type=\"text\" placeholder=\"Enter Answer Here\" value={this.state.CorrectAnswerList[index]} disabled style={{margin:\"6px\"}}/>\r\n                        {/* <Form.Label> {ExamComplete[index+1]} </Form.Label> */}\r\n\r\n                    </div>\r\n                )\r\n                //}\r\n            }\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {CompleteHead}\r\n                {Complete}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ExamComplete;","import React, { Component } from 'react';\r\n//import { Link } from 'react-router-dom';\r\nimport './Exam.css';\r\n//import Card from 'react-bootstrap/Card';\r\n//import Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\n//import Row from 'react-bootstrap/Row';\r\n//import Col from 'react-bootstrap/Col';\r\n//import ListGroup from 'react-bootstrap/ListGroup';\r\nimport ExamMCQ from './ExamMCQ.js';\r\nimport ExamEssay from './ExamEssay.js';\r\nimport ExamTF from './ExamTF.js';\r\nimport ExamComplete from './ExamComplete.js';\r\n\r\n\r\n\r\nclass Exam extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', Exams:null, id:null};\r\n        //alert(window.IDToken)\r\n        \r\n          \r\n    }\r\n\r\n    render() {\r\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n        const name = params.get('name');\r\n        window.examname=name;\r\n        const IDToken = params.get('ID');\r\n        \r\n        return (\r\n            <div>\r\n    \r\n        <Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\r\n            <br />\r\n        <Form>\r\n        <Form.Label style={{ color:'red', display: 'flex', justifyContent: 'center', fontStyle: 'italic', fontWeight: 'bold', textDecorationLine: 'underline' }}>{name}</Form.Label>\r\n            <ExamMCQ passedname={name} passedid={IDToken} />\r\n            <br></br>\r\n            <ExamTF passedname={name} passedid={IDToken} />\r\n            <br></br>\r\n            <ExamComplete passedname={name} passedid={IDToken} />\r\n            <br></br>\r\n            <ExamEssay passedname={name} passedid={IDToken} />\r\n        </Form>\r\n        </Container>\r\n            </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default Exam;\r\n","import React, { Component } from 'react';\r\n//import { Link } from 'react-router-dom';\r\nimport './Exam.css';\r\n//import Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\n//import Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\n//import Col from 'react-bootstrap/Col';\r\n//import ListGroup from 'react-bootstrap/ListGroup'\r\n\r\nclass ViewEditMCQ extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', MCQQuestions:[], MCQCounter:[], MCQChoices:[],CorrectAnswerList:[], \r\n        ILOList:[], GradeList:[], Deleted:null};\r\n        this.GetMCQ()\r\n             \r\n    }\r\n\r\n    GetMCQ()\r\n    {\r\n        var examname=this.props.passedname\r\n        var id = this.props.passedid\r\n        fetch('/GetMCQ/'+examname+'/'+id)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({MCQQuestions : data.QuestionList, MCQCounter : data.CounterList, MCQChoices : data.AnswerList,\r\n            CorrectAnswerList:data.CorrectAnswerList, ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n\r\n    DeleteMCQ(Question)\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/DeleteMCQ/'+examname+'/'+Question)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({Deleted : data.Deleted}));\r\n        window.location.reload(false);\r\n    }\r\n    \r\n\r\n    render(){\r\n        var ExamMCQQuestions = this.state.MCQQuestions;\r\n        var ExamMCQCounter = this.state.MCQCounter;\r\n        var ExamMCQChoices = this.state.MCQChoices;\r\n        ExamMCQChoices = ExamMCQChoices.toString().split(',');\r\n\r\n        var r = \"\";\r\n        var i = 0;\r\n        var MCQHead = \"\";\r\n        var answer = \"\";\r\n        var choicesNumber = 0;\r\n        if (ExamMCQQuestions.length != 0) {\r\n            MCQHead = <div><Form.Label  style={{ color:'green'}}><b>Choose the Correct Answer:</b></Form.Label> <br /></div>;\r\n\r\n            r = ExamMCQChoices.map((choice, index) => {\r\n                \r\n                if (choicesNumber == 0) {\r\n                    choicesNumber = ExamMCQCounter[i] - 1;\r\n                    i += 1;\r\n                    answer = \"answer\" + (i);\r\n                    var question = ExamMCQQuestions[i - 1]\r\n                    var exam = this.props.passedname\r\n                    var id = this.props.passedid\r\n                    const href1 = `/#/instructor-edit-mcq?${new URLSearchParams({ exam, question, id }).toString()}`;\r\n                    return (\r\n                        <div>\r\n                            <Button style={{width:'10%',margin: '10px 10px 10px 10px',float:'right'}} size=\"sm\" variant=\"danger\" \r\n                            onClick={()=>{this.DeleteMCQ(question)}} >Delete</ Button>\r\n                            <Button style={{width:'10%',margin: '10px 10px 10px 10px',float:'right'}}href={href1} size=\"sm\" variant=\"primary\" >Edit</ Button>\r\n\r\n                            <Form.Label  >{i})&nbsp;{ExamMCQQuestions[i - 1]}  </Form.Label> \r\n                            <br />\r\n                            <Row>\r\n                            <Form.Label style={{width:'50%',margin: '15px 15px 15px 15px'}}> ILO:{this.state.ILOList[i-1]}  </Form.Label>\r\n                            <Form.Label style={{width:'20%',margin: '15px 15px 15px 15px'}}> Grade:{this.state.GradeList[i-1]} </Form.Label>\r\n                            </Row>\r\n                            <Form.Label inline><input type=\"radio\" name={answer} value={choice} disabled /> {choice} </Form.Label>\r\n                            \r\n\r\n                          <br />\r\n                              </div>\r\n                    )\r\n                }\r\n                else {\r\n                    choicesNumber -= 1;\r\n                    return (\r\n                        <div >\r\n                            <Form.Label inline><input type=\"radio\" name={answer} value={choice} disabled /> {choice} </Form.Label>\r\n                           \r\n                        </div>\r\n                    )\r\n                }\r\n\r\n\r\n            });\r\n\r\n        }\r\n\r\n        return(\r\n            <div>\r\n            { MCQHead }\r\n            { r }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ViewEditMCQ;","import React, { Component } from 'react';\r\n//import { Link } from 'react-router-dom';\r\nimport './Exam.css';\r\n//import Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\n//import Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\n//import Col from 'react-bootstrap/Col';\r\n//import ListGroup from 'react-bootstrap/ListGroup'\r\n\r\nclass ViewEditEssay extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[], Deleted:null};\r\n        this.GetEssay()\r\n        \r\n          \r\n    }\r\n\r\n    GetEssay()\r\n    {\r\n        var examname=this.props.passedname\r\n        var id = this.props.passedid\r\n        fetch('/GetEssay/'+examname+'/'+id)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \r\n            ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n\r\n    DeleteEssay(Question)\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/DeleteEssay/'+examname+'/'+Question)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({Deleted : data.Deleted}));\r\n        window.location.reload(false);\r\n    }\r\n\r\n    render(){\r\n        var ExamEssay=this.state.QuestionList;\r\n        \r\n        var EssayHead=\"\";\r\n        var Essay=\"\";\r\n        if(ExamEssay.length!=0){\r\n            EssayHead = <div><Form.Label style={{ color:'green'}} ><b>Essay Questions:</b></Form.Label> <br /></div>;\r\n            Essay= ExamEssay.map((Question,index)=>{\r\n                var question = ExamEssay[index]\r\n                var exam = this.props.passedname\r\n                var id = this.props.passedid\r\n                //const href1 = `/#/instructor-edit-essay?${new URLSearchParams({ exam }).toString()}?${new URLSearchParams({ question }).toString()}`;\r\n                const href1 = `/#/instructor-edit-essay?${new URLSearchParams({ exam, question, id }).toString()}`;\r\n            return(\r\n                 <div>\r\n                    <Button style={{width:'10%',margin: '10px 10px 10px 10px',float:'right'}} size=\"sm\" variant=\"danger\"\r\n                    onClick={()=>{this.DeleteEssay(question)}}  >Delete</ Button>\r\n                    <Button style={{width:'10%',margin: '10px 10px 10px 10px',float:'right'}} href={href1} size=\"sm\" variant=\"primary\" >Edit</ Button>\r\n\r\n                    <Form.Label  >{index+1})&nbsp;{ExamEssay[index]}  </Form.Label>\r\n\r\n                    <Row>\r\n                            <Form.Label style={{width:'50%',margin: '15px 15px 15px 15px'}}> ILO:{this.state.ILOList[index]}  </Form.Label>\r\n                            <Form.Label style={{width:'20%',margin: '15px 15px 15px 15px'}}> Grade:{this.state.GradeList[index]} </Form.Label>\r\n                    </Row>\r\n                                        \r\n                    <Form.Label><textarea placeholder=\"Enter Answer Here\" value={this.state.CorrectAnswerList[index]} disabled style={{width:\"600px\"}}></textarea></Form.Label>\r\n\r\n\r\n\r\n                   <br />\r\n                </div>\r\n                )\r\n            }\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {EssayHead}\r\n                {Essay}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewEditEssay;","import React, { Component } from 'react';\r\n//import { Link } from 'react-router-dom';\r\nimport './Exam.css';\r\n//import Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\n//import Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\n//import Col from 'react-bootstrap/Col';\r\n//import ListGroup from 'react-bootstrap/ListGroup'\r\n\r\nclass ViewEditTF extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[]};\r\n        this.GetTF()\r\n          \r\n    }\r\n\r\n    GetTF()\r\n    {\r\n        var examname=this.props.passedname\r\n        var id = this.props.passedid\r\n        fetch('/GetTF/'+examname+'/'+id)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \r\n            ILOList:data.ILOList, GradeList:data.GradeList}));\r\n        \r\n    }\r\n\r\n    DeleteTF(Question)\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/DeleteTF/'+examname+'/'+Question)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({Deleted : data.Deleted}));\r\n        window.location.reload(false);\r\n    }\r\n\r\n    render() {\r\n        var ExamTF = this.state.QuestionList;\r\n\r\n        var TFHead = \"\";\r\n        var TF = \"\";\r\n        if (ExamTF.length != 0) {\r\n            TFHead = <div><Form.Label  style={{ color:'green'}}><b>True or False:</b></Form.Label> <br /></div>;\r\n            TF = ExamTF.map((Question, index) => {\r\n                var question = ExamTF[index]\r\n                var exam = this.props.passedname\r\n                var id = this.props.passedid\r\n                const href1 = `/#/instructor-edit-tf?${new URLSearchParams({ exam, question, id }).toString()}`;\r\n                return (\r\n                    <div>\r\n                        <Button style={{width:'10%',margin: '10px 10px 10px 10px',float:'right'}} size=\"sm\" variant=\"danger\"\r\n                        onClick={()=>{this.DeleteTF(question)}} >Delete</ Button>\r\n                        <Button style={{width:'10%',margin: '10px 10px 10px 10px',float:'right'}} href={href1} size=\"sm\" variant=\"primary\" >Edit</ Button>\r\n\r\n                        <Form.Label  > {index + 1})&nbsp;{ExamTF[index]}  </Form.Label>\r\n                        <br />\r\n                        <Row>\r\n                            <Form.Label style={{width:'50%',margin: '15px 15px 15px 15px'}}> ILO:{this.state.ILOList[index]}  </Form.Label>\r\n                            <Form.Label style={{width:'20%',margin: '15px 15px 15px 15px'}}> Grade:{this.state.GradeList[index]} </Form.Label>\r\n                        </Row>\r\n                    \r\n                        <Form.Label style={{ paddingRight:\"6px\" ,margin:\"10px 10px 10px 10px\" }}><input type=\"radio\" name={index} disabled value=\"True\"  />True </Form.Label>   \r\n                        <Form.Label style={{paddingRight:\"6px\",margin:\"10px 10px 10px 10px\"}}><input type=\"radio\" name={index} disabled value=\"False\" />False </Form.Label> \r\n                        <br />\r\n                    </div>\r\n                )\r\n            }\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {TFHead}\r\n                {TF}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewEditTF;","import React, { Component } from 'react';\r\n//import { Link } from 'react-router-dom';\r\nimport './Exam.css';\r\n//import Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\n//import Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\n//import Col from 'react-bootstrap/Col';\r\n//import ListGroup from 'react-bootstrap/ListGroup'\r\n\r\nclass ViewEditComplete extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[], Deleted:null};\r\n        this.GetComplete()\r\n        \r\n          \r\n    }\r\n\r\n    GetComplete()\r\n    {\r\n        var examname=this.props.passedname\r\n        var id = this.props.passedid\r\n        fetch('/GetComplete/'+examname+'/'+id)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \r\n            ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n\r\n    DeleteComplete(Question)\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/DeleteComplete/'+examname+'/'+Question)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({Deleted : data.Deleted}));\r\n        window.location.reload(false);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        var ExamComplete = this.state.QuestionList;\r\n\r\n        var CompleteHead = \"\";\r\n        var Complete = \"\";\r\n        var i=0\r\n        if (ExamComplete.length != 0) {\r\n            CompleteHead = <div><Form.Label style={{ color:'green'}} ><b>Complete:</b></Form.Label> <br /></div>;\r\n            Complete = ExamComplete.map((Question, index) => \r\n            {\r\n               // if (index%2==0)\r\n                //{\r\n                    i+=1;\r\n                    var question = ExamComplete[index]\r\n                    var exam = this.props.passedname\r\n                    var id = this.props.passedid\r\n                    const href1 = `/#/instructor-edit-complete?${new URLSearchParams({ exam, question, id }).toString()}`;\r\n                    return (\r\n                        <div>\r\n                            <Button style={{width:'10%',margin: '10px 10px 10px 10px',float:'right'}} size=\"sm\" variant=\"danger\" \r\n                            onClick={()=>{this.DeleteComplete(question)}} >Delete</ Button>\r\n                            <Button style={{width:'10%',margin: '10px 10px 10px 10px',float:'right'}} href={href1} size=\"sm\" variant=\"primary\">Edit</ Button>\r\n\r\n                            {/* <Form.Label  > {i})&nbsp; </Form.Label> \r\n                            <Form.Label>  {ExamComplete[index]}   </Form.Label> */}\r\n                            {/* <Form.Label  > {index + 1})&nbsp; </Form.Label> \r\n                            <Form.Label>  {ExamComplete[index]}   </Form.Label> */}\r\n                            <Form.Label  >{index+1})&nbsp;{ExamComplete[index]}  </Form.Label>\r\n                            <br />                \r\n                            <Row>\r\n                            <Form.Label style={{width:'50%',margin: '15px 15px 15px 15px'}}> ILO:{this.state.ILOList[index]}  </Form.Label>\r\n                            <Form.Label style={{width:'20%',margin: '15px 15px 15px 15px'}}> Grade:{this.state.GradeList[index]} </Form.Label>\r\n                            </Row>\r\n                    \r\n                            <input type=\"text\" placeholder=\"Complete..\" value={this.state.CorrectAnswerList[index]} disabled style={{margin:\"6px\"}}/>\r\n\r\n                            \r\n\r\n\r\n                             <br />\r\n                        </div>\r\n                    )\r\n                //}\r\n            }\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {CompleteHead}\r\n                {Complete}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewEditComplete;","import React, { Component } from 'react';\r\n//import { Link } from 'react-router-dom';\r\nimport './Exam.css';\r\n//import Card from 'react-bootstrap/Card';\r\n//import Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\n//import Row from 'react-bootstrap/Row';\r\n//import Col from 'react-bootstrap/Col';\r\n//import ListGroup from 'react-bootstrap/ListGroup';\r\nimport ViewEditMCQ from './ViewEditMCQ.js';\r\nimport ViewEditEssay from './ViewEditEssay.js';\r\nimport ViewEditTF from './ViewEditTF.js';\r\nimport ViewEditComplete from './ViewEditComplete.js';\r\n\r\n\r\n\r\nclass ViewEditExam extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', Exams:null, Deleted:null, id:null};\r\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n        //const name = params.get('name');\r\n        const IDToken = params.get('ID');\r\n        this.state.id=IDToken\r\n          \r\n    }\r\n\r\n    render() {\r\n\r\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n        const name = params.get('name');\r\n        const id = this.state.id;\r\n\r\n        return (\r\n            <div>\r\n    \r\n        <Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\r\n            <br />\r\n        <Form>\r\n            <ViewEditMCQ passedname={name} passedid={id} />\r\n            <br/>\r\n            <ViewEditTF passedname={name} passedid={id} />\r\n            <br/>\r\n            <ViewEditComplete passedname={name} passedid={id} />\r\n            <br/>\r\n            <ViewEditEssay passedname={name} passedid={id} />\r\n        </Form>\r\n        </Container>\r\n            </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default ViewEditExam;\r\n","import React, { Component } from 'react';\r\nimport { HashRouter as Router, Route} from 'react-router-dom';\r\nimport SignUpForm from './Pages/SignUpForm';\r\nimport SignInForm from './Pages/SignInForm';\r\nimport Homepage from './Pages/Homepage';\r\nimport InstructorHome from './Pages/InstructorHome';\r\nimport CreateExam from './Pages/CreateExam';\r\nimport FromExisting from './Pages/FromExisting';\r\nimport ViewExams from './Pages/ViewExams';\r\nimport ViewEdit from './Pages/ViewEdit';\r\nimport ViewGrade from './Pages/ViewGrade';\r\nimport EditMCQ from './Pages/EditMCQ';\r\nimport EditTF from './Pages/EditTF';\r\nimport EditComplete from './Pages/EditComplete';\r\nimport EditEssay from './Pages/EditEssay';\r\nimport TakeExam from './Pages/TakeExam';\r\nimport StudentHome from './Pages/StudentHome';\r\nimport StudentAsk from './Pages/StudentAsk';\r\nimport StudentExams from './Pages/StudentExams';\r\nimport Exam from './Pages/Exam';\r\nimport ViewEditExam from './Pages/ViewEditExam';\r\nimport './App.css';\r\nimport { Container } from '@material-ui/core';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\n//import Form from 'react-bootstrap/Form';\r\n//import FormControl from 'react-bootstrap/FormControl';\r\n//import Button from 'react-bootstrap/Button';\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      \r\n      <Router basename=\"/esae-frontend/\">\r\n       <Container fixed>\r\n          <Navbar fixed=\"top\" bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand href=\"#/home\">E.S.A.E</Navbar.Brand>\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link href=\"#/home\">Home</Nav.Link>\r\n\r\n        </Nav>\r\n      </Navbar>\r\n       </Container>\r\n              <Route exact path=\"/home\" component={Homepage}>\r\n              </Route>\r\n              <Route exact path=\"/\" component={Homepage}>\r\n              </Route>\r\n              <Route path=\"/sign-up\" component={SignUpForm}>\r\n              </Route>\r\n              <Route path=\"/sign-in\" component={SignInForm}>\r\n              </Route>\r\n              <Route path=\"/instructor-home\" component={InstructorHome}>\r\n              </Route>\r\n              <Route path=\"/instructor-create\" component={CreateExam}>\r\n              </Route>\r\n\t\t\t        <Route path=\"/instructor-from-exist\" component={FromExisting}>\r\n              </Route>\r\n              <Route path=\"/instructor-view-all\" component={ViewExams}>\r\n              </Route>\r\n\t\t\t        <Route path=\"/instructor-view-edit\" component={ViewEdit}>\r\n              </Route>\r\n              <Route path=\"/instructor-view-grade\" component={ ViewGrade}>\r\n              </Route>\r\n              <Route path=\"/instructor-view-edit-exam\" component={ViewEditExam}>\r\n              </Route>\r\n              <Route path=\"/instructor-exam\" component={Exam}>\r\n              </Route>\r\n\t\t\t        <Route path=\"/instructor-edit-mcq\" component={EditMCQ}>\r\n              </Route>\r\n              <Route path=\"/instructor-edit-tf\" component={EditTF}>\r\n              </Route>\r\n              <Route path=\"/instructor-edit-complete\" component={EditComplete}>\r\n              </Route>\r\n              <Route path=\"/instructor-edit-essay\" component={EditEssay}>\r\n              </Route>\r\n              <Route path=\"/student-home\" component={StudentHome}>\r\n              </Route>\r\n              <Route path=\"/student-ask\" component={StudentAsk}>\r\n              </Route>\r\n              <Route path=\"/student-view-all\" component={StudentExams}>\r\n              </Route>\r\n              <Route path=\"/student-take-exam\" component={TakeExam}>\r\n              </Route>\r\n    \r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"media/student.d3b74d64.png\";","module.exports = __webpack_public_path__ + \"media/instructor.9bef3f3f.png\";"],"sourceRoot":""}