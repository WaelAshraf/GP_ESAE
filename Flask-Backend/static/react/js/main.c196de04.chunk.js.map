{"version":3,"sources":["Pages/SignUpForm.js","Pages/SignInForm.js","Pages/Homepage.js","Pages/InstructorHome.js","Pages/CreateExam.js","Pages/FromExisting.js","Pages/ViewExams.js","Pages/ViewEdit.js","Pages/ViewGrade.js","Pages/EditMCQ.js","Pages/EditTF.js","Pages/EditComplete.js","Pages/EditEssay.js","Pages/StudentHome.js","Pages/StudentAsk.js","Pages/StudentExams.js","Pages/ExamMCQ.js","Pages/ExamEssay.js","Pages/ExamTF.js","Pages/ExamComplete.js","Pages/Exam.js","Pages/ViewEditMCQ.js","Pages/ViewEditEssay.js","Pages/ViewEditTF.js","Pages/ViewEditComplete.js","Pages/ViewEditExam.js","App.js","serviceWorker.js","index.js","Pages/student.png","Pages/instructor.png"],"names":["SignUpForm","className","action","method","type","name","id","placeholder","defaultValue","href","Component","SignInForm","Homepage","Container","Row","style","justifyContent","Col","flexGrow","Card","bg","width","Img","variant","src","require","Body","textAlign","Title","Text","Button","size","InstructorHome","document","getElementById","display","onClick","this","handleCreate","CreateExam","props","state","value","answer","MCQreturn","Completereturn","TFreturn","Essayreturn","window","ExamTitle","ExamMCQCounter","ExamMCQQuestions","ExamMCQChoices","ExamComplete","ExamTF","ExamEssay","ExamComparsion","handleChange","bind","handleSubmit","event","setState","target","InstructorID","Question","Answers","CorrectAns","Grade","ILO","handleFinishQuestion","fetch","then","response","json","data","MCQReturn","Question1","Question2","Answer","CompleteReturn","TFReturn","EssayReturn","ChoiceCounter","x","createElement","setAttribute","innerHTML","appendChild","y","innerText","removeChild","push","i","textContent","ExamComparison","alert","ExamTitleBOX","class","Modal","Dialog","Header","closeButton","Form","Group","controlId","Control","Footer","handleConfirm","height","backgroundColor","overflow","Label","as","margin","onChange","hidden","required","handleAddChoice","handleDeleteChoice","SubmitMCQ","float","handleFinishExam","SubmitComplete","SubmitTrueFalse","SubmitEssay","FromExisting","Mixreturn","QuestionList","CounterList","AnswerList","CorrectAnswerList","ILOList","GradeList","GetILO","ILO_List","QuestionType","Number","MixQues","handleTopic","map","fbb","key","handleType","MixQuestion","ViewExams","Exams","ans","names","nameslist","URLSearchParams","toString","ListGroup","Item","ViewEdit","href1","disabled","ViewGrade","EditMCQ","CorrectAnswer","IsUpdated","OldQuestion","GetMCQInfo","Autofill","params","location","hash","split","exam","get","question","NewQuestion","NewAnswers","NewCorrectAns","NewILO","NewGrade","Updated","UpdateMCQ","EditTF","GetTFInfo","UpdateTrueFalse","EditComplete","OldQuestion1","OldQuestion2","GetCompleteInfo","NewQuestion1","NewQuestion2","UpdateComplete","EditEssay","GetEssayInfo","UpdateEssay","StudentHome","StudentAsk","StudentExams","ExamMCQ","GetMCQ","examname","passedname","r","MCQHead","choicesNumber","length","choice","index","inline","GetEssay","EssayHead","Essay","GetTF","TFHead","TF","paddingRight","GetComplete","CompleteHead","Complete","Exam","ViewEditMCQ","MCQQuestions","MCQCounter","MCQChoices","ViewEditEssay","ViewEditTF","ViewEditComplete","ViewEditExam","App","basename","fixed","Navbar","Brand","Nav","Link","FormControl","exact","path","component","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"js/main.c196de04.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Link, NavLink } from 'react-router-dom';\nclass SignUpForm extends Component {\n\n    render() {\n        return (\n          <form className=\"signin-forum-container\" action method=\"post\">\n          <h1>Sign Up</h1><br />\n          <input type=\"text\" name=\"username\" id=\"username\" placeholder=\"Name\" /><br />\n          <input type=\"text\" name=\"email\" id=\"email\" placeholder=\"Email\" /><br />\n          <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" /><br />\n          \n          <input type=\"submit\" defaultValue=\"Sign Up\" /><br />\n          <a href=\"#/esae-frontend/sign-in\">Already a member? Sign in now!</a>\n        </form>\n        );\n    }\n}\n\nexport default SignUpForm;\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Link, NavLink } from 'react-router-dom';\nimport './signin.css';\n\nclass SignInForm extends Component {\n    render() {\n        return (\n          <form className=\"signin-forum-container\" action method=\"post\">\n          <h1>Sign In</h1><br />\n          <input type=\"text\" name=\"email\" id=\"email\" placeholder=\"Email\" /><br />\n          <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" /><br />\n          <a href=\"#\">Forgot Your Password?</a><br />\n          <input type=\"submit\" defaultValue=\"Sign In\" /><br />\n          <a href=\"#/esae-frontend/sign-up\">Not a member? Sign up now!</a>\n        </form>\n        );\n    }\n}\n\nexport default SignInForm;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './homestyle.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nclass Homepage extends Component {\n  \n    render() {\n        return (\n        <div>\n <h1>Welcome to Exam Solver and Evaluator</h1>\n           <br />\n           <Container>\n            <Row style={{ justifyContent:'space-evenly'}}>\n                <Col style={{flexGrow:'unset'}}  >\n                <Card bg=\"light\" style={{ width: '13rem' }}>\n            <Card.Img variant=\"top\" src={require('./student.png')} />\n            <Card.Body style={{ textAlign:'center'}}>\n                <Card.Title>I'm a Student</Card.Title>\n                <Card.Text>\n                Now you can Get Question's Answers with One Click\n                </Card.Text>\n                <Button href=\"#/student-home\" size=\"lg\" variant=\"success\">Join Now!</Button>\n            </Card.Body>\n            </Card></Col>\n                <Col style={{flexGrow:'unset'}} ><Card bg=\"light\" style={{ width: '13rem' }}>\n            <Card.Img variant=\"top\" src={require('./instructor.png')} />\n            <Card.Body style={{ textAlign:'center'}}>\n                <Card.Title>I'm an Instructor</Card.Title>\n                <Card.Text>\n                Now you Form your Exam and Evaluate it with One Click\n                </Card.Text>\n                <Button href=\"#/instructor-home\" size=\"lg\" variant=\"danger\">Join Now!</Button>\n            </Card.Body>\n            </Card></Col>\n            </Row>\n\n        </Container>\n        \n        \n\n            \n          </div>\n        );\n    }\n}\n\nexport default Homepage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './InstructorHome.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nclass InstructorHome extends Component {\nhandleCreate()\n{\n    if (document.getElementById('BtnNew').style.display=='block'||document.getElementById('BtnExist').style.display=='block')\n    {\n        document.getElementById('BtnNew').style.display='none';\n        document.getElementById('BtnExist').style.display='none';\n    }\n    else\n    {\n        document.getElementById('BtnNew').style.display='block';\n        document.getElementById('BtnExist').style.display='block';\n    }\n}\n    render() {\n        return (\n        <div>\n          \n          <h1>Welcome Dr. Magda Fayek</h1>\n    <br />\n    <Container>\n     <Row style={{ justifyContent:'space-evenly'}}>\n         <Col ><Button onClick={this.handleCreate} size=\"lg\"variant=\"primary\">Create Exam</Button></Col>\n        <Col  ><Button href=\"#/instructor-view-all\" size=\"lg\" variant=\"primary\">View Exams</Button></Col>\n         <Col  ><Button href=\"#/instructor-view-edit\" size=\"lg\"variant=\"primary\">Edit Exam</Button></Col>\n         <Col  ><Button href=\"#/instructor-view-grade\" size=\"lg\"variant=\"primary\">Grade Exam</Button></Col>\n     </Row>\n     <Row style={{width:'17%'}}>\n        \n         <Col ><Button id=\"BtnNew\"style={{display:'none'}} href=\"#/instructor-create\" size=\"sm\"variant=\"primary\">New Exam</Button></Col>\n       \n     </Row>\n     <Row style={{width:'17%'}}>\n        \n        <Col ><Button id=\"BtnExist\" style={{display:'none'}} href=\"#/instructor-from-exist\" size=\"sm\"variant=\"primary\">From Existing Exams</Button></Col>\n    </Row>\n\n\n </Container>\n            \n          </div>\n        );\n    }\n}\n\nexport default InstructorHome;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './CreateExam.css';\nimport './Popup.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Modal from 'react-bootstrap/Modal'\nclass CreateExam extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {value: '',answer:null, MCQreturn:null,Completereturn:null, TFreturn:null, Essayreturn:null};\n        window.ExamTitle=[];\n        window.ExamMCQCounter=[];\n        window.ExamMCQQuestions=[];\n        window.ExamMCQChoices=[];\n        window.ExamComplete=[];\n        window.ExamTF=[];\n        window.ExamEssay=[];\n        window.ExamComparsion=[];\n\n        this.handleChange = this.handleChange.bind(this);\n  \n        this.handleSubmit = this.handleSubmit.bind(this);\n      }\n      handleChange (event) {\n        this.setState({value: event.target.value});\n      }\n\n      SubmitMCQ(ExamTitle,InstructorID,Question,Answers,CorrectAns,Grade,ILO)\n      {\n        this.handleFinishQuestion()\n        // console.log(\"Question\",question)\n        fetch('/AddMCQ/'+ExamTitle+'/'+InstructorID+'/'+Question+'/'+Answers+'/'+CorrectAns+'/'+Grade+'/'+ILO)\n          .then(response => response.json())\n          .then(data => this.setState({MCQreturn : data.MCQReturn}));\n      }\n\n      SubmitComplete(ExamTitle,InstructorID,Question1,Question2,Answer,Grade,ILO)\n      {\n        this.handleFinishQuestion()\n        // console.log(\"Question\",question)\n        fetch('/AddComplete/'+ExamTitle+'/'+InstructorID+'/'+Question1+'/'+Question2+'/'+Answer+'/'+Grade+'/'+ILO)\n          .then(response => response.json())\n          .then(data => this.setState({Completereturn : data.CompleteReturn}));\n      }\n\n      SubmitTrueFalse(ExamTitle, InstructorID, Question,Answer,Grade,ILO)\n      {\n        this.handleFinishQuestion()\n        // console.log(\"Question\",question)\n        fetch('/AddTrueFalse/'+ExamTitle+'/'+InstructorID+'/'+Question+'/'+Answer+'/'+Grade+'/'+ILO)\n          .then(response => response.json())\n          .then(data => this.setState({TFreturn : data.TFReturn}));\n      }\n\n      SubmitEssay(ExamTitle, InstructorID, Question,Answer,Grade,ILO)\n      {\n        this.handleFinishQuestion()\n        // console.log(\"Question\",question)\n        fetch('/AddEssay/'+ExamTitle+'/'+InstructorID+'/'+Question+'/'+Answer+'/'+Grade+'/'+ILO)\n          .then(response => response.json())\n          .then(data => this.setState({Essayreturn : data.EssayReturn}));\n      }\n\n      handleSubmit(event)\n      {\n        if (this.state.value=='MCQ')\n        {\n            document.getElementById('formExamMCQ').style.display='block';\n            document.getElementById('formExamComplete').style.display='none';\n            document.getElementById('formExamTF').style.display='none';\n            document.getElementById('formExamEssay').style.display='none';\n            document.getElementById('formExamCompare').style.display='none';\n            window.ChoiceCounter=0;\n            \n        }\n        if (this.state.value=='Complete')\n        {\n            document.getElementById('formExamComplete').style.display='block';\n            document.getElementById('formExamMCQ').style.display='none';\n            document.getElementById('formExamTF').style.display='none';\n            document.getElementById('formExamEssay').style.display='none';\n            document.getElementById('formExamCompare').style.display='none';\n        }\n        if (this.state.value=='T and F')\n        {\n          document.getElementById('formExamTF').style.display='block';\n            document.getElementById('formExamComplete').style.display='none';\n            document.getElementById('formExamMCQ').style.display='none';\n            document.getElementById('formExamEssay').style.display='none';\n            document.getElementById('formExamCompare').style.display='none';\n        }\n        if (this.state.value=='Essay Question')\n        {\n          document.getElementById('formExamEssay').style.display='block';\n          document.getElementById('formExamTF').style.display='none';\n            document.getElementById('formExamComplete').style.display='none';\n            document.getElementById('formExamMCQ').style.display='none';\n            document.getElementById('formExamCompare').style.display='none';\n        }\n        if (this.state.value=='Comparison')\n        {\n          document.getElementById('formExamCompare').style.display='block';\n          document.getElementById('formExamEssay').style.display='none';\n          document.getElementById('formExamTF').style.display='none';\n            document.getElementById('formExamComplete').style.display='none';\n            document.getElementById('formExamMCQ').style.display='none';\n        }\n        \n      }\n      handleAddChoice()\n      { \n        \n        var x = document.createElement(\"div\");\n        x.setAttribute(\"class\", \"form-check form-check-inline\");\n        x.setAttribute(\"id\",\"choice\"+window.ChoiceCounter);\n        x.innerHTML='<input type=\"radio\" disabled class=\"form-check-input\">'+\n        '<label title for=\"formExamMCQ\" id= \"'+\"choice\"+window.ChoiceCounter+'\" class=\"form-check-label\">'+ document.getElementById('formChoiceTextbox').value+'</label>';\n        document.getElementById('ChoicesDiv').appendChild(x);\n        window.ChoiceCounter++;\n        var y=document.createElement(\"option\");\n        y.innerText=document.getElementById('formChoiceTextbox').value;\n        document.getElementById('ChoiceModelAns').appendChild(y);\n        document.getElementById('formChoiceTextbox').value='';\n      }\n      handleDeleteChoice()\n      {\n        window.ChoiceCounter--;\n        var y=document.getElementById('choice'+window.ChoiceCounter);\n        document.getElementById('ChoicesDiv').removeChild(y);\n      }\n      handleFinishQuestion()\n      {\n        if (document.getElementById('QuestionType').value=='MCQ')\n        {\n          window.ExamMCQQuestions.push(document.getElementById('TextMCQuestion').value);\n          window.ExamMCQCounter.push(window.ChoiceCounter);\n          for(var i=0;i<window.ChoiceCounter;i++)\n          {\n            \n            window.ExamMCQChoices.push(document.getElementById('choice'+i).textContent)\n          }\n\n\n        }\n        if (document.getElementById('QuestionType').value=='Complete')\n        {\n          \n          window.ExamComplete.push(document.getElementById('TextComplete1').value)\n          window.ExamComplete.push(document.getElementById('TextComplete2').value)\n      \n        }\n        if (document.getElementById('QuestionType').value=='T and F')\n        {\n          window.ExamTF.push(document.getElementById('TextTF').value)\n        }\n        if (document.getElementById('QuestionType').value=='Essay Question')\n        {\n          window.ExamEssay.push(document.getElementById('TextEssay').value)\n        }\n        if (document.getElementById('QuestionType').value=='Comparison')\n        {\n          window.ExamComparison.push(document.getElementById('TextComparison').value)\n        }\n      \n      }\n      handleFinishExam()\n      {\n        \n        window.ExamTitle.push(document.getElementById('TextExamTitle').value);\n        alert( window.ExamTitle);\n      }\n      handleConfirm()\n      {\n          \n          if (document.getElementById('TextExamTitle').value==\"\")\n          {\n              alert(\"You Must Enter an Exam Title First !\")\n          }\n          else\n          {\n              window.ExamTitleBOX=document.getElementById('TextExamTitle').value\n              document.getElementById('ExamtitleBox').style.display='none';\n          }\n          \n      }\n    render() {\n        return (\n        <div>\n          <div class=\"modal-custom\" id=\"ExamtitleBox\">\n          <Modal.Dialog  >\n              <Modal.Header closeButton>\n              <Modal.Title>Exam title</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <Form.Group controlId=\"formExamTitle\">\n                <Form.Control type=\"text\" id='TextExamTitle' placeholder=\"Enter Exam Title\" />\n                <Form.Text className=\"text-muted\">\n                Ex: Marketing Midterm Spring 2020\n                </Form.Text>\n                </Form.Group>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"primary\" onClick={this.handleConfirm} >Confirm</Button>\n            </Modal.Footer>\n          </Modal.Dialog>\n          </div>\n              \n    <Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\n        <br />\n    <Form style={{backgroundColor:'white'}}>\n  <Form.Group controlId=\"formQuestionType\">\n    <Form.Label>Question Type</Form.Label>\n    <Row>\n    <Form.Control id=\"QuestionType\" as=\"select\" style={{width:'35%',margin: '15px 15px 15px 15px'}} value={this.state.value} onChange={this.handleChange} placeholder=\"Choose Question Type\">\n    <option>Choose Question Type</option>\n    <option>MCQ</option>\n    <option>Complete</option>\n    <option>T and F</option>\n    <option>Essay Question</option>\n    <option hidden>Comparison</option>\n    </Form.Control>\n    <Button variant=\"primary\" onClick={this.handleSubmit} type=\"submit\">Submit</Button>\n   \n\n    </Row>\n    <Form.Text className=\"text-muted\">\n      Note: You can change Question Type at anytime from above\n    </Form.Text>\n\n    \n\n  </Form.Group>\n  \n  <Form.Group  style={{display:'none'}} id=\"formExamMCQ\" controlId=\"formExamMCQ\">\n \n    <Form.Label>Multiple Choice Question</Form.Label>\n    <Row>\n    <Form.Control  size=\"sm\" id=\"EssILO\" type=\"text\" style={{width:'50%',margin: '15px 15px 15px 15px'}} placeholder=\"Enter Question ILO\"></Form.Control>\n  <Form.Control required size=\"sm\" id=\"EssGrade\" style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\" placeholder=\"Enter Your Grade\" />\n   \n   </Row>\n    <Form.Control required size=\"sm\" id=\"TextMCQuestion\" type=\"text\" placeholder=\"Enter Your Question\" />\n    <br />\n    <Form.Control  required size=\"sm\" id=\"formChoiceTextbox\" type=\"text\" placeholder=\"Enter a Choice\" />\n    <Button  size=\"sm\" variant=\"primary\" onClick={this.handleAddChoice}>Add Choice</Button>\n    <Button id=\"btnDeleteChoice\"  size=\"sm\" variant=\"danger\" onClick={this.handleDeleteChoice}>Delete Choice</Button>\n    <div id=\"ChoicesDiv\"></div>\n    <Form.Control required size=\"sm\" as=\"select\" id=\"ChoiceModelAns\" placeholder=\"Choose Model Answer\">\n    <option>Choose Model Answer</option>\n    </Form.Control>\n    <Button size=\"sm\" variant=\"success\" onClick={()=>{this.SubmitMCQ(window.ExamTitleBOX,'1', document.getElementById('TextMCQuestion').value, window.ExamMCQChoices, \n      document.getElementById('ChoiceModelAns').value, document.getElementById('EssGrade').value,document.getElementById('EssILO').value)\n      }}>Finish Question</Button>\n    <Button style={{ float:'right'}} onClick={this.handleFinishExam}  variant=\"success\" >Finish Exam</Button>\n  \n  </Form.Group>\n\n\n  <Form.Group style={{display:'none'}} id=\"formExamComplete\" controlId=\"formExamComplete\">\n   \n    <Form.Label>Complete Question</Form.Label>\n    <Row>\n    <Form.Control  size=\"sm\" id=\"CompILO\" type=\"text\" style={{width:'50%',margin: '15px 15px 15px 15px'}} placeholder=\"Enter Question ILO\"></Form.Control>\n  <Form.Control size=\"sm\" id=\"CompGrade\" style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\" placeholder=\"Enter Your Grade\" />\n   \n   </Row>\n    <Form.Control size=\"sm\" id=\"TextComplete1\" type=\"text\" placeholder=\"Enter Your 1st part of the Question *before the space*\" />\n    <Form.Control size=\"sm\"id=\"TextComplete2\" type=\"text\" placeholder=\"Enter Your 2nd part of the Question *after the space*\" />\n    <br />\n    <Form.Control size=\"sm\" id=\"AnswerComplete\" type=\"text\" placeholder=\"Enter Your Model Answer *the space*\" />\n    <Button size=\"sm\" variant=\"success\"onClick={()=>{this.SubmitComplete(window.ExamTitleBOX,'1',document.getElementById('TextComplete1').value, document.getElementById('TextComplete2').value, \n      document.getElementById('AnswerComplete').value,document.getElementById('CompGrade').value,document.getElementById('CompILO').value)\n      }} >Finish Question</Button>\n    <Button style={{ float:'right'}} onClick={this.handleFinishExam}  variant=\"success\" >Finish Exam</Button>\n  </Form.Group>\n\n\n  <Form.Group style={{display:'none'}} id=\"formExamTF\" controlId=\"formExamTF\">\n    <Form.Label>True and False Question</Form.Label>\n    <Row>\n    <Form.Control  size=\"sm\" id=\"TFILO\" type=\"text\" style={{width:'50%',margin: '15px 15px 15px 15px'}} placeholder=\"Enter Question ILO\"></Form.Control>\n   <Form.Control size=\"sm\" id=\"TFGrade\" style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\" placeholder=\"Enter Your Grade\" />\n   \n   </Row>\n    <Form.Control size=\"sm\" id=\"TextTF\" type=\"text\" placeholder=\"Enter Your Question\" />\n      <br />\n      <Form.Control size=\"sm\" as=\"select\" id=\"TFModelAns\" placeholder=\"Choose Model Answer\">\n    <option>Choose Model Answer</option>\n    <option>True</option>\n    <option>False</option>\n    </Form.Control>\n    <Button size=\"sm\" variant=\"success\" onClick={ ()=>{this.SubmitTrueFalse(window.ExamTitleBOX,'1', document.getElementById('TextTF').value, \n    document.getElementById('TFModelAns').value, document.getElementById('TFGrade').value, document.getElementById('TFILO').value)}}>Finish Question</Button>\n    <Button style={{ float:'right'}}onClick={this.handleFinishExam}   variant=\"success\" >Finish Exam</Button>\n  </Form.Group>\n\n\n  <Form.Group style={{display:'none'}} id=\"formExamEssay\" controlId=\"formExamEssay\">\n    <Form.Label>Essay Question</Form.Label>\n    <Row>\n    <Form.Control  size=\"sm\" id=\"EssayILO\" type=\"text\" style={{width:'50%',margin: '15px 15px 15px 15px'}} placeholder=\"Enter Question ILO\"></Form.Control>\n   <Form.Control size=\"sm\" id=\"EssayGrade\" style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\" placeholder=\"Enter Your Grade\" />\n   \n   </Row>\n    <Form.Control size=\"sm\" id=\"TextEssay\" type=\"text\" placeholder=\"Enter Your Essay Question\" />\n   <br />\n    <Form.Control size=\"sm\" as=\"textarea\"id=\"AnswerEssay\" placeholder=\"Enter Your Model Answer\" />\n    <Button size=\"sm\" variant=\"success\" onClick={()=>{this.SubmitEssay(window.ExamTitleBOX,'1', document.getElementById('TextEssay').value, \n    document.getElementById('AnswerEssay').value, document.getElementById('EssayGrade').value, document.getElementById('EssayILO').value)}}>Finish Question</Button>\n    <Button style={{ float:'right'}}onClick={this.handleFinishExam}   variant=\"success\" >Finish Exam</Button>\n  </Form.Group>\n\n\n  <Form.Group style={{display:'none'}} id=\"formExamCompare\" controlId=\"formExamCompare\">\n    <Form.Label>Comparison Question</Form.Label>\n    <Row>\n    <Form.Control  size=\"sm\" type=\"text\" style={{width:'50%',margin: '15px 15px 15px 15px'}} placeholder=\"Enter Question ILO\"></Form.Control>\n   <Form.Control size=\"sm\" style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\" placeholder=\"Enter Your Grade\" />\n   \n   </Row>\n    <Form.Control size=\"sm\" id=\"TextComparison\" type=\"text\" placeholder=\"Enter Your Compare Question\" />\n    <br />\n    <Form.Control size=\"sm\" as=\"textarea\" placeholder=\"Enter Your Model Answer for the 1st Compare Element\" />\n    <Form.Control size=\"sm\" as=\"textarea\" placeholder=\"Enter Your Model Answer for the 2st Compare Element\" />\n    <Button size=\"sm\" variant=\"success\"onClick={this.handleFinishQuestion} >Finish Question</Button>\n    <Button style={{ float:'right'}}onClick={this.handleFinishExam}   variant=\"success\" >Finish Exam</Button>\n  </Form.Group>\n\n\n\n</Form>\n\n </Container>\n            \n          </div>\n        );\n    }\n}\n\nexport default CreateExam;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './CreateExam.css';\nimport './Popup.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Modal from 'react-bootstrap/Modal'\nimport ListGroup from 'react-bootstrap/ListGroup'\nclass FromExisting extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {value: '',ILO:[], Mixreturn:[], QuestionList:[], CounterList:[], AnswerList:[],\n      CorrectAnswerList:[], ILOList:[], GradeList:[]};\n      this.GetILO();    \n      \n    }\n\n    GetILO()\n    {\n      fetch('/GetILO/'+1)\n        .then(response => response.json())\n        .then(data => this.setState({ILO : data.ILO_List}));\n    }\n    MixQuestion(ExamTitle, InstructorID, QuestionType, ILO, Number)\n    {\n      fetch('/MixQuestion/'+ExamTitle+'/'+InstructorID+'/'+QuestionType+'/'+ILO+'/'+Number)\n        .then(response => response.json())\n        .then(data => this.setState({Mixreturn : data.MixQues}));\n    }\n    handleConfirm()\n    {\n        \n        if (document.getElementById('TextExamTitle').value==\"\")\n        {\n            alert(\"You Must Enter an Exam Title First !\")\n        }\n        else\n        {\n            window.ExamTitleBOX=document.getElementById('TextExamTitle').value\n            document.getElementById('ExamtitleBox').style.display='none';\n        }\n        \n    }\n    handleTopic(){}\n    handleType(){}\n    handleAddtoExam(){}\n    handleFinishExam(){\n    \n    }\n  \n    render() {\n        return (\n        <div>\n          <div class=\"modal-custom\" id=\"ExamtitleBox\">\n          <Modal.Dialog  >\n              <Modal.Header closeButton>\n              <Modal.Title>Exam title</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <Form.Group controlId=\"formExamTitle\">\n                <Form.Control type=\"text\" id='TextExamTitle' placeholder=\"Enter Exam Title\" />\n                <Form.Text className=\"text-muted\">\n                Ex: Marketing Midterm Spring 2020\n                </Form.Text>\n                </Form.Group>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"primary\" onClick={this.handleConfirm} >Confirm</Button>\n            </Modal.Footer>\n          </Modal.Dialog>\n          </div>\n              \n    <Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\n        <br />\n    <Form style={{backgroundColor:'white'}}>\n    <Form.Label>Now you can Randomly Select Questions According to it's Topic and Type</Form.Label>\n  \n  <Form.Group controlId=\"formQuestionType\">\n    <Row>\n    <Form.Control as=\"select\" id=\"ILO\" style={{width:'50%',margin: '15px 15px 15px 15px'}} onChange={this.handleTopic} >\n    {this.state.ILO.map((fbb) => <option key={fbb.key} value={fbb.key} >{fbb}</option>)}\n    </Form.Control>\n\n\n    <Form.Control id=\"QuestionType\" as=\"select\" id=\"QuesType\" style={{width:'40%',margin: '15px 15px 15px 15px'}} onChange={this.handleType} placeholder=\"Choose Question Type\">\n    <option>Choose Question Type</option>\n    <option>MCQ</option>\n    <option>Complete</option>\n    <option>T and F</option>\n    <option>Essay</option>\n    <option hidden>Comparison</option>\n    </Form.Control>\n    </Row>\n    <Row>\n   \n    <Form.Control required id=\"Number\"  style={{width:'50%',margin: '15px 15px 15px 15px'}} type=\"number\" placeholder=\"Enter Number of Questions Needed\" />\n    <Button variant=\"primary\"style={{width:'40%',margin: '15px 15px 15px 15px'}} onClick={()=>{this.MixQuestion(window.ExamTitleBOX,\n    '1',document.getElementById('QuesType').value, document.getElementById('ILO').value, document.getElementById('Number').value)\n      }}\n       type=\"primary\">Add to Exam</Button>\n   </Row>\n\n   <Button style={{ float:'right'}} size=\"lg\" onClick={this.handleFinishExam}   variant=\"success\" >Finish Exam</Button>\n  </Form.Group>\n  \n</Form>\n\n </Container>\n            \n          </div>\n        );\n    }\n}\n\nexport default FromExisting;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './ViewExams.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup'\nclass ViewExams extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {value: '', Exams:null};\n        fetch('/ViewExams/'+1)\n          .then(response => response.json())\n          .then(data => this.setState({Exams : data.ans}));\n          \n    }\n\n    render() {\n       //var names= window.ExamTitle;\n       var names = this.state.Exams\n       \n       //enta 3yz el list kolha wla esm w7ed bs\n       if (names==null)\n       {\n        var nameslist='No Exams Yet'\n       }\n       else\n       {\n        var nameslist= names.map(function(name){\n            const href = `/#/instructor-exam?${new URLSearchParams({ name }).toString()}`;\n            return <ListGroup.Item href={href} action>{name}</ListGroup.Item>;\n\n          })\n         \n       }\n    \n        \n       return (\n        <div>\n          \n          <h1>All Exams</h1>\n   \n    <Container style={{width:'660px',height:'550px',backgroundColor:'white', overflow:'scroll'}}>\n        <br />\n        <ListGroup style={{textAlign: 'center'}}  >{nameslist}</ListGroup>\n    </Container>\n        </div>\n        );\n    }\n}\n\nexport default ViewExams;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './ViewExams.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup'\nclass ViewEdit extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {value: '', Exams:null};\n      fetch('/ViewExams/'+1)\n        .then(response => response.json())\n        .then(data => this.setState({Exams : data.ans}));\n        \n    }\n\n    render() {\n       //var names=  window.ExamTitle;\n       var names = this.state.Exams\n       if (names==null)\n       {\n        var nameslist='No Exams Yet'\n       }\n       else\n       { \n   \n\n          var nameslist= names.map(function(name){\n            const href1 = `/#/instructor-view-edit-exam?${new URLSearchParams({ name }).toString()}`;\n            return (\n                \n                <Row style={{ justifyContent:'space-evenly'}}>\n                  <ListGroup style={{textAlign: 'center',width:'70%',margin: '10px 10px 10px 10px'}} >\n                    <ListGroup.Item href=\"/#/instructor-exam\"disabled>{name}</ListGroup.Item>\n                   </ ListGroup>\n                  \n                 <Button style={{width:'10%',margin: '10px 10px 10px 10px'}} href={href1} size=\"sm\" variant=\"primary\" >Edit</ Button>\n                 <Button style={{width:'10%',margin: '10px 10px 10px 10px'}} size=\"sm\" variant=\"danger\" >Delete</ Button>\n                </Row>\n    \n              \n                   ) \n          })\n       }\n    \n        \n       return (\n        <div>\n          \n          <h1>All Exams</h1>\n   \n    <Container style={{width:'660px',height:'550px',backgroundColor:'white', overflow:'scroll'}}>\n        <br />\n        {nameslist}\n    </Container>\n        </div>\n        );\n    }\n}\n\nexport default ViewEdit;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './ViewExams.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup'\nclass ViewGrade extends Component {\n\n    render() {\n       var names= ['Exam1','Exam2','Exam3'];\n       if (names==null)\n       {\n        var nameslist='No Exams Yet'\n       }\n       else\n       { \n   \n\n          var nameslist= names.map(function(name){\n            return (\n                \n                <Row style={{ justifyContent:'space-evenly'}}>\n                  <ListGroup style={{textAlign: 'center',width:'80%',margin: '10px 10px 10px 10px'}} >\n                    <ListGroup.Item href=\"/#/instructor-exam\"disabled>{name}</ListGroup.Item>\n                   </ ListGroup>\n                 <Button style={{width:'10%',margin: '10px 10px 10px 10px'}} size=\"sm\" variant=\"success\" >Grade</ Button>\n                \n                </Row>\n    \n              \n                   ) \n          })\n       }\n    \n        \n       return (\n        <div>\n          \n          <h1>All Exams</h1>\n   \n    <Container style={{width:'660px',height:'550px',backgroundColor:'white', overflow:'scroll'}}>\n        <br />\n        {nameslist}\n    </Container>\n        </div>\n        );\n    }\n}\n\nexport default ViewGrade;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './CreateExam.css';\nimport './Popup.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nclass EditMCQ extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {value: '', Question:null, AnswerList:null, CorrectAnswer:null, ILO:null,  Grade:null, IsUpdated:null,\n      OldQuestion:null, InstructorID:1, ExamTitle:'Marketing'};\n      this.GetMCQInfo()\n      this.Autofill()\n          \n    }\n\n    //this is for one question\n    GetMCQInfo()\n    {\n      const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n      const exam = params.get('exam');\n      //params = new URLSearchParams(window.location.hash.split(\"?\")[2]);\n      const question = params.get('question');\n      fetch('/GetAMCQ/'+exam+'/'+1+'/'+question)\n        .then(response => response.json())\n        .then(data => this.setState({Question:data.Question, AnswerList:data.AnswerList,\n            CorrectAnswer:data.CorrectAnswer, ILO:data.ILO,  Grade:data.Grade}));\n    }\n\n    //et2aked ml choices variable\n    UpdateMCQ(NewQuestion, NewAnswers, NewCorrectAns, NewILO, NewGrade)\n    {\n      fetch('/UpdateMCQ/'+this.state.OldQuestion+'/'+NewQuestion+'/'+NewAnswers+'/'+NewCorrectAns+'/'+this.state.ExamTitle+'/'\n      +NewILO+'/'+NewGrade+'/'+this.state.InstructorID)\n        .then(response => response.json())\n        .then(data => this.setState({IsUpdated:data.Updated}));\n    }\n\n    Autofill()\n    {\n        document.getElementById('MCQILO').value=this.state.ILO;\n        document.getElementById('MCQGrade').value=this.state.Grade;\n        document.getElementById('TextMCQuestion').value=this.state.Question;\n        document.getElementById('ChoiceModelAns').value=this.state.CorrectAnswer;\n    }\n   handleSave()\n   {\n    //eb3t database\n    alert(\"Saved Successfully\")\n   }\n   handleAddChoice()\n      { \n        \n        var x = document.createElement(\"div\");\n        x.setAttribute(\"class\", \"form-check form-check-inline\");\n        x.setAttribute(\"id\",\"choice\"+window.ChoiceCounter);\n        x.innerHTML='<input type=\"radio\" disabled class=\"form-check-input\">'+\n        '<label title for=\"formExamMCQ\" id= \"'+\"choice\"+window.ChoiceCounter+'\" class=\"form-check-label\">'+ document.getElementById('formChoiceTextbox').value+'</label>';\n        document.getElementById('ChoicesDiv').appendChild(x);\n        window.ChoiceCounter++;\n        var y=document.createElement(\"option\");\n        y.innerText=document.getElementById('formChoiceTextbox').value;\n        document.getElementById('ChoiceModelAns').appendChild(y);\n        document.getElementById('formChoiceTextbox').value='';\n      }\n      handleDeleteChoice()\n      {\n        window.ChoiceCounter--;\n        var y=document.getElementById('choice'+window.ChoiceCounter);\n        document.getElementById('ChoicesDiv').removeChild(y);\n      }\n    render() {\n        return (\n        <div>\n      <Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\n              <br />\n      <Form.Group   id=\"formExamMCQ\" controlId=\"formExamMCQ\">\n      \n      <Form.Label>Multiple Choice Question</Form.Label>\n      <Row>\n      <Form.Control  size=\"sm\" type=\"text\" id=\"MCQILO\" style={{width:'50%',margin: '15px 15px 15px 15px'}} placeholder=\"Enter Question ILO\"></Form.Control>\n      <Form.Control required size=\"sm\"id=\"MCQGrade\" style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\" placeholder=\"Enter Your Grade\" />\n\n      </Row>\n      <Form.Control required size=\"sm\" id=\"TextMCQuestion\" type=\"text\" placeholder=\"Enter Your Question\" />\n      <br />\n      <Form.Control  required size=\"sm\" id=\"formChoiceTextbox\" type=\"text\" placeholder=\"Enter a Choice\" />\n      <Button  size=\"sm\" variant=\"primary\" onClick={this.handleAddChoice}>Add Choice</Button>\n      <Button id=\"btnDeleteChoice\"  size=\"sm\" variant=\"danger\" onClick={this.handleDeleteChoice}>Delete Choice</Button>\n      <div id=\"ChoicesDiv\"></div>\n      <Form.Control required size=\"sm\" as=\"select\" id=\"ChoiceModelAns\" placeholder=\"Choose Model Answer\">\n      <option>Choose Model Answer</option>\n      </Form.Control>\n      <Button size=\"sm\" style={{ float:'right'}} variant=\"success\"\n      onClick={()=>{this.UpdateMCQ(this.state.OldQuestion,document.getElementById('TextMCQuestion').value, \n      document.getElementById('formChoiceTextbox').value, document.getElementById('ChoiceModelAns').value, \n      document.getElementById('MCQILO').value, document.getElementById('MCQGrade').value)\n      }}\n        >Save Changes</Button>\n      </Form.Group>\n      </Container>\n\n        </div>\n        )\n    }\n}\nexport default EditMCQ;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './CreateExam.css';\nimport './Popup.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nclass EditTF extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {value: '', Question:null, CorrectAnswer:null, ILO:null,  Grade:null, IsUpdated:null,\n        OldQuestion:null, ExamTitle:'Marketing', InstructorID:1};\n        this.GetTFInfo()\n        //this.Autofill()\n          \n    }\n\n    //this is for one question\n    GetTFInfo()\n    {\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n        const exam = params.get('exam');\n        //params = new URLSearchParams(window.location.hash.split(\"?\")[2]);\n        const question = params.get('question');\n        fetch('/GetATrueFalseQues/'+exam+'/'+1+'/'+question)\n            .then(response => response.json())\n            .then(data => this.setState({Question:data.Question, CorrectAnswer:data.CorrectAnswer, ILO:data.ILO,  Grade:data.Grade}));\n    }\n\n    UpdateTrueFalse(NewQuestion, NewCorrectAns, NewILO, NewGrade)\n    {\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n        const exam = params.get('exam');\n        //params = new URLSearchParams(window.location.hash.split(\"?\")[2]);\n        const question = params.get('question');\n      fetch('/UpdateTrueFalse/'+question+'/'+NewQuestion+'/'+NewCorrectAns+'/'+exam+'/'\n      +NewILO+'/'+NewGrade+'/'+1)\n        .then(response => response.json())\n        .then(data => this.setState({IsUpdated:data.Updated}));\n    }\n\n    // Autofill()\n    // {\n    //     document.getElementById('TFILO').value=this.state.ILO;\n    //     document.getElementById('TFGrade').value=this.state.Grade;\n    //     document.getElementById('TextTF').value=this.state.Question;\n    //     document.getElementById('TFModelAns').value=this.state.CorrectAnswer;\n    // }\n   handleSave()\n   {\n    //eb3t database\n    alert(\"Saved Successfully\")\n   }\n    render() {\n        return (\n        <div>\n<Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\n        <br />\n<Form.Group  id=\"formExamTF\" controlId=\"formExamTF\">\n    <Form.Label>True and False Question</Form.Label>\n    <Row>\n    <Form.Control  size=\"sm\"id=\"TFILO\" type=\"text\" style={{width:'50%',margin: '15px 15px 15px 15px'}} value={this.state['ILO']} \n    placeholder=\"Enter Question ILO\"></Form.Control>\n   <Form.Control size=\"sm\"id=\"TFGrade\" style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\" value={this.state['Grade']} \n   placeholder=\"Enter Your Grade\" />\n   \n   </Row>\n    <Form.Control size=\"sm\" id=\"TextTF\" type=\"text\" value={this.state['Question']} placeholder=\"Enter Your Question\" />\n      <br />\n      <Form.Control size=\"sm\" as=\"select\" id=\"TFModelAns\" value={this.state['CorrectAnswer']}  placeholder=\"Choose Model Answer\">\n    <option>Choose Model Answer</option>\n    <option>True</option>\n    <option>False</option>\n    </Form.Control>\n    <Button size=\"sm\" style={{ float:'right'}} variant=\"success\"\n    onClick={()=>{this.UpdateTrueFalse(document.getElementById('TextTF').value, \n    document.getElementById('TFModelAns').value, document.getElementById('TFILO').value, \n    document.getElementById('TFGrade').value)\n    }}\n     >Save Changes</Button>\n   \n    </Form.Group>\n    </Container>\n    \n        </div>\n        )\n    }\n}\nexport default EditTF;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './CreateExam.css';\nimport './Popup.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nclass EditComplete extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {value: '', Question1:null, Question2:null, CorrectAnswer:null, ILO:null,  Grade:null, IsUpdated:null, \n        InstructorID:1, ExamTitle:'Marketing', OldQuestion1:null, OldQuestion2:null};\n        this.GetCompleteInfo()\n        //this.Autofill()\n        \n          \n    }\n\n    //this is for one question\n    GetCompleteInfo()\n    {\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n        const exam = params.get('exam');\n        //params = new URLSearchParams(window.location.hash.split(\"?\")[2]);\n        const question = params.get('question');\n        fetch('/GetACompleteQues/'+exam+'/'+1+'/'+question)\n            .then(response => response.json())\n            .then(data => this.setState({Question1:data.Question1, Question2:data.Question2, \n            CorrectAnswer:data.CorrectAnswer, ILO:data.ILO,  Grade:data.Grade}));\n    }\n\n    UpdateComplete(NewQuestion1, NewQuestion2, NewCorrectAns, NewILO, NewGrade)\n    {\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n        const exam = params.get('exam');\n        //params = new URLSearchParams(window.location.hash.split(\"?\")[2]);\n        const question = params.get('question');\n      fetch('/UpdateComplete/'+question+'/'+NewQuestion1+'/'+NewQuestion2+'/'\n      +NewCorrectAns+'/'+exam+'/'+NewILO+'/'+NewGrade+'/'+1)\n        .then(response => response.json())\n        .then(data => this.setState({IsUpdated:data.Updated}));\n\n    }\n\n    // Autofill()\n    // {\n    //     document.getElementById('CompleteILO').value=this.state.ILO;\n    //     document.getElementById('CompleteGrade').value=this.state.Grade;\n    //     document.getElementById('TextComplete1').value=this.state.Question1;\n    //     document.getElementById('TextComplete2').value=this.state.Question2;\n    //     document.getElementById('AnswerComplete').value=this.state.CorrectAnswer;\n    // }\n\n   handleSave()\n   {\n    //eb3t database\n    alert(\"Saved Successfully\")\n   }\n    render() {\n        return (\n        <div>\n<Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\n        <br />\n<Form.Group id=\"formExamComplete\" controlId=\"formExamComplete\">\n   \n   <Form.Label>Complete Question</Form.Label>\n   <Row>\n   <Form.Control  size=\"sm\" id=\"CompleteILO\" type=\"text\" style={{width:'50%',margin: '15px 15px 15px 15px'}} value={this.state['ILO']} \n   placeholder=\"Enter Question ILO\"></Form.Control>\n   <Form.Control size=\"sm\" id=\"CompleteGrade\" style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\" value={this.state['Grade']} \n   placeholder=\"Enter Your Grade\" />\n   \n   </Row>\n   <Form.Control size=\"sm\" id=\"TextComplete1\" type=\"text\" value={this.state['Question1']}  placeholder=\"Enter Your 1st part of the Question *before the space*\" />\n   <Form.Control size=\"sm\"id=\"TextComplete2\" type=\"text\" value={this.state['Question2']}  placeholder=\"Enter Your 2nd part of the Question *after the space*\" />\n   <br />\n   <Form.Control size=\"sm\" id=\"AnswerComplete\" type=\"text\" value={this.state['CorrectAnswer']} placeholder=\"Enter Your Model Answer *the space*\" />\n   <Button size=\"sm\" style={{ float:'right'}} variant=\"success\"\n   onClick={()=>{this.UpdateComplete(document.getElementById('TextComplete1').value, \n   document.getElementById('TextComplete2').value, document.getElementById('AnswerComplete').value,\n    document.getElementById('CompleteILO').value, document.getElementById('CompleteGrade').value)\n   }}\n   >Save Changes</Button>\n   \n   </Form.Group>\n   </Container>\n        </div>\n        )\n    }\n}\nexport default EditComplete;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './CreateExam.css';\nimport './Popup.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nclass EditEssay extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {value: '', Question:null, CorrectAnswer:null, ILO:null,  Grade:null, IsUpdated:null,\n        OldQuestion:null, ExamTitle:'Marketing', InstructorID:1};\n        this.GetEssayInfo()\n        //this.Autofill()\n        \n          \n    }\n\n    //this is for one question\n    GetEssayInfo()\n    {\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n        const exam = params.get('exam');\n        //params = new URLSearchParams(window.location.hash.split(\"?\")[2]);\n        const question = params.get('question');\n        fetch('/GetAEssQues/'+exam+'/'+1+'/'+question)\n            .then(response => response.json())\n            .then(data => this.setState({Question:data.Question, CorrectAnswer:data.CorrectAnswer, ILO:data.ILO,  Grade:data.Grade}));\n    }\n\n    UpdateEssay(NewQuestion, NewCorrectAns, NewILO, NewGrade)\n    {\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n        const exam = params.get('exam');\n        //params = new URLSearchParams(window.location.hash.split(\"?\")[2]);\n        const question = params.get('question');\n      fetch('/UpdateEssay/'+question+'/'+NewQuestion+'/'+NewCorrectAns+'/'+exam+'/'\n      +NewILO+'/'+NewGrade+'/'+1)\n        .then(response => response.json())\n        .then(data => this.setState({IsUpdated:data.Updated}));\n    }\n\n    // async Autofill()\n    // {\n    //     document.getElementById('EssayILO').value=this.state.ILO;\n    //     document.getElementById('EssayGrade').value=this.state.Grade;\n    //     document.getElementById('TextEssay').value=this.state.Question;\n    //     document.getElementById('AnswerEssay').value=this.state.CorrectAnswer;\n    // }\n   handleSave()\n   {\n    //eb3t database\n    alert(\"Saved Successfully\")\n   }\n    render() {\n        return (\n        <div>\n<Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\n        <br />\n<Form.Group  id=\"formExamEssay\" controlId=\"formExamEssay\">\n    <Form.Label>Essay Question</Form.Label>\n    <Row>\n    <Form.Control  size=\"sm\"id=\"EssayILO\" type=\"text\" style={{width:'50%',margin: '15px 15px 15px 15px'}} value={this.state['ILO']} \n    placeholder=\"Enter Question ILO\"></Form.Control>\n   <Form.Control size=\"sm\" id=\"EssayGrade\"style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\" value={this.state['Grade']}\n    placeholder=\"Enter Your Grade\" />\n   \n   </Row>\n    <Form.Control size=\"sm\" id=\"TextEssay\" type=\"text\" value={this.state['Question']} placeholder=\"Enter Your Essay Question\" />\n   <br />\n    <Form.Control size=\"sm\" as=\"textarea\"id=\"AnswerEssay\" value={this.state['CorrectAnswer']} placeholder=\"Enter Your Model Answer\" />\n    <Button size=\"sm\" style={{ float:'right'}} variant=\"success\"\n     onClick={()=>{this.UpdateEssay(document.getElementById('TextEssay').value, \n     document.getElementById('AnswerEssay').value, document.getElementById('EssayILO').value, \n     document.getElementById('EssayGrade').value)\n     }}\n      >Save Changes</Button>\n    </Form.Group>\n    </Container>\n        </div>\n        )\n    }\n}\nexport default EditEssay;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './StudentHome.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nclass StudentHome extends Component {\n\n    render() {\n        return (\n        <div>\n          \n          <h1>Welcome ya Taleb.</h1>\n    <br />\n    <Container style={{ justifyContent:'center'}}>\n     <Row style={{ justifyContent:'space-evenly'}}>\n         <Col  style={{ flexGrow:'unset'}}><Button style={{width: 'max-content'}} href=\"#/student-ask\" size=\"lg\"variant=\"primary\">Ask a Question</Button></Col>\n         <Col style={{ flexGrow:'unset'}} ><Button style={{width: 'max-content'}} href=\"#/student-view-all\" size=\"lg\" variant=\"primary\">Take Exam</Button></Col>\n     </Row>\n\n </Container>\n            \n          </div>\n        );\n    }\n}\n\nexport default StudentHome;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './StudentAsk.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nclass StudentAsk extends Component {\n\n \n    render() {\n        return (\n        <div>\n    <Container style={{width:'660px',height:'590px',backgroundColor:'white',overflow:'scroll'}}>\n        <br />\n    <Form style={{backgroundColor:'white'}}>\n\n  <Form.Group  id=\"formExamEssay\" controlId=\"formExamEssay\">\n    <Form.Label>Essay Question</Form.Label>\n    <Form.Control id=\"TextEssay\" as=\"textarea\" placeholder=\"Enter Your Essay Question\" />\n   <br />\n    <Button  style={{float:'right'}} variant=\"success\" >Get Answer</Button>\n\n  </Form.Group>\n\n</Form>\n\n </Container>\n            \n          </div>\n        );\n    }\n}\n\nexport default StudentAsk;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './StudentExams.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup'\nclass StudentExams extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {value: '', Exams:null};\n        fetch('/ViewExams/'+1)\n          .then(response => response.json())\n          .then(data => this.setState({Exams : data.ans}));\n          \n    }\n\n    render() {\n       //var names= window.ExamTitle;\n       var names = this.state.Exams\n       if (names==null)\n       {\n        var nameslist='No Exams Yet'\n       }\n       else\n       {\n        var nameslist= names.map(function(name){\n            return  <ListGroup.Item action>{name}</ListGroup.Item>;\n          })\n       }\n    \n        \n       return (\n        <div>\n          \n          <h1>All Exams</h1>\n   \n    <Container style={{width:'660px',height:'550px',backgroundColor:'white',overflow:'scroll'}}>\n        <br />\n       <ListGroup style={{textAlign: 'center'}} >{nameslist}</ListGroup>\n    </Container>\n        </div>\n        );\n    }\n}\n\nexport default StudentExams;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Exam.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Exam from './Exam.js';\n\nclass ExamMCQ extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {value: '', QuestionList:[], CounterList:[], AnswerList:[],CorrectAnswerList:[], \n        ILOList:[], GradeList:[]};\n        this.GetMCQ()\n          \n    }\n\n    GetMCQ()\n    {\n        var examname=this.props.passedname\n      fetch('/GetMCQ/'+examname+'/'+1)\n          .then(response => response.json())\n          .then(data => this.setState({QuestionList:data.QuestionList, CounterList:data.CounterList, AnswerList:data.AnswerList,\n            CorrectAnswerList:data.CorrectAnswerList, ILOList:data.ILOList, GradeList:data.GradeList}));\n    }\n\n    handleTopic(){}\n\n    render(){\n        var ExamMCQQuestions = this.state.QuestionList;\n        var ExamMCQCounter   = this.state.CounterList;\n        var ExamMCQChoices   = this.state.AnswerList;\n\n        //var ExamMCQQuestions = window.ExamMCQQuestions;\n        //var ExamMCQCounter = window.ExamMCQCounter;\n        //var ExamMCQChoices = window.ExamMCQChoices;\n\n        var r = \"\";\n        var i = 0;\n        var MCQHead = \"\";\n        var answer = \"\";\n        var choicesNumber = 0;\n        if (ExamMCQQuestions.length != 0) {\n            MCQHead = <div><Form.Label  ><b>Choose the Correct Answer:</b></Form.Label> <br /></div>;\n\n            r = ExamMCQChoices.map((choice, index) => {\n                if (choicesNumber == 0) {\n                    choicesNumber = ExamMCQCounter[i] - 1;\n                    i += 1;\n                    answer = \"answer\" + (i);\n                    return (\n                        <div>\n                            <Form.Label  >Question {i}: {ExamMCQQuestions[i - 1]}  </Form.Label> \n                    \n            \n                             <br />\n                            <Form.Label inline><input type=\"radio\" name={answer} value={choice} disabled /> {choice} </Form.Label>\n                            </div>\n                    )\n                }\n                else {\n                    choicesNumber -= 1;\n                    return (\n                        <div >\n                            <Form.Label inline><input type=\"radio\" name={answer} value={choice} disabled /> {choice} </Form.Label>\n                        </div>\n                    )\n                }\n\n\n            });\n\n        }\n\n        return(\n            <div>\n            { MCQHead }\n            { r }\n            </div>\n        )\n    }\n}\nexport default ExamMCQ;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Exam.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Exam from './Exam.js';\n\nclass ExamEssay extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {value: '', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[]};\n        this.GetEssay()\n          \n    }\n\n    GetEssay()\n    {\n        var examname=this.props.passedname\n        fetch('/GetEssay/'+examname+'/'+1)\n          .then(response => response.json())\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \n            ILOList:data.ILOList, GradeList:data.GradeList}));\n    }\n    render(){\n        //var ExamEssay=window.ExamEssay;\n        var ExamEssay = this.state.QuestionList\n        \n        var EssayHead=\"\";\n        var Essay=\"\";\n        if(ExamEssay.length!=0){\n            EssayHead = <div><Form.Label  ><b>Essay Questions:</b></Form.Label> <br /></div>;\n            Essay= ExamEssay.map((Question,index)=>{\n            return(\n                 <div>\n                    <Form.Label  >Question {index+1}: {ExamEssay[index]}  </Form.Label>\n                          \n                     <br />\n                    <Form.Label><textarea placeholder=\"Answer..\" disabled style={{width:\"600px\"}}></textarea></Form.Label>\n                </div>\n                )\n            }\n            );\n        }\n\n        return (\n            <div>\n                {EssayHead}\n                {Essay}\n            </div>\n        )\n    }\n}\n\nexport default ExamEssay;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Exam.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Exam from './Exam.js';\n\nclass ExamTF extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {value: '', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[]};\n        this.GetTF()\n          \n    }\n        \n    GetTF()\n    {\n        var examname=this.props.passedname\n        fetch('/GetTF/'+examname+'/'+1)\n          .then(response => response.json())\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \n            ILOList:data.ILOList, GradeList:data.GradeList}));\n    }\n    render() {\n        //var ExamTF = window.ExamTF;\n        var ExamTF = this.state.QuestionList;\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n        const name = params.get('name');\n        var TFHead = \"\";\n        var TF = \"\";\n        if (ExamTF.length != 0) {\n            TFHead = <div><Form.Label  ><b>True or False:</b></Form.Label> <br /></div>;\n            TF = ExamTF.map((Question, index) => {\n                return (\n                    <div>\n                        <Form.Label  >Question {index + 1}: {ExamTF[index]}  </Form.Label>\n                              \n                        <Form.Label style={{float:\"right\", paddingRight:\"6px\"}}><input type=\"radio\" name={index} value=\"False\" disabled/>F </Form.Label> \n                        <Form.Label style={{ float: \"right\" ,paddingRight:\"6px\"  }}><input type=\"radio\" name={index} value=\"True\" disabled />T </Form.Label>\n\n                    </div>\n                )\n            }\n            );\n        }\n\n        return (\n            <div>\n                {TFHead}\n                {TF}\n            </div>\n        )\n    }\n}\n\nexport default ExamTF;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Exam.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Exam from './Exam.js';\n\nclass ExamComplete extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {value: '', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[]};\n        this.GetComplete()\n        \n          \n    }\n\n    GetComplete()\n    {\n        var examname=this.props.passedname\n        fetch('/GetComplete/'+examname+'/'+1)\n          .then(response => response.json())\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \n            ILOList:data.ILOList, GradeList:data.GradeList}));\n    }\n    render() {\n        //var ExamComplete = window.ExamComplete;\n        var ExamComplete = this.state.QuestionList;\n\n        var CompleteHead = \"\";\n        var Complete = \"\";\n        var i=0\n        if (ExamComplete.length != 0) {\n            CompleteHead = <div><Form.Label  ><b>Complete:</b></Form.Label> <br /></div>;\n            Complete = ExamComplete.map((Question, index) => {\n                if (index%2==0)\n                {\n                    i+=1;\n                    return (\n                        <div>\n                            <Form.Label  >Question {i}: </Form.Label> \n                        \n                            <br/>\n                            <Form.Label>  {ExamComplete[index]}   </Form.Label>\n                            <input type=\"text\" placeholder=\"Complete..\" disabled style={{margin:\"6px\"}}/>\n                            <Form.Label> {ExamComplete[index+1]} </Form.Label>\n                        </div>\n                    )\n                }\n            }\n            );\n        }\n\n        return (\n            <div>\n                {CompleteHead}\n                {Complete}\n            </div>\n        )\n    }\n}\n\nexport default ExamComplete;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Exam.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport ExamMCQ from './ExamMCQ.js';\nimport ExamEssay from './ExamEssay.js';\nimport ExamTF from './ExamTF.js';\nimport ExamComplete from './ExamComplete.js';\n\n\n\nclass Exam extends Component {\n\n    constructor(props) {\n        super(props);\n        \n          \n    }\n\n    render() {\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n        const name = params.get('name');\n        window.examname=name;\n        return (\n            <div>\n    \n        <Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\n            <br />\n        <Form>\n        <Form.Label style={{ display: 'flex', justifyContent: 'center' }}>{name}</Form.Label>\n            <ExamMCQ passedname={name} />\n            <ExamTF passedname={name}/>\n            <ExamComplete passedname={name}/>\n            <ExamEssay passedname={name}/>\n        </Form>\n        </Container>\n            </div>\n            );\n    }\n}\n\nexport default Exam;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Exam.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup'\n\nclass ViewEditMCQ extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {value: '', MCQQuestions:[], MCQCounter:[], MCQChoices:[],CorrectAnswerList:[], \n        ILOList:[], GradeList:[]};\n        this.GetMCQ()\n             \n    }\n\n    GetMCQ()\n    {\n        var examname=this.props.passedname\n        fetch('/GetMCQ/'+examname+'/'+1)\n          .then(response => response.json())\n          .then(data => this.setState({MCQQuestions : data.QuestionList, MCQCounter : data.CounterList, MCQChoices : data.AnswerList,\n            CorrectAnswerList:data.CorrectAnswerList, ILOList:data.ILOList, GradeList:data.GradeList}));\n    }\n    \n\n    render(){\n        var ExamMCQQuestions = this.state.MCQQuestions;\n        var ExamMCQCounter = this.state.MCQCounter;\n        var ExamMCQChoices = this.state.MCQChoices;\n\n        var r = \"\";\n        var i = 0;\n        var MCQHead = \"\";\n        var answer = \"\";\n        var choicesNumber = 0;\n        if (ExamMCQQuestions.length != 0) {\n            MCQHead = <div><Form.Label  ><b>Choose the Correct Answer:</b></Form.Label> <br /></div>;\n\n            r = ExamMCQChoices.map((choice, index) => {\n                \n                if (choicesNumber == 0) {\n                    choicesNumber = ExamMCQCounter[i] - 1;\n                    i += 1;\n                    answer = \"answer\" + (i);\n                    var question = ExamMCQQuestions[i - 1]\n                    var exam = this.props.passedname\n                    const href1 = `/#/instructor-edit-mcq?${new URLSearchParams({ exam, question }).toString()}`;\n                    return (\n                        <div>\n                            <Form.Label  >Question {i}: {ExamMCQQuestions[i - 1]}  </Form.Label> \n                            <Button style={{width:'10%',margin: '10px 10px 10px 10px',float:'right'}} size=\"sm\" variant=\"danger\" >Delete</ Button>\n                            <Button style={{width:'10%',margin: '10px 10px 10px 10px',float:'right'}}href={href1} size=\"sm\" variant=\"primary\" >Edit</ Button>\n                            \n            \n                             <br />\n                            <Form.Label inline><input type=\"radio\" name={answer} value={choice} disabled /> {choice} </Form.Label>\n                            </div>\n                    )\n                }\n                else {\n                    choicesNumber -= 1;\n                    return (\n                        <div >\n                            <Form.Label inline><input type=\"radio\" name={answer} value={choice} disabled /> {choice} </Form.Label>\n                        </div>\n                    )\n                }\n\n\n            });\n\n        }\n\n        return(\n            <div>\n            { MCQHead }\n            { r }\n            </div>\n        )\n    }\n}\nexport default ViewEditMCQ;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Exam.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup'\n\nclass ViewEditEssay extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {value: '', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[]};\n        this.GetEssay()\n        \n          \n    }\n\n    GetEssay()\n    {\n        var examname=this.props.passedname\n        fetch('/GetEssay/'+examname+'/'+1)\n          .then(response => response.json())\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \n            ILOList:data.ILOList, GradeList:data.GradeList}));\n    }\n\n    render(){\n        var ExamEssay=this.state.QuestionList;\n        \n        var EssayHead=\"\";\n        var Essay=\"\";\n        if(ExamEssay.length!=0){\n            EssayHead = <div><Form.Label  ><b>Essay Questions:</b></Form.Label> <br /></div>;\n            Essay= ExamEssay.map((Question,index)=>{\n                var question = ExamEssay[index]\n                var exam = this.props.passedname\n                //const href1 = `/#/instructor-edit-essay?${new URLSearchParams({ exam }).toString()}?${new URLSearchParams({ question }).toString()}`;\n                const href1 = `/#/instructor-edit-essay?${new URLSearchParams({ exam, question }).toString()}`;\n            return(\n                 <div>\n                    <Form.Label  >Question {index+1}: {ExamEssay[index]}  </Form.Label>\n                    <Button style={{width:'10%',margin: '10px 10px 10px 10px',float:'right'}} size=\"sm\" variant=\"danger\" >Delete</ Button>\n                    <Button style={{width:'10%',margin: '10px 10px 10px 10px',float:'right'}} href={href1} size=\"sm\" variant=\"primary\" >Edit</ Button>\n                            \n                     <br />\n                    <Form.Label><textarea placeholder=\"Answer..\" disabled style={{width:\"600px\"}}></textarea></Form.Label>\n                </div>\n                )\n            }\n            );\n        }\n\n        return (\n            <div>\n                {EssayHead}\n                {Essay}\n            </div>\n        )\n    }\n}\n\nexport default ViewEditEssay;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Exam.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup'\n\nclass ViewEditTF extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {value: '', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[]};\n        this.GetTF()\n          \n    }\n\n    GetTF()\n    {\n        var examname=this.props.passedname\n        fetch('/GetTF/'+examname+'/'+1)\n          .then(response => response.json())\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \n            ILOList:data.ILOList, GradeList:data.GradeList}));\n    }\n\n    render() {\n        var ExamTF = this.state.QuestionList;\n\n        var TFHead = \"\";\n        var TF = \"\";\n        if (ExamTF.length != 0) {\n            TFHead = <div><Form.Label  ><b>True or False:</b></Form.Label> <br /></div>;\n            TF = ExamTF.map((Question, index) => {\n                var question = ExamTF[index]\n                var exam = this.props.passedname\n                const href1 = `/#/instructor-edit-tf?${new URLSearchParams({ exam, question }).toString()}`;\n                return (\n                    <div>\n                        <Form.Label  >Question {index + 1}: {ExamTF[index]}  </Form.Label>\n                        <Button style={{width:'10%',margin: '10px 10px 10px 10px',float:'right'}} size=\"sm\" variant=\"danger\" >Delete</ Button>\n                        <Button style={{width:'10%',margin: '10px 10px 10px 10px',float:'right'}} href={href1} size=\"sm\" variant=\"primary\" >Edit</ Button>\n                            \n                        <Form.Label style={{float:\"right\", paddingRight:\"6px\"}}><input type=\"radio\" name={index} value=\"False\" disabled/>F </Form.Label> \n                        <Form.Label style={{ float: \"right\" ,paddingRight:\"6px\"  }}><input type=\"radio\" name={index} value=\"True\" disabled />T </Form.Label>\n\n                    </div>\n                )\n            }\n            );\n        }\n\n        return (\n            <div>\n                {TFHead}\n                {TF}\n            </div>\n        )\n    }\n}\n\nexport default ViewEditTF;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Exam.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup'\n\nclass ViewEditComplete extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {value: '', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[]};\n        this.GetComplete()\n        \n          \n    }\n\n    GetComplete()\n    {\n        var examname=this.props.passedname\n        fetch('/GetComplete/'+examname+'/'+1)\n          .then(response => response.json())\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \n            ILOList:data.ILOList, GradeList:data.GradeList}));\n    }\n\n\n\n    render() {\n        var ExamComplete = this.state.QuestionList;\n\n        var CompleteHead = \"\";\n        var Complete = \"\";\n        var i=0\n        if (ExamComplete.length != 0) {\n            CompleteHead = <div><Form.Label  ><b>Complete:</b></Form.Label> <br /></div>;\n            Complete = ExamComplete.map((Question, index) => {\n                if (index%2==0)\n                {\n                    i+=1;\n                    var question = ExamComplete[index]\n                    var exam = this.props.passedname\n                    const href1 = `/#/instructor-edit-complete?${new URLSearchParams({ exam, question }).toString()}`;\n                    return (\n                        <div>\n                            <Form.Label  >Question {i}: </Form.Label> \n                            <Button style={{width:'10%',margin: '10px 10px 10px 10px',float:'right'}} size=\"sm\" variant=\"danger\" >Delete</ Button>\n                            <Button style={{width:'10%',margin: '10px 10px 10px 10px',float:'right'}} href={href1} size=\"sm\" variant=\"primary\" >Edit</ Button>\n                            \n                            <br/>\n                            <Form.Label>  {ExamComplete[index]}   </Form.Label>\n                            <input type=\"text\" placeholder=\"Complete..\" disabled style={{margin:\"6px\"}}/>\n                            <Form.Label> {ExamComplete[index+1]} </Form.Label>\n                        </div>\n                    )\n                }\n            }\n            );\n        }\n\n        return (\n            <div>\n                {CompleteHead}\n                {Complete}\n            </div>\n        )\n    }\n}\n\nexport default ViewEditComplete;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Exam.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport ViewEditMCQ from './ViewEditMCQ.js';\nimport ViewEditEssay from './ViewEditEssay.js';\nimport ViewEditTF from './ViewEditTF.js';\nimport ViewEditComplete from './ViewEditComplete.js';\n\n\n\nclass ViewEditExam extends Component {\n\n    constructor(props) {\n        super(props);\n        \n          \n    }\n\n    render() {\n\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n        const name = params.get('name');\n\n        return (\n            <div>\n    \n        <Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\n            <br />\n        <Form>\n            <ViewEditMCQ passedname={name}/>\n            <ViewEditTF passedname={name}/>\n            <ViewEditComplete passedname={name}/>\n            <ViewEditEssay passedname={name}/>\n        </Form>\n        </Container>\n            </div>\n            );\n    }\n}\n\nexport default ViewEditExam;\n","import React, { Component } from 'react';\r\nimport { HashRouter as Router, Route, Link, NavLink } from 'react-router-dom';\r\nimport SignUpForm from './Pages/SignUpForm';\r\nimport SignInForm from './Pages/SignInForm';\r\nimport Homepage from './Pages/Homepage';\r\nimport InstructorHome from './Pages/InstructorHome';\r\nimport CreateExam from './Pages/CreateExam';\r\nimport FromExisting from './Pages/FromExisting';\r\nimport ViewExams from './Pages/ViewExams';\r\nimport ViewEdit from './Pages/ViewEdit';\r\nimport ViewGrade from './Pages/ViewGrade';\r\nimport EditMCQ from './Pages/EditMCQ';\r\nimport EditTF from './Pages/EditTF';\r\nimport EditComplete from './Pages/EditComplete';\r\nimport EditEssay from './Pages/EditEssay';\r\n\r\nimport StudentHome from './Pages/StudentHome';\r\nimport StudentAsk from './Pages/StudentAsk';\r\nimport StudentExams from './Pages/StudentExams';\r\nimport Exam from './Pages/Exam';\r\nimport ViewEditExam from './Pages/ViewEditExam';\r\n\r\nimport './App.css';\r\nimport { Container } from '@material-ui/core';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      \r\n      <Router basename=\"/esae-frontend/\">\r\n       <Container fixed>\r\n          <Navbar fixed=\"top\" bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand href=\"#home\">E.S.A.E</Navbar.Brand>\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link href=\"#home\">Home</Nav.Link>\r\n\r\n        </Nav>\r\n        <Form inline>\r\n          <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n          <Button variant=\"outline-info\">Search</Button>\r\n        </Form>\r\n      </Navbar>\r\n       </Container>\r\n              <Route exact path=\"/home\" component={Homepage}>\r\n              </Route>\r\n              <Route exact path=\"/\" component={Homepage}>\r\n              </Route>\r\n              <Route path=\"/sign-up\" component={SignUpForm}>\r\n              </Route>\r\n              <Route path=\"/sign-in\" component={SignInForm}>\r\n              </Route>\r\n              <Route path=\"/instructor-home\" component={InstructorHome}>\r\n              </Route>\r\n              <Route path=\"/instructor-create\" component={CreateExam}>\r\n              </Route>\r\n\t\t\t        <Route path=\"/instructor-from-exist\" component={FromExisting}>\r\n              </Route>\r\n              <Route path=\"/instructor-view-all\" component={ViewExams}>\r\n              </Route>\r\n\t\t\t        <Route path=\"/instructor-view-edit\" component={ViewEdit}>\r\n              </Route>\r\n              <Route path=\"/instructor-view-grade\" component={ ViewGrade}>\r\n              </Route>\r\n              <Route path=\"/instructor-view-edit-exam\" component={ViewEditExam}>\r\n              </Route>\r\n              <Route path=\"/instructor-exam\" component={Exam}>\r\n              </Route>\r\n\t\t\t        <Route path=\"/instructor-edit-mcq\" component={EditMCQ}>\r\n              </Route>\r\n              <Route path=\"/instructor-edit-tf\" component={EditTF}>\r\n              </Route>\r\n              <Route path=\"/instructor-edit-complete\" component={EditComplete}>\r\n              </Route>\r\n              <Route path=\"/instructor-edit-essay\" component={EditEssay}>\r\n              </Route>\r\n\t\t\t  \r\n              <Route path=\"/student-home\" component={StudentHome}>\r\n              </Route>\r\n              <Route path=\"/student-ask\" component={StudentAsk}>\r\n              </Route>\r\n              <Route path=\"/student-view-all\" component={StudentExams}>\r\n              </Route>\r\n    \r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"media/student.d3b74d64.png\";","module.exports = __webpack_public_path__ + \"media/instructor.9bef3f3f.png\";"],"sourceRoot":""}