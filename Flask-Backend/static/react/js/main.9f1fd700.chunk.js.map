{"version":3,"sources":["Pages/instructor.png","Pages/SignUpForm.js","Pages/SignInForm.js","Pages/Homepage.js","Pages/InstructorHome.js","Pages/CreateExam.js","Pages/FromExisting.js","Pages/ViewExams.js","Pages/ViewEdit.js","Pages/ViewGrade.js","Pages/EditMCQ.js","Pages/EditTF.js","Pages/EditComplete.js","Pages/EditEssay.js","Pages/TakeMCQ.js","Pages/TakeEssay.js","Pages/TakeTF.js","Pages/TakeComplete.js","Pages/TakeExam.js","Pages/StudentHome.js","Pages/StudentAsk.js","Pages/StudentExams.js","Pages/ExamMCQ.js","Pages/ExamEssay.js","Pages/ExamTF.js","Pages/ExamComplete.js","Pages/Exam.js","Pages/ViewEditMCQ.js","Pages/ViewEditEssay.js","Pages/ViewEditTF.js","Pages/ViewEditComplete.js","Pages/ViewEditExam.js","App.js","serviceWorker.js","index.js","Pages/student.png"],"names":["module","exports","SignUpForm","instructor_in","URLSearchParams","instructor","toString","student_in","student","params","window","location","hash","split","name","get","href1","className","action","method","type","id","placeholder","defaultValue","href","Component","SignInForm","instructor_up","student_up","Homepage","Container","Row","style","justifyContent","Col","flexGrow","Card","bg","width","Img","variant","src","require","Body","textAlign","Title","Text","Button","size","InstructorHome","document","getElementById","display","onClick","this","handleCreate","CreateExam","props","state","value","answer","MCQreturn","Completereturn","TFreturn","Essayreturn","finished","ExamTitleBOX","ExamMCQCounter","ExamMCQQuestions","ExamMCQChoices","ExamComplete","ExamTF","ExamEssay","handleChange","bind","handleSubmit","event","setState","target","ExamTitle","InstructorID","Question","Answers","CorrectAns","Grade","ILO","handleFinishQuestion","fetch","then","response","json","data","MCQReturn","Question1","Question2","Answer","CompleteReturn","TFReturn","EssayReturn","ChoiceCounter","x","createElement","setAttribute","innerHTML","appendChild","y","innerText","z","removeChild","push","i","textContent","reset","$","empty","alert","FinishQuestionAlert","Alert","key","hideAlert","float","handleFinishExam","class","Modal","Dialog","Header","Footer","Form","Group","controlId","Control","handleConfirm","height","backgroundColor","overflow","Label","as","margin","onChange","hidden","handleAddChoice","handleDeleteChoice","SubmitMCQ","SubmitComplete","SubmitTrueFalse","SubmitEssay","FromExisting","Mixreturn","QuestionList","CounterList","AnswerList","CorrectAnswerList","ILOList","GradeList","GetILO","ILO_List","QuestionType","Number","MixQues","closeButton","handleTopic","map","fbb","handleType","required","MixQuestion","ViewExams","Exams","ans","names","nameslist","ListGroup","Item","ViewEdit","Deleted","reload","disabled","DeleteExam","ViewGrade","Grades","GetExams","GradeExam","EditMCQ","CorrectAnswer","IsUpdated","OldQuestion","Autofill","exam","question","NewQuestion","NewAnswers","NewCorrectAns","NewILO","NewGrade","Updated","GetMCQInfo","UpdateMCQ","EditTF","GetTFInfo","UpdateTrueFalse","EditComplete","OldQuestion1","OldQuestion2","NewQuestion1","NewQuestion2","GetCompleteInfo","UpdateComplete","EditEssay","GetEssayInfo","UpdateEssay","TakeMCQ","GetMCQ","MCQQuestions","MCQAnswers","examname","passedname","ansGroup","length","val","r","MCQHead","choicesNumber","choice","index","TakeEssay","GetEssay","EssayQuestions","EssayAnswers","EssayCount","EssayHead","Essay","answerid","TakeTF","GetTF","TFQuestions","TFAnswers","TFHead","TF","paddingRight","TakeComplete","GetComplete","CompleteQuestions","CompleteAnswers","CompleteCount","CompleteHead","Complete","TakeExam","Submit","StudentID","MCQList","CompleteList","TFList","EssayList","successful","handleSubmitAnswers","SubmitStudentExam","StudentHome","StudentAsk","StudentExams","ExamMCQ","inline","Exam","ViewEditMCQ","MCQCounter","MCQChoices","DeleteMCQ","ViewEditEssay","DeleteEssay","ViewEditTF","DeleteTF","ViewEditComplete","DeleteComplete","ViewEditExam","App","basename","fixed","Navbar","Brand","Nav","Link","FormControl","exact","path","component","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"js/main.9f1fd700.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"media/instructor.9bef3f3f.png\";","import React, { Component } from 'react';\r\nimport { HashRouter as Router, Route, Link, NavLink } from 'react-router-dom';\r\nclass SignUpForm extends Component {\r\n\r\n    render() {\r\n      const instructor=\"instructor\";\r\n      const student=\"student\";\r\n      const instructor_in = `/#/sign-in?${new URLSearchParams({instructor}).toString()}`;\r\n      const student_in = `/#/sign-in?${new URLSearchParams({student}).toString()}`;\r\n      const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n      var name = \"\";\r\n      if(params.get('student'))\r\n      {\r\n        name=params.get('student')\r\n        \r\n      }\r\n      else if (params.get('instructor'))\r\n      {\r\n        name=params.get('instructor')\r\n        \r\n      }\r\n      var href1=\"\";\r\n      if (name==\"student\")\r\n      {\r\n        href1=student_in;\r\n      }\r\n      else if (name==\"instructor\")\r\n      {\r\n        href1=instructor_in\r\n      }\r\n      else\r\n      {\r\n        href1=\"#/sign-in\";\r\n      }\r\n        return (\r\n          <form className=\"signin-forum-container\" action method=\"post\">\r\n          <h1>Sign Up</h1><br />\r\n          <input type=\"text\" name=\"username\" id=\"username\" placeholder=\"Name\" /><br />\r\n          <input type=\"text\" name=\"email\" id=\"email\" placeholder=\"Email\" /><br />\r\n          <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" /><br />\r\n          \r\n          <input type=\"submit\" defaultValue=\"Sign Up\" /><br />\r\n          <a href={href1}>Already a member? Sign in now!</a>\r\n        </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignUpForm;\r\n","import React, { Component } from 'react';\r\nimport { HashRouter as Router, Route, Link, NavLink } from 'react-router-dom';\r\nimport './signin.css';\r\n\r\nclass SignInForm extends Component {\r\n    render() {\r\n      const instructor=\"instructor\";\r\n      const student=\"student\";\r\n      const instructor_up = `/#/sign-up?${new URLSearchParams({instructor}).toString()}`;\r\n      const student_up = `/#/sign-up?${new URLSearchParams({student}).toString()}`;\r\n      const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n      var name = \"\";\r\n      if(params.get('student'))\r\n      {\r\n        name=params.get('student')\r\n        \r\n      }\r\n      else if (params.get('instructor'))\r\n      {\r\n        name=params.get('instructor')\r\n        \r\n      }\r\n      var href1=\"\";\r\n      if (name==\"student\")\r\n      {\r\n        href1=student_up;\r\n      }\r\n      else if (name==\"instructor\")\r\n      {\r\n        href1=instructor_up\r\n      }\r\n      else\r\n      {\r\n        href1=\"#/sign-up\";\r\n      }\r\n        return (\r\n          <form className=\"signin-forum-container\" action method=\"post\">\r\n          <h1>Sign In</h1><br />\r\n          <input type=\"text\" name=\"email\" id=\"email\" placeholder=\"Email\" /><br />\r\n          <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" /><br />\r\n          <a href=\"#\">Forgot Your Password?</a><br />\r\n          <input type=\"submit\" defaultValue=\"Sign In\" /><br />\r\n          <a href={href1}>Not a member? Sign up now!</a>\r\n        </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignInForm;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './homestyle.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nclass Homepage extends Component {\r\n  \r\n    render() {\r\n        const instructor=\"instructor\";\r\n        const student=\"student\";\r\n        const instructor_up = `/#/sign-up?${new URLSearchParams({instructor}).toString()}`;\r\n        const student_up = `/#/sign-up?${new URLSearchParams({student}).toString()}`;\r\n        const instructor_in = `/#/sign-in?${new URLSearchParams({instructor}).toString()}`;\r\n        const student_in = `/#/sign-in?${new URLSearchParams({student}).toString()}`;\r\n        return (\r\n        <div>\r\n <h1>Welcome to Exam Solver and Evaluator</h1>\r\n           <br />\r\n           <Container>\r\n            <Row style={{ justifyContent:'space-evenly'}}>\r\n                <Col style={{flexGrow:'unset'}}  >\r\n                <Card bg=\"light\" style={{ width: '13rem' }}>\r\n            <Card.Img variant=\"top\" src={require('./student.png')} />\r\n            <Card.Body style={{ textAlign:'center'}}>\r\n                <Card.Title>I'm a Student</Card.Title>\r\n                <Card.Text>\r\n                Now you can Get Question's Answers and Take Exams with One Click\r\n                </Card.Text>\r\n                \r\n                <Button href={student_up} size=\"lg\" variant=\"success\">Join Now!</Button>\r\n                <Button href={student_in} size=\"lg\" variant=\"primary\">Sign in!</Button>\r\n            </Card.Body>\r\n            </Card></Col>\r\n                <Col style={{flexGrow:'unset'}} ><Card bg=\"light\" style={{ width: '13rem' }}>\r\n            <Card.Img variant=\"top\" src={require('./instructor.png')} />\r\n            <Card.Body style={{ textAlign:'center'}}>\r\n                <Card.Title>I'm an Instructor</Card.Title>\r\n                <Card.Text>\r\n                Now you Form your Exam and Evaluate it with One Click\r\n                </Card.Text>\r\n                <Button href={instructor_up} size=\"lg\" variant=\"danger\">Join Now!</Button>\r\n                <Button href={instructor_in} size=\"lg\" variant=\"primary\">Sign in!</Button>\r\n            </Card.Body>\r\n            </Card></Col>\r\n            </Row>\r\n\r\n        </Container>\r\n        \r\n        \r\n\r\n            \r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Homepage;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './InstructorHome.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nclass InstructorHome extends Component {\r\nhandleCreate()\r\n{\r\n    if (document.getElementById('BtnNew').style.display=='block'||document.getElementById('BtnExist').style.display=='block')\r\n    {\r\n        document.getElementById('BtnNew').style.display='none';\r\n        document.getElementById('BtnExist').style.display='none';\r\n    }\r\n    else\r\n    {\r\n        document.getElementById('BtnNew').style.display='block';\r\n        document.getElementById('BtnExist').style.display='block';\r\n    }\r\n}\r\n    render() {\r\n        return (\r\n        <div>\r\n          \r\n          <h1>Welcome Dr. Magda Fayek</h1>\r\n    <br />\r\n    <Container>\r\n     <Row style={{ justifyContent:'space-evenly'}}>\r\n         <Col ><Button onClick={this.handleCreate} size=\"lg\"variant=\"primary\">Create Exam</Button></Col>\r\n        <Col  ><Button href=\"#/instructor-view-all\" size=\"lg\" variant=\"primary\">View Exams</Button></Col>\r\n         <Col  ><Button href=\"#/instructor-view-edit\" size=\"lg\"variant=\"primary\">Edit Exam</Button></Col>\r\n         <Col  ><Button href=\"#/instructor-view-grade\" size=\"lg\"variant=\"primary\">Grade Exam</Button></Col>\r\n     </Row>\r\n     <Row style={{width:'17%'}}>\r\n        \r\n         <Col ><Button id=\"BtnNew\"style={{display:'none'}} href=\"#/instructor-create\" size=\"sm\"variant=\"primary\">New Exam</Button></Col>\r\n       \r\n     </Row>\r\n     <Row style={{width:'17%'}}>\r\n        \r\n        <Col ><Button id=\"BtnExist\" style={{display:'none'}} href=\"#/instructor-from-exist\" size=\"sm\"variant=\"primary\">From Existing Exams</Button></Col>\r\n    </Row>\r\n\r\n\r\n </Container>\r\n            \r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InstructorHome;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\nimport './CreateExam.css';\r\nimport './Popup.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport $ from 'jquery'; \r\nimport Alert from 'react-bootstrap/Alert'\r\nimport Overlay from 'react-bootstrap/Overlay'\r\nimport Popover from 'react-bootstrap/Popover'\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\n\r\nclass CreateExam extends Component {\r\n  \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '',answer:null, MCQreturn:null,Completereturn:null, TFreturn:null, Essayreturn:null,finished:false};\r\n        window.ExamTitleBOX=[];\r\n        window.ExamMCQCounter=[];\r\n        window.ExamMCQQuestions=[];\r\n        window.ExamMCQChoices=[];\r\n        window.ExamComplete=[];\r\n        window.ExamTF=[];\r\n        window.ExamEssay=[];\r\n   \r\n        \r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n  \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n      }\r\n      handleChange (event) {\r\n        this.setState({value: event.target.value});\r\n      }\r\n      SubmitMCQ(ExamTitle,InstructorID,Question,Answers,CorrectAns,Grade,ILO)\r\n      {\r\n        this.handleFinishQuestion()\r\n        // console.log(\"Question\",question)\r\n        fetch('/AddMCQ/'+ExamTitle+'/'+InstructorID+'/'+Question+'/'+Answers+'/'+CorrectAns+'/'+Grade+'/'+ILO)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({MCQreturn : data.MCQReturn}));\r\n      }\r\n     \r\n      SubmitComplete(ExamTitle,InstructorID,Question1,Question2,Answer,Grade,ILO)\r\n      {\r\n        this.handleFinishQuestion()\r\n        // console.log(\"Question\",question)\r\n        fetch('/AddComplete/'+ExamTitle+'/'+InstructorID+'/'+Question1+'/'+Question2+'/'+Answer+'/'+Grade+'/'+ILO)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({Completereturn : data.CompleteReturn}));\r\n      }\r\n\r\n      SubmitTrueFalse(ExamTitle, InstructorID, Question,Answer,Grade,ILO)\r\n      {\r\n        this.handleFinishQuestion()\r\n        // console.log(\"Question\",question)\r\n        fetch('/AddTrueFalse/'+ExamTitle+'/'+InstructorID+'/'+Question+'/'+Answer+'/'+Grade+'/'+ILO)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({TFreturn : data.TFReturn}));\r\n      }\r\n\r\n      SubmitEssay(ExamTitle, InstructorID, Question,Answer,Grade,ILO)\r\n      {\r\n        this.handleFinishQuestion()\r\n        // console.log(\"Question\",question)\r\n        fetch('/AddEssay/'+ExamTitle+'/'+InstructorID+'/'+Question+'/'+Answer+'/'+Grade+'/'+ILO)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({Essayreturn : data.EssayReturn}));\r\n      }\r\n\r\n      handleSubmit(event)\r\n      {\r\n        this.setState({finished: false});\r\n        if (this.state.value=='MCQ')\r\n        {\r\n            document.getElementById('formExamMCQ').style.display='block';\r\n            document.getElementById('formExamComplete').style.display='none';\r\n            document.getElementById('formExamTF').style.display='none';\r\n            document.getElementById('formExamEssay').style.display='none';\r\n           \r\n            window.ChoiceCounter=0;\r\n            \r\n        }\r\n      else  if (this.state.value=='Complete')\r\n        {\r\n            document.getElementById('formExamComplete').style.display='block';\r\n            document.getElementById('formExamMCQ').style.display='none';\r\n            document.getElementById('formExamTF').style.display='none';\r\n            document.getElementById('formExamEssay').style.display='none';\r\n         \r\n        }\r\n       else if (this.state.value=='T and F')\r\n        {\r\n          document.getElementById('formExamTF').style.display='block';\r\n            document.getElementById('formExamComplete').style.display='none';\r\n            document.getElementById('formExamMCQ').style.display='none';\r\n            document.getElementById('formExamEssay').style.display='none';\r\n           \r\n        }\r\n       else if (this.state.value=='Essay Question')\r\n        {\r\n          document.getElementById('formExamEssay').style.display='block';\r\n          document.getElementById('formExamTF').style.display='none';\r\n            document.getElementById('formExamComplete').style.display='none';\r\n            document.getElementById('formExamMCQ').style.display='none';\r\n          \r\n        }\r\n        else\r\n        {\r\n          document.getElementById('formExamMCQ').style.display='none';\r\n          document.getElementById('formExamComplete').style.display='none';\r\n          document.getElementById('formExamTF').style.display='none';\r\n          document.getElementById('formExamEssay').style.display='none';\r\n        \r\n        }\r\n           \r\n      }\r\n      handleAddChoice()\r\n      { \r\n        \r\n        var x = document.createElement(\"div\");\r\n        x.setAttribute(\"class\", \"form-check form-check-inline\");\r\n        x.setAttribute(\"id\",\"choice\"+window.ChoiceCounter);\r\n        x.innerHTML='<input type=\"radio\" disabled class=\"form-check-input\">'+\r\n        '<label title for=\"formExamMCQ\" id= \"'+\"choice\"+window.ChoiceCounter+'\" class=\"form-check-label\">'+ document.getElementById('formChoiceTextbox').value+'</label>';\r\n        document.getElementById('ChoicesDiv').appendChild(x);\r\n        \r\n        var y=document.createElement(\"option\");\r\n        y.innerText=document.getElementById('formChoiceTextbox').value;\r\n        y.setAttribute(\"id\",\"option\"+window.ChoiceCounter);\r\n        document.getElementById('ChoiceModelAns').appendChild(y);\r\n        document.getElementById('formChoiceTextbox').value='';\r\n        window.ChoiceCounter++;\r\n      }\r\n      handleDeleteChoice()\r\n      {\r\n        window.ChoiceCounter--;\r\n        var y=document.getElementById('choice'+window.ChoiceCounter);\r\n        var z=document.getElementById('option'+window.ChoiceCounter);\r\n        document.getElementById('ChoicesDiv').removeChild(y);\r\n        document.getElementById('ChoiceModelAns').removeChild(z);\r\n      }\r\n\r\n      handleFinishQuestion()\r\n      {\r\n        if (document.getElementById('QuestionType').value=='MCQ')\r\n        {\r\n          window.ExamMCQQuestions.push(document.getElementById('TextMCQuestion').value);\r\n          window.ExamMCQCounter.push(window.ChoiceCounter);\r\n          for(var i=0;i<window.ChoiceCounter;i++)\r\n          {\r\n            \r\n            window.ExamMCQChoices.push(document.getElementById('choice'+i).textContent)\r\n          }\r\n\r\n\r\n        }\r\n        if (document.getElementById('QuestionType').value=='Complete')\r\n        {\r\n          \r\n\r\n          window.ExamComplete.push(document.getElementById('TextComplete1').value)\r\n          window.ExamComplete.push(document.getElementById('TextComplete2').value)\r\n      \r\n        }\r\n        if (document.getElementById('QuestionType').value=='T and F')\r\n        {\r\n          window.ExamTF.push(document.getElementById('TextTF').value)\r\n        }\r\n        if (document.getElementById('QuestionType').value=='Essay Question')\r\n        {\r\n          window.ExamEssay.push(document.getElementById('TextEssay').value)\r\n        }\r\n        document.getElementById(\"ExamForm\").reset();\r\n        $(\"#ChoiceModelAns\").empty();\r\n        $(\"#ChoicesDiv\").empty();\r\n        var y=document.createElement(\"option\");\r\n        y.innerText=\"Choose Model Answer\"\r\n        document.getElementById('ChoiceModelAns').appendChild(y);\r\n        document.getElementById('formExamMCQ').style.display='none';\r\n          document.getElementById('formExamComplete').style.display='none';\r\n          document.getElementById('formExamTF').style.display='none';\r\n          document.getElementById('formExamEssay').style.display='none';\r\n    \r\n          this.setState({finished: true});\r\n         \r\n      }\r\n     \r\n      handleFinishExam()\r\n      {\r\n        \r\n        window.ExamTitle.push(document.getElementById('TextExamTitle').value);\r\n        document.getElementById('ExamFinishBox').style.display='block';\r\n        \r\n      }\r\n      handleConfirm()\r\n      {\r\n          \r\n          if (document.getElementById('TextExamTitle').value==\"\")\r\n          {\r\n              alert(\"You Must Enter an Exam Title First !\")\r\n          }\r\n          else\r\n          {\r\n              window.ExamTitleBOX=document.getElementById('TextExamTitle').value\r\n              document.getElementById('ExamtitleBox').style.display='none';\r\n          }\r\n          \r\n      }\r\n      hideAlert(){\r\n        document.getElementById(\"FinishQuestionAlert\").style.display=\"none\";\r\n      }\r\n    render() {\r\n      var FinishQuestionAlert = \"\";\r\n      if (this.state.finished==true)\r\n      {\r\n        FinishQuestionAlert = <div id=\"FinishQuestionAlert\"> <Alert  key=\"FinishQuestionAlert\" variant='success'>Successfully Added Question to Exam<div className=\"d-flex justify-content-end\">\r\n        <Button onClick={this.hideAlert} variant=\"outline-success\">\r\n          Close \r\n        </Button>\r\n        </div></Alert>\r\n        <Button style={{ float:'right'}}onClick={this.handleFinishExam}   variant=\"success\" >Finish Exam</Button>\r\n        </div>;\r\n        \r\n      }\r\n      else\r\n      {\r\n        FinishQuestionAlert =\"\";\r\n      }\r\n        return (\r\n        <div>\r\n          <div style={{display:'none'}} class=\"modal-custom\" id=\"ExamFinishBox\">\r\n          <Modal.Dialog  >\r\n              <Modal.Header >\r\n              <Modal.Title>Exam Alert</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                Exam \"{window.ExamTitleBOX}\" Created Successfully\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"primary\" onClick={event =>  window.location.href='#/instructor-home'} >Ok</Button>\r\n            </Modal.Footer>\r\n          </Modal.Dialog>\r\n          </div>\r\n          <div class=\"modal-custom\" id=\"ExamtitleBox\">\r\n          <Modal.Dialog  >\r\n              <Modal.Header >\r\n              <Modal.Title>Exam title</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <Form.Group controlId=\"formExamTitle\">\r\n                <Form.Control type=\"text\" id='TextExamTitle' placeholder=\"Enter Exam Title\" />\r\n                <Form.Text className=\"text-muted\">\r\n                Ex: Marketing Midterm Spring 2020\r\n                </Form.Text>\r\n                </Form.Group>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"primary\" onClick={this.handleConfirm} >Confirm</Button>\r\n            </Modal.Footer>\r\n          </Modal.Dialog>\r\n          </div>\r\n              \r\n    <Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\r\n        <br />\r\n    <Form id=\"ExamForm\" style={{backgroundColor:'white'}}>\r\n  <Form.Group controlId=\"formQuestionType\">\r\n    <Form.Label>Question Type</Form.Label>\r\n    <Row>\r\n    <Form.Control id=\"QuestionType\" as=\"select\" style={{width:'35%',margin: '15px 15px 15px 15px'}} value={this.state.value} onChange={this.handleChange} placeholder=\"Choose Question Type\">\r\n    <option>Choose Question Type</option>\r\n    <option>MCQ</option>\r\n    <option>Complete</option>\r\n    <option>T and F</option>\r\n    <option>Essay Question</option>\r\n    <option hidden>Comparison</option>\r\n    </Form.Control>\r\n    <Button variant=\"primary\" id=\"QuestionTypeBtn\" onClick={this.handleSubmit} type=\"submit\">Submit</Button>\r\n   \r\n\r\n    </Row>\r\n    <Form.Text className=\"text-muted\">\r\n      Note: You can change Question Type at anytime from above\r\n    </Form.Text>\r\n\r\n    {FinishQuestionAlert}\r\n\r\n  </Form.Group>\r\n  \r\n  <Form.Group  style={{display:'none'}} id=\"formExamMCQ\" controlId=\"formExamMCQ\">\r\n \r\n    <Form.Label>Multiple Choice Question</Form.Label>\r\n    <Row>\r\n    <Form.Control id=\"MCQILO\"  size=\"sm\" type=\"text\" style={{width:'50%',margin: '15px 15px 15px 15px'}} placeholder=\"Enter Question ILO\"></Form.Control>\r\n  <Form.Control   id=\"MCQGrade\" size=\"sm\" style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\" placeholder=\"Enter Your Grade\" />\r\n   \r\n   </Row>\r\n    <Form.Control size=\"sm\" id=\"TextMCQuestion\" type=\"text\" placeholder=\"Enter Your Question\" />\r\n    <br />\r\n    <Form.Control  size=\"sm\" id=\"formChoiceTextbox\" type=\"text\" placeholder=\"Enter a Choice\" />\r\n    <Button  size=\"sm\" variant=\"primary\" onClick={this.handleAddChoice}>Add Choice</Button>\r\n    <Button id=\"btnDeleteChoice\"  size=\"sm\" variant=\"danger\" onClick={this.handleDeleteChoice}>Delete Choice</Button>\r\n    <div id=\"ChoicesDiv\"></div>\r\n    <Form.Control size=\"sm\" as=\"select\" id=\"ChoiceModelAns\" placeholder=\"Choose Model Answer\">\r\n    <option>Choose Model Answer</option>\r\n    </Form.Control>\r\n    <Button style={{ float:'right'}} variant=\"success\" onClick={()=>{this.SubmitMCQ(window.ExamTitleBOX,'1', document.getElementById('TextMCQuestion').value, window.ExamMCQChoices, \r\n      document.getElementById('ChoiceModelAns').value, document.getElementById('MCQGrade').value,document.getElementById('MCQILO').value)\r\n      }}>Finish Question</Button>\r\n  </Form.Group>\r\n\r\n\r\n  <Form.Group style={{display:'none'}} id=\"formExamComplete\" controlId=\"formExamComplete\">\r\n   \r\n    <Form.Label>Complete Question</Form.Label>\r\n    <Row>\r\n    <Form.Control id=\"CompILO\"  size=\"sm\" type=\"text\" style={{width:'50%',margin: '15px 15px 15px 15px'}} placeholder=\"Enter Question ILO\"></Form.Control>\r\n  <Form.Control id=\"CompGrade\" size=\"sm\" style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\" placeholder=\"Enter Your Grade\" />\r\n   \r\n   </Row>\r\n    <Form.Control size=\"sm\" id=\"TextComplete1\" type=\"text\" placeholder=\"Enter Your 1st part of the Question *before the space*\" />\r\n    <Form.Control size=\"sm\"id=\"TextComplete2\" type=\"text\" placeholder=\"Enter Your 2nd part of the Question *after the space*\" />\r\n    <br />\r\n    <Form.Control size=\"sm\" id=\"AnswerComplete\" type=\"text\" placeholder=\"Enter Your Model Answer *the space*\" />\r\n    <Button style={{ float:'right'}}variant=\"success\"onClick={()=>{this.SubmitComplete(window.ExamTitleBOX,'1',document.getElementById('TextComplete1').value, document.getElementById('TextComplete2').value, \r\n      document.getElementById('AnswerComplete').value, document.getElementById('CompGrade').value, document.getElementById('CompILO').value)}} >Finish Question</Button>\r\n    \r\n  </Form.Group>\r\n\r\n\r\n  <Form.Group style={{display:'none'}} id=\"formExamTF\" controlId=\"formExamTF\">\r\n    <Form.Label>True and False Question</Form.Label>\r\n    <Row>\r\n    <Form.Control id=\"TFIlo\"  size=\"sm\" type=\"text\" style={{width:'50%',margin: '15px 15px 15px 15px'}} placeholder=\"Enter Question ILO\"></Form.Control>\r\n   <Form.Control id=\"TFGrade\" size=\"sm\" style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\" placeholder=\"Enter Your Grade\" />\r\n   \r\n   </Row>\r\n    <Form.Control size=\"sm\" id=\"TextTF\" type=\"text\" placeholder=\"Enter Your Question\" />\r\n      <br />\r\n      <Form.Control size=\"sm\" as=\"select\" id=\"TFModelAns\" placeholder=\"Choose Model Answer\">\r\n    <option>Choose Model Answer</option>\r\n    <option>True</option>\r\n    <option>False</option>\r\n    </Form.Control>\r\n    <Button style={{ float:'right'}} variant=\"success\" \r\n    onClick={ ()=>{this.SubmitTrueFalse(window.ExamTitleBOX,'1',document.getElementById('TextTF').value , \r\n    document.getElementById('TFModelAns').value, document.getElementById('TFGrade').value, document.getElementById('TFIlo').value)}}>Finish Question</Button>\r\n    \r\n  </Form.Group>\r\n\r\n\r\n  <Form.Group style={{display:'none'}} id=\"formExamEssay\" controlId=\"formExamEssay\">\r\n    <Form.Label>Essay Question</Form.Label>\r\n    <Row>\r\n    <Form.Control id=\"EssILO\" size=\"sm\" type=\"text\" style={{width:'50%',margin: '15px 15px 15px 15px'}} placeholder=\"Enter Question ILO\"></Form.Control>\r\n   <Form.Control id=\"EssGrade\" size=\"sm\" style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\" placeholder=\"Enter Your Grade\" />\r\n   \r\n   </Row>\r\n    <Form.Control size=\"sm\" id=\"TextEssay\" type=\"text\" placeholder=\"Enter Your Essay Question\" />\r\n   <br />\r\n    <Form.Control size=\"sm\" as=\"textarea\"id=\"AnswerEssay\" placeholder=\"Enter Your Model Answer\" />\r\n    <Button style={{ float:'right'}} variant=\"success\" \r\n    onClick={()=>{this.SubmitEssay(window.ExamTitleBOX,'1',document.getElementById('TextEssay').value , \r\n    document.getElementById('AnswerEssay').value, document.getElementById('EssGrade').value, document.getElementById('EssILO').value)}}\r\n    >Finish Question</Button>\r\n    \r\n  </Form.Group>\r\n</Form>\r\n\r\n </Container>\r\n            \r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateExam;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './CreateExam.css';\r\nimport './Popup.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nclass FromExisting extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {value: '',ILO:[], Mixreturn:[], QuestionList:[], CounterList:[], AnswerList:[],\r\n      CorrectAnswerList:[], ILOList:[], GradeList:[]};\r\n      this.GetILO();    \r\n      \r\n    }\r\n\r\n    GetILO()\r\n    {\r\n      fetch('/GetILO/'+1)\r\n        .then(response => response.json())\r\n        .then(data => this.setState({ILO : data.ILO_List}));\r\n    }\r\n    MixQuestion(ExamTitle, InstructorID, QuestionType, ILO, Number)\r\n    {\r\n      fetch('/MixQuestion/'+ExamTitle+'/'+InstructorID+'/'+QuestionType+'/'+ILO+'/'+Number)\r\n        .then(response => response.json())\r\n        .then(data => this.setState({Mixreturn : data.MixQues}));\r\n    }\r\n    handleConfirm()\r\n    {\r\n        \r\n        if (document.getElementById('TextExamTitle').value==\"\")\r\n        {\r\n            alert(\"You Must Enter an Exam Title First !\")\r\n        }\r\n        else\r\n        {\r\n            window.ExamTitleBOX=document.getElementById('TextExamTitle').value\r\n            document.getElementById('ExamtitleBox').style.display='none';\r\n        }\r\n        \r\n    }\r\n    handleTopic(){}\r\n    handleType(){}\r\n    handleAddtoExam(){}\r\n    handleFinishExam(){\r\n    \r\n    }\r\n  \r\n    render() {\r\n        return (\r\n        <div>\r\n          <div class=\"modal-custom\" id=\"ExamtitleBox\">\r\n          <Modal.Dialog  >\r\n              <Modal.Header closeButton>\r\n              <Modal.Title>Exam title</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <Form.Group controlId=\"formExamTitle\">\r\n                <Form.Control type=\"text\" id='TextExamTitle' placeholder=\"Enter Exam Title\" />\r\n                <Form.Text className=\"text-muted\">\r\n                Ex: Marketing Midterm Spring 2020\r\n                </Form.Text>\r\n                </Form.Group>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"primary\" onClick={this.handleConfirm} >Confirm</Button>\r\n            </Modal.Footer>\r\n          </Modal.Dialog>\r\n          </div>\r\n              \r\n    <Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\r\n        <br />\r\n    <Form style={{backgroundColor:'white'}}>\r\n    <Form.Label>Now you can Randomly Select Questions According to it's Topic and Type</Form.Label>\r\n  \r\n  <Form.Group controlId=\"formQuestionType\">\r\n    <Row>\r\n    <Form.Control as=\"select\" id=\"ILO\" style={{width:'50%',margin: '15px 15px 15px 15px'}} onChange={this.handleTopic} >\r\n    {this.state.ILO.map((fbb) => <option key={fbb.key} value={fbb.key} >{fbb}</option>)}\r\n    </Form.Control>\r\n\r\n\r\n    <Form.Control id=\"QuestionType\" as=\"select\" id=\"QuesType\" style={{width:'40%',margin: '15px 15px 15px 15px'}} onChange={this.handleType} placeholder=\"Choose Question Type\">\r\n    <option>Choose Question Type</option>\r\n    <option>MCQ</option>\r\n    <option>Complete</option>\r\n    <option>T and F</option>\r\n    <option>Essay</option>\r\n    <option hidden>Comparison</option>\r\n    </Form.Control>\r\n    </Row>\r\n    <Row>\r\n   \r\n    <Form.Control required id=\"Number\"  style={{width:'50%',margin: '15px 15px 15px 15px'}} type=\"number\" placeholder=\"Enter Number of Questions Needed\" />\r\n    <Button variant=\"primary\"style={{width:'40%',margin: '15px 15px 15px 15px'}} onClick={()=>{this.MixQuestion(window.ExamTitleBOX,\r\n    '1',document.getElementById('QuesType').value, document.getElementById('ILO').value, document.getElementById('Number').value)\r\n      }}\r\n       type=\"primary\">Add to Exam</Button>\r\n   </Row>\r\n\r\n   <Button style={{ float:'right'}} size=\"lg\" onClick={this.handleFinishExam}   variant=\"success\" >Finish Exam</Button>\r\n  </Form.Group>\r\n  \r\n</Form>\r\n\r\n </Container>\r\n            \r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FromExisting;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './ViewExams.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nclass ViewExams extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', Exams:null};\r\n        fetch('/ViewExams/'+1)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({Exams : data.ans}));\r\n          \r\n    }\r\n\r\n    render() {\r\n       //var names= window.ExamTitle;\r\n       var names = this.state.Exams\r\n       \r\n       //enta 3yz el list kolha wla esm w7ed bs\r\n       if (names==null)\r\n       {\r\n        var nameslist='No Exams Yet'\r\n       }\r\n       else\r\n       {\r\n        var nameslist= names.map(function(name){\r\n            const href = `/#/instructor-exam?${new URLSearchParams({ name }).toString()}`;\r\n            return <ListGroup.Item href={href} action>{name}</ListGroup.Item>;\r\n\r\n          })\r\n         \r\n       }\r\n    \r\n        \r\n       return (\r\n        <div>\r\n          \r\n          <h1>All Exams</h1>\r\n   \r\n    <Container style={{width:'660px',height:'550px',backgroundColor:'white', overflow:'scroll'}}>\r\n        <br />\r\n        <ListGroup style={{textAlign: 'center'}}  >{nameslist}</ListGroup>\r\n    </Container>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ViewExams;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './ViewExams.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nclass ViewEdit extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {value: '', Exams:null, Deleted:null};\r\n      fetch('/ViewExams/'+1)\r\n        .then(response => response.json())\r\n        .then(data => this.setState({Exams : data.ans}));\r\n        \r\n    }\r\n\r\n    DeleteExam(ExamTitle)\r\n    {\r\n      fetch('/DeleteExam/'+ExamTitle)\r\n        .then(response => response.json())\r\n        .then(data => this.setState({Deleted : data.Deleted}));\r\n      window.location.reload(false);\r\n    }\r\n\r\n    render() {\r\n       //var names=  window.ExamTitle;\r\n       var names = this.state.Exams\r\n       if (names==null)\r\n       {\r\n        var nameslist='No Exams Yet'\r\n       }\r\n       else\r\n       { \r\n   \r\n\r\n          var nameslist= names.map(function(name){\r\n            const href1 = `/#/instructor-view-edit-exam?${new URLSearchParams({ name }).toString()}`;\r\n            return (\r\n                \r\n                <Row style={{ justifyContent:'space-evenly'}}>\r\n                  <ListGroup style={{textAlign: 'center',width:'70%',margin: '10px 10px 10px 10px'}} >\r\n                    <ListGroup.Item href=\"/#/instructor-exam\"disabled>{name}</ListGroup.Item>\r\n                   </ ListGroup>\r\n                  \r\n                 <Button style={{width:'10%',margin: '10px 10px 10px 10px'}} href={href1} size=\"sm\" variant=\"primary\" >Edit</ Button>\r\n                 <Button style={{width:'10%',margin: '10px 10px 10px 10px'}} size=\"sm\" variant=\"danger\" \r\n                 onClick={()=>{this.DeleteExam(name)}} >Delete</ Button>\r\n                </Row>\r\n    \r\n              \r\n                   ) \r\n          })\r\n       }\r\n    \r\n        \r\n       return (\r\n        <div>\r\n          \r\n          <h1>All Exams</h1>\r\n   \r\n    <Container style={{width:'660px',height:'550px',backgroundColor:'white', overflow:'scroll'}}>\r\n        <br />\r\n        {nameslist}\r\n    </Container>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ViewEdit;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './ViewExams.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nclass ViewGrade extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {value: '', Exams:null, Grades:null};\r\n    this.GetExams()\r\n    \r\n      \r\n  }\r\n\r\n  GetExams()\r\n  {\r\n    fetch('/ViewExams/'+1)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({Exams : data.ans}));\r\n  }\r\n\r\n  GradeExam(ExamTitle)\r\n  {\r\n    fetch('/GradeExam/'+ExamTitle)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({Grades : data.Grades}));\r\n  }\r\n\r\n    render() {\r\n       var names= this.state.Exams\r\n       if (names==null)\r\n       {\r\n        var nameslist='No Exams Yet'\r\n       }\r\n       else\r\n       { \r\n   \r\n\r\n          var nameslist= names.map(function(name){\r\n            return (\r\n                \r\n                <Row style={{ justifyContent:'space-evenly'}}>\r\n                  <ListGroup style={{textAlign: 'center',width:'80%',margin: '10px 10px 10px 10px'}} >\r\n                    <ListGroup.Item href=\"/#/instructor-exam\"disabled>{name}</ListGroup.Item>\r\n                   </ ListGroup>\r\n                 <Button style={{width:'10%',margin: '10px 10px 10px 10px'}} size=\"sm\" variant=\"success\" \r\n                 onClick={()=>{this.GradeExam(name)}} >Grade</ Button>\r\n                \r\n                </Row>\r\n    \r\n              \r\n                   ) \r\n          })\r\n       }\r\n    \r\n        \r\n       return (\r\n        <div>\r\n          \r\n          <h1>All Exams</h1>\r\n   \r\n    <Container style={{width:'660px',height:'550px',backgroundColor:'white', overflow:'scroll'}}>\r\n        <br />\r\n        {nameslist}\r\n    </Container>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ViewGrade;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './CreateExam.css';\r\nimport './Popup.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\n\r\nclass EditMCQ extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {value: '', Question:null, AnswerList:null, CorrectAnswer:null, ILO:null,  Grade:null, IsUpdated:null,\r\n      OldQuestion:null, InstructorID:1, ExamTitle:'Marketing'};\r\n      //this.GetMCQInfo()\r\n      this.Autofill()\r\n          \r\n    }\r\n\r\n    //this is for one question\r\n    async GetMCQInfo()\r\n    {\r\n      const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n      const exam = params.get('exam');\r\n      //params = new URLSearchParams(window.location.hash.split(\"?\")[2]);\r\n      const question = params.get('question');\r\n      const response = await fetch('/GetAMCQ/'+exam+'/'+1+'/'+question).then(response => response.json());\r\n      this.setState({Question:response.Question, AnswerList:response.AnswerList,\r\n          CorrectAnswer:response.CorrectAnswer, ILO:response.ILO,  Grade:response.Grade});\r\n\r\n    \r\n    }\r\n\r\n    //et2aked ml choices variable\r\n    UpdateMCQ(NewQuestion, NewAnswers, NewCorrectAns, NewILO, NewGrade)\r\n    {\r\n      fetch('/UpdateMCQ/'+this.state.OldQuestion+'/'+NewQuestion+'/'+NewAnswers+'/'+NewCorrectAns+'/'+this.state.ExamTitle+'/'\r\n      +NewILO+'/'+NewGrade+'/'+this.state.InstructorID)\r\n        .then(response => response.json())\r\n        .then(data => this.setState({IsUpdated:data.Updated}));\r\n      //this.handleSave();\r\n    }\r\n\r\n    async Autofill()\r\n    {\r\n        await this.GetMCQInfo();\r\n        document.getElementById('MCQILO').value=this.state.ILO;\r\n        document.getElementById('MCQGrade').value=this.state.Grade;\r\n        document.getElementById('TextMCQuestion').value=this.state.Question;\r\n        document.getElementById('ChoiceModelAns').value=this.state.CorrectAnswer;\r\n    }\r\n   handleSave()\r\n   {\r\n    if (this.state.IsUpdated == \"Successfully updated\")\r\n    {\r\n      alert(\"Saved Successfully\");\r\n    }\r\n    else\r\n    {\r\n      alert(\"Unseuccessful try\");\r\n      window.location.reload(false);\r\n    } \r\n   }\r\n\r\n   handleAddChoice()\r\n      { \r\n        \r\n        var x = document.createElement(\"div\");\r\n        x.setAttribute(\"class\", \"form-check form-check-inline\");\r\n        x.setAttribute(\"id\",\"choice\"+window.ChoiceCounter);\r\n        x.innerHTML='<input type=\"radio\" disabled class=\"form-check-input\">'+\r\n        '<label title for=\"formExamMCQ\" id= \"'+\"choice\"+window.ChoiceCounter+'\" class=\"form-check-label\">'+ document.getElementById('formChoiceTextbox').value+'</label>';\r\n        document.getElementById('ChoicesDiv').appendChild(x);\r\n        window.ChoiceCounter++;\r\n        var y=document.createElement(\"option\");\r\n        y.innerText=document.getElementById('formChoiceTextbox').value;\r\n        document.getElementById('ChoiceModelAns').appendChild(y);\r\n        document.getElementById('formChoiceTextbox').value='';\r\n      }\r\n      handleDeleteChoice()\r\n      {\r\n        window.ChoiceCounter--;\r\n        var y=document.getElementById('choice'+window.ChoiceCounter);\r\n        document.getElementById('ChoicesDiv').removeChild(y);\r\n      }\r\n    render() {\r\n        return (\r\n        <div>\r\n      <Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\r\n              <br />\r\n      <Form.Group   id=\"formExamMCQ\" controlId=\"formExamMCQ\">\r\n      \r\n      <Form.Label>Multiple Choice Question</Form.Label>\r\n      <Row>\r\n      <Form.Control  size=\"sm\" type=\"text\" id=\"MCQILO\" style={{width:'50%',margin: '15px 15px 15px 15px'}} placeholder=\"Enter Question ILO\"></Form.Control>\r\n      <Form.Control required size=\"sm\"id=\"MCQGrade\" style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\" placeholder=\"Enter Your Grade\" />\r\n\r\n      </Row>\r\n      <Form.Control required size=\"sm\" id=\"TextMCQuestion\" type=\"text\" placeholder=\"Enter Your Question\" />\r\n      <br />\r\n      <Form.Control  required size=\"sm\" id=\"formChoiceTextbox\" type=\"text\" placeholder=\"Enter a Choice\" />\r\n      <Button  size=\"sm\" variant=\"primary\" onClick={this.handleAddChoice}>Add Choice</Button>\r\n      <Button id=\"btnDeleteChoice\"  size=\"sm\" variant=\"danger\" onClick={this.handleDeleteChoice}>Delete Choice</Button>\r\n      <div id=\"ChoicesDiv\"></div>\r\n      <Form.Control required size=\"sm\" as=\"select\" id=\"ChoiceModelAns\" placeholder=\"Choose Model Answer\">\r\n      <option>Choose Model Answer</option>\r\n      </Form.Control>\r\n      <Button size=\"sm\" style={{ float:'right'}} variant=\"success\"\r\n      onClick={()=>{this.UpdateMCQ(this.state.OldQuestion,document.getElementById('TextMCQuestion').value, \r\n      document.getElementById('formChoiceTextbox').value, document.getElementById('ChoiceModelAns').value, \r\n      document.getElementById('MCQILO').value, document.getElementById('MCQGrade').value)\r\n      }}\r\n        >Save Changes</Button>\r\n      </Form.Group>\r\n      </Container>\r\n\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default EditMCQ;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './CreateExam.css';\r\nimport './Popup.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\n\r\nclass EditTF extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', Question:null, CorrectAnswer:null, ILO:null,  Grade:null, IsUpdated:null,\r\n        OldQuestion:null, ExamTitle:'Marketing', InstructorID:1};\r\n        //this.GetTFInfo()\r\n        this.Autofill()\r\n          \r\n    }\r\n\r\n    //this is for one question\r\n    async GetTFInfo()\r\n    {\r\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n        const exam = params.get('exam');\r\n        //params = new URLSearchParams(window.location.hash.split(\"?\")[2]);\r\n        const question = params.get('question');\r\n        const response = await fetch('/GetATrueFalseQues/'+exam+'/'+1+'/'+question).then(response => response.json());\r\n        this.setState({Question:response.Question, CorrectAnswer:response.CorrectAnswer, ILO:response.ILO,  Grade:response.Grade});\r\n\r\n    }\r\n\r\n    UpdateTrueFalse(NewQuestion, NewCorrectAns, NewILO, NewGrade)\r\n    {\r\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n        const exam = params.get('exam');\r\n        //params = new URLSearchParams(window.location.hash.split(\"?\")[2]);\r\n        const question = params.get('question');\r\n        fetch('/UpdateTrueFalse/'+question+'/'+NewQuestion+'/'+NewCorrectAns+'/'+exam+'/'\r\n        +NewILO+'/'+NewGrade+'/'+1)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({IsUpdated:data.Updated}));\r\n        //this.handleSave();\r\n    }\r\n\r\n    async Autofill()\r\n    {\r\n        await this.GetTFInfo();\r\n        document.getElementById('TFILO').value=this.state.ILO;\r\n        document.getElementById('TFGrade').value=this.state.Grade;\r\n        document.getElementById('TextTF').value=this.state.Question;\r\n        document.getElementById('TFModelAns').value=this.state.CorrectAnswer;\r\n    }\r\n\r\n    handleSave()\r\n    {\r\n     if (this.state.IsUpdated == \"Successfully updated\")\r\n     {\r\n       alert(\"Saved Successfully\");\r\n     }\r\n     else\r\n     {\r\n       alert(\"Unseuccessful try\");\r\n       window.location.reload(false);\r\n     } \r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n<Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\r\n        <br />\r\n<Form.Group  id=\"formExamTF\" controlId=\"formExamTF\">\r\n    <Form.Label>True and False Question</Form.Label>\r\n    <Row>\r\n    <Form.Control  size=\"sm\"id=\"TFILO\" type=\"text\" style={{width:'50%',margin: '15px 15px 15px 15px'}}\r\n    placeholder=\"Enter Question ILO\"></Form.Control>\r\n   <Form.Control size=\"sm\"id=\"TFGrade\" style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\"\r\n   placeholder=\"Enter Your Grade\" />\r\n   \r\n   </Row>\r\n    <Form.Control size=\"sm\" id=\"TextTF\" type=\"text\" placeholder=\"Enter Your Question\" />\r\n      <br />\r\n      <Form.Control size=\"sm\" as=\"select\" id=\"TFModelAns\" placeholder=\"Choose Model Answer\">\r\n    <option>Choose Model Answer</option>\r\n    <option>True</option>\r\n    <option>False</option>\r\n    </Form.Control>\r\n    <Button size=\"sm\" style={{ float:'right'}} variant=\"success\"\r\n    onClick={()=>{this.UpdateTrueFalse(document.getElementById('TextTF').value, \r\n    document.getElementById('TFModelAns').value, document.getElementById('TFILO').value, \r\n    document.getElementById('TFGrade').value)\r\n    }}\r\n     >Save Changes</Button>\r\n   \r\n    </Form.Group>\r\n    </Container>\r\n    \r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default EditTF;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './CreateExam.css';\r\nimport './Popup.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\n\r\nclass EditComplete extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', Question1:null, Question2:null, CorrectAnswer:null, ILO:null,  Grade:null, IsUpdated:null, \r\n        InstructorID:1, ExamTitle:'Marketing', OldQuestion1:null, OldQuestion2:null};\r\n        \r\n        this.Autofill()\r\n        \r\n          \r\n    }\r\n\r\n    //this is for one question\r\n    async GetCompleteInfo()\r\n    {\r\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n        const exam = params.get('exam');\r\n        //params = new URLSearchParams(window.location.hash.split(\"?\")[2]);\r\n        const question = params.get('question');\r\n        const response = await fetch('/GetACompleteQues/'+exam+'/'+1+'/'+question).then(response => response.json());\r\n        this.setState({Question1:response.Question1, Question2:response.Question2, \r\n            CorrectAnswer:response.CorrectAnswer, ILO:response.ILO,  Grade:response.Grade});\r\n\r\n        // fetch('/GetACompleteQues/'+exam+'/'+1+'/'+question)\r\n        //     .then(response => response.json())\r\n        //     .then(data => this.setState({Question1:data.Question1, Question2:data.Question2, \r\n        //     CorrectAnswer:data.CorrectAnswer, ILO:data.ILO,  Grade:data.Grade}));\r\n    }\r\n\r\n    UpdateComplete(NewQuestion1, NewQuestion2, NewCorrectAns, NewILO, NewGrade)\r\n    {\r\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n        const exam = params.get('exam');\r\n        //params = new URLSearchParams(window.location.hash.split(\"?\")[2]);\r\n        const question = params.get('question');\r\n        fetch('/UpdateComplete/'+question+'/'+NewQuestion1+'/'+NewQuestion2+'/'\r\n        +NewCorrectAns+'/'+exam+'/'+NewILO+'/'+NewGrade+'/'+1)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({IsUpdated:data.Updated}));\r\n        //this.handleSave();\r\n\r\n    }\r\n\r\n    async Autofill()\r\n    {\r\n        await this.GetCompleteInfo();\r\n        document.getElementById('CompleteILO').value=this.state.ILO;\r\n        document.getElementById('CompleteGrade').value=this.state.Grade;\r\n        document.getElementById('TextComplete1').value=this.state.Question2;\r\n        document.getElementById('TextComplete2').value=this.state.Question2;\r\n        document.getElementById('AnswerComplete').value=this.state.CorrectAnswer;\r\n    }\r\n\r\n    handleSave()\r\n    {\r\n    \r\n     if (this.state.IsUpdated == \"Successfully updated\")\r\n     {\r\n       alert(\"Saved Successfully\");\r\n     }\r\n     else\r\n     {\r\n       alert(\"Unseuccessful try\");\r\n       window.location.reload(false);\r\n     } \r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n<Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\r\n        <br />\r\n<Form.Group id=\"formExamComplete\" controlId=\"formExamComplete\">\r\n   \r\n   <Form.Label>Complete Question</Form.Label>\r\n   <Row>\r\n   <Form.Control  size=\"sm\" id=\"CompleteILO\" type=\"text\" style={{width:'50%',margin: '15px 15px 15px 15px'}} placeholder=\"Enter Your ILO \" ></Form.Control>\r\n   <Form.Control size=\"sm\" id=\"CompleteGrade\" style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\" placeholder=\"Enter Your Grade \"/>\r\n   \r\n   </Row>\r\n   <Form.Control size=\"sm\" id=\"TextComplete1\" type=\"text\"  placeholder=\"Enter Your 1st part of the Question *before the space*\" />\r\n   <Form.Control size=\"sm\"id=\"TextComplete2\" type=\"text\"   placeholder=\"Enter Your 2nd part of the Question *after the space*\" />\r\n   <br />\r\n   <Form.Control size=\"sm\" id=\"AnswerComplete\" type=\"text\" placeholder=\"Enter Your Model Answer *the space*\" />\r\n   <Button size=\"sm\" style={{ float:'right'}} variant=\"success\"\r\n   onClick={()=>{this.UpdateComplete(document.getElementById('TextComplete1').value, \r\n   document.getElementById('TextComplete2').value, document.getElementById('AnswerComplete').value,\r\n    document.getElementById('CompleteILO').value, document.getElementById('CompleteGrade').value)\r\n   }}\r\n   >Save Changes</Button>\r\n   \r\n   </Form.Group>\r\n   </Container>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default EditComplete;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './CreateExam.css';\r\nimport './Popup.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\n\r\nclass EditEssay extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', Question:null, CorrectAnswer:null, ILO:null,  Grade:null, IsUpdated:null,\r\n        OldQuestion:null, ExamTitle:'Marketing', InstructorID:1};\r\n        //this.GetEssayInfo()\r\n        this.Autofill()\r\n        \r\n          \r\n    }\r\n\r\n    //this is for one question\r\n    async GetEssayInfo()\r\n    {\r\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n        const exam = params.get('exam');\r\n        //params = new URLSearchParams(window.location.hash.split(\"?\")[2]);\r\n        const question = params.get('question');\r\n        const response = await fetch('/GetAEssQues/'+exam+'/'+1+'/'+question).then(response => response.json());\r\n        this.setState({Question:response.Question, CorrectAnswer:response.CorrectAnswer, ILO:response.ILO,  Grade:response.Grade});\r\n\r\n    }\r\n\r\n    UpdateEssay(NewQuestion, NewCorrectAns, NewILO, NewGrade)\r\n    {\r\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n        const exam = params.get('exam');\r\n        //params = new URLSearchParams(window.location.hash.split(\"?\")[2]);\r\n        const question = params.get('question');\r\n        fetch('/UpdateEssay/'+question+'/'+NewQuestion+'/'+NewCorrectAns+'/'+exam+'/'\r\n        +NewILO+'/'+NewGrade+'/'+1)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({IsUpdated:data.Updated}));\r\n        //this.handleSave();\r\n    }\r\n\r\n    async Autofill()\r\n    {\r\n        await this.GetEssayInfo()\r\n        document.getElementById('EssayILO').value=this.state.ILO;\r\n        document.getElementById('EssayGrade').value=this.state.Grade;\r\n        document.getElementById('TextEssay').value=this.state.Question;\r\n        document.getElementById('AnswerEssay').value=this.state.CorrectAnswer;\r\n    }\r\n\r\n    handleSave()\r\n    {\r\n     if (this.state.IsUpdated == \"Successfully updated\")\r\n     {\r\n       alert(\"Saved Successfully\");\r\n     }\r\n     else\r\n     {\r\n       alert(\"Unseuccessful try\");\r\n       window.location.reload(false);\r\n     } \r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n<Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\r\n        <br />\r\n<Form.Group  id=\"formExamEssay\" controlId=\"formExamEssay\">\r\n    <Form.Label>Essay Question</Form.Label>\r\n    <Row>\r\n    <Form.Control  size=\"sm\"id=\"EssayILO\" type=\"text\" style={{width:'50%',margin: '15px 15px 15px 15px'}}\r\n    placeholder=\"Enter Question ILO\"></Form.Control>\r\n   <Form.Control size=\"sm\" id=\"EssayGrade\"style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\"\r\n    placeholder=\"Enter Your Grade\" />\r\n   \r\n   </Row>\r\n    <Form.Control size=\"sm\" id=\"TextEssay\" type=\"text\" placeholder=\"Enter Your Essay Question\" />\r\n   <br />\r\n    <Form.Control size=\"sm\" as=\"textarea\"id=\"AnswerEssay\" placeholder=\"Enter Your Model Answer\" />\r\n    <Button size=\"sm\" style={{ float:'right'}} variant=\"success\"\r\n     onClick={()=>{this.UpdateEssay(document.getElementById('TextEssay').value, \r\n     document.getElementById('AnswerEssay').value, document.getElementById('EssayILO').value, \r\n     document.getElementById('EssayGrade').value)\r\n     }}\r\n      >Save Changes</Button>\r\n    </Form.Group>\r\n    </Container>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default EditEssay;","import React, { Component } from 'react';\r\n\r\nimport './Exam.css';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\nimport $ from 'jquery'; \r\n\r\nclass TakeMCQ extends Component{\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value:'', QuestionList:[], CounterList:[], AnswerList:[],CorrectAnswerList:[], \r\n        ILOList:[], GradeList:[]};\r\n        this.GetMCQ()\r\n        window.MCQQuestions=[];\r\n        window.MCQAnswers=[];\r\n    }\r\n\r\n    GetMCQ()\r\n    {\r\n        var examname=this.props.passedname;\r\n      fetch('/GetMCQ/'+examname+'/'+1)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList:data.QuestionList, CounterList:data.CounterList, AnswerList:data.AnswerList,\r\n            CorrectAnswerList:data.CorrectAnswerList, ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n\r\n    handleSubmit()\r\n    {\r\n        window.MCQAnswers=[];\r\n        var ansGroup=\"\"\r\n    \r\n        for(var i=0;i<window.MCQQuestions.length;i++)\r\n        {\r\n            ansGroup=\"AnswerMCQ\" + (i+1)\r\n            if(document.getElementById(ansGroup)!=null)\r\n            {\r\n                window.MCQAnswers.push($(`input[name='${ansGroup}']:checked`).val());\r\n            }\r\n         \r\n\r\n        }\r\n        \r\n       \r\n    }\r\n    render(){\r\n        var name=this.props.passedname\r\n        var ExamMCQQuestions = this.state.QuestionList;\r\n        var ExamMCQCounter = this.state.CounterList;\r\n        var ExamMCQChoices = this.state.AnswerList;\r\n        ExamMCQChoices = ExamMCQChoices.toString().split(',');\r\n        window.MCQQuestions=ExamMCQQuestions;\r\n        var r = \"\";\r\n        var i = 0;\r\n        var MCQHead = \"\";\r\n        var answer = \"\";\r\n        var choicesNumber = 0;\r\n        if (ExamMCQQuestions.length != 0) {\r\n            MCQHead = <div><Form.Label  ><b>Choose the Correct Answer:</b></Form.Label> <Button style={{width:'21%',margin: '10px 10px 10px 10px'}} onClick={this.handleSubmit} size=\"sm\" variant=\"primary\" >Submit MCQ</ Button> <br /></div>;\r\n\r\n            r = ExamMCQChoices.map((choice, index) => {\r\n                if (choicesNumber == 0) {\r\n                    choicesNumber = ExamMCQCounter[i] - 1;\r\n                    i += 1;\r\n                    answer = \"AnswerMCQ\" + (i);\r\n                    return (\r\n                        <div>\r\n                            <Form.Label  >{i})&nbsp;{ExamMCQQuestions[i - 1]}  </Form.Label> \r\n                    \r\n            \r\n                             <br />\r\n                            <Form.Label ><input type=\"radio\" name={answer} value={choice} id={answer} /> {choice} </Form.Label>\r\n                            </div>\r\n                    )\r\n                }\r\n                else {\r\n                    choicesNumber -= 1;\r\n                    return (\r\n                        <div >\r\n                            <Form.Label ><input type=\"radio\" name={answer} value={choice} id={answer} /> {choice} </Form.Label>\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n\r\n            });\r\n\r\n        }\r\n\r\n        return(\r\n            <div>\r\n            \r\n            { MCQHead }\r\n            { r }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default TakeMCQ;","import React, { Component } from 'react';\r\n\r\nimport './Exam.css';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nclass TakeEssay extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value:'', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[]};\r\n        this.GetEssay()\r\n        window.EssayQuestions=[];\r\n        window.EssayAnswers=[];\r\n    }\r\n\r\n    GetEssay()\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/GetEssay/'+examname+'/'+1)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \r\n            ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n\r\n    handleSubmit()\r\n    {\r\n        window.EssayAnswers=[];\r\n        \r\n        for(var i=0;i<window.EssayCount;i++)\r\n        {\r\n            \r\n            if(document.getElementById(\"AnswerEssay\" + (i+1))!=null)\r\n            {\r\n                window.EssayAnswers.push(document.getElementById(\"AnswerEssay\" + (i+1)).value);\r\n            }\r\n\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    render(){\r\n        var ExamEssay=this.state.QuestionList;\r\n        window.EssayQuestions=ExamEssay;\r\n        var name=this.props.passedname\r\n        var EssayHead=\"\";\r\n        var Essay=\"\";\r\n        var answerid = \"\";\r\n        if(ExamEssay.length!=0){\r\n            EssayHead = <div><Form.Label  ><b>Essay Question(s):</b></Form.Label> <Button style={{width:'21%',margin: '10px 10px 10px 10px'}} onClick={this.handleSubmit} size=\"sm\" variant=\"primary\" >Submit Essay</ Button>\r\n            <br /></div>;\r\n            Essay= ExamEssay.map((Question,index)=>{\r\n                window.EssayCount=index+1;\r\n                answerid = \"AnswerEssay\" + (index+1);\r\n            return(\r\n                 <div>\r\n                    <Form.Label  >{index+1})&nbsp;{ExamEssay[index]}  </Form.Label>\r\n                          \r\n                     <br />\r\n                    <Form.Label><textarea placeholder=\"Enter Answer Here\" id={answerid}  style={{width:\"600px\"}}></textarea></Form.Label>\r\n                </div>\r\n                )\r\n            }\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {EssayHead}\r\n                {Essay}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TakeEssay;","import React, { Component } from 'react';\r\nimport './Exam.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport $ from 'jquery'; \r\nclass TakeTF extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value:'', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[]};\r\n        this.GetTF()\r\n        window.TFQuestions=[];\r\n        window.TFAnswers=[];\r\n    }\r\n\r\n    GetTF()\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/GetTF/'+examname+'/'+1)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \r\n            ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n\r\n    handleSubmit()\r\n    {\r\n        window.TFAnswers=[];\r\n        var ansGroup=\"\"\r\n        \r\n        for(var i=0;i<window.TFQuestions.length;i++)\r\n        {\r\n            ansGroup=\"AnswerTF\" + (i+1)\r\n            if(document.getElementById(ansGroup)!=null)\r\n            {\r\n                window.TFAnswers.push($(`input[name='${ansGroup}']:checked`).val());\r\n            }\r\n         \r\n\r\n        }\r\n        \r\n      \r\n    }\r\n\r\n    render() {\r\n       \r\n        var ExamTF = this.state.QuestionList;\r\n        window.TFQuestions=ExamTF;\r\n        var name=this.props.passedname\r\n        var TFHead = \"\";\r\n        var TF = \"\";\r\n        var answer=\"\";\r\n        if (ExamTF.length != 0) {\r\n            TFHead = <div><Form.Label  ><b>True or False:</b></Form.Label> <Button style={{width:'21%',margin: '10px 10px 10px 10px'}} onClick={this.handleSubmit} size=\"sm\" variant=\"primary\" >Submit T & F</ Button>\r\n            <br /></div>;\r\n            TF = ExamTF.map((Question, index) => {\r\n                answer=\"AnswerTF\"+(index+1)\r\n                \r\n                return (\r\n                    <div>\r\n                        <Form.Label  > {index + 1})&nbsp;{ExamTF[index]}  </Form.Label>\r\n                        <Form.Label style={{ paddingRight:\"6px\" ,margin:\"10px 10px 10px 10px\" }}><input type=\"radio\" name={answer} id={answer}  value=\"True\"  />True </Form.Label>   \r\n                        <Form.Label style={{paddingRight:\"6px\",margin:\"10px 10px 10px 10px\"}}><input type=\"radio\" name={answer} id={answer}  value=\"False\" />False </Form.Label> \r\n                        \r\n                        \r\n                    </div>\r\n                )\r\n            }\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {TFHead}\r\n                {TF}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TakeTF;","import React, { Component } from 'react';\r\n\r\nimport './Exam.css';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nclass TakeComplete extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[]};\r\n        this.GetComplete()\r\n        window.CompleteQuestions=[];\r\n        window.CompleteAnswers=[];\r\n    }\r\n\r\n    GetComplete()\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/GetComplete/'+examname+'/'+1)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \r\n            ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n\r\n    handleSubmit()\r\n    {\r\n        window.CompleteAnswers=[];\r\n        for(var i=0;i<window.CompleteCount;i++)\r\n        {\r\n            \r\n            if(document.getElementById(\"AnswerComplete\" + (i+1))!=null)\r\n            {\r\n                window.CompleteAnswers.push(document.getElementById(\"AnswerComplete\" + (i+1)).value);\r\n            }\r\n\r\n        }\r\n        \r\n        \r\n    }\r\n    render() {\r\n        var ExamComplete = this.state.QuestionList;\r\n        window.CompleteQuestions=ExamComplete;\r\n        var Examname=this.props.passedname;\r\n        var CompleteHead = \"\";\r\n        var Complete = \"\";\r\n        var i=0\r\n        if (ExamComplete.length != 0) {\r\n            CompleteHead = <div><Form.Label  ><b>Complete the following:</b></Form.Label>  <Button style={{width:'21%',margin: '10px 10px 10px 10px'}} onClick={this.handleSubmit} size=\"sm\" variant=\"primary\" >Submit Complete</ Button>\r\n            <br /></div>;\r\n            Complete = ExamComplete.map((Question, index) => {\r\n               \r\n                if (index%2==0)\r\n                {\r\n                    i+=1;\r\n                    var answerid = \"AnswerComplete\" + i;\r\n                    window.CompleteCount=i;\r\n                    return (\r\n                        <div>\r\n                            <Form.Label  > {i})&nbsp; </Form.Label> \r\n                            <Form.Label>  {ExamComplete[index]}   </Form.Label>\r\n                            <input type=\"text\" id={answerid} placeholder=\"Enter Answer Here\"  style={{margin:\"6px\"}}/>\r\n                            <Form.Label> {ExamComplete[index+1]} </Form.Label>\r\n                           \r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {CompleteHead}\r\n                {Complete}\r\n                          \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TakeComplete;","import React, { Component } from 'react';\r\n\r\nimport './Exam.css';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nimport TakeMCQ from './TakeMCQ.js';\r\nimport TakeEssay from './TakeEssay.js';\r\nimport TakeTF from './TakeTF.js';\r\nimport TakeComplete from './TakeComplete.js';\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\n\r\nclass TakeExam extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '',Submit:null};\r\n\r\n      }\r\n\r\n      handleSubmitAnswers()\r\n      {\r\n        document.getElementById('ExamSubmitBox').style.display='block';\r\n      }\r\n      SubmitStudentExam(StudentID, MCQList, MCQAnswers, \r\n        CompleteList, CompleteAnswers, TFList, TFAnswers, EssayList, EssayAnswers)\r\n      {\r\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n        const examname = params.get('name');\r\n        // console.log(\"Question\",question)\r\n        if (MCQList==[])\r\n        {\r\n          MCQList = ['']\r\n        }\r\n        if (MCQAnswers==[])\r\n        {\r\n          MCQAnswers = ['']\r\n        }\r\n        if (CompleteList==[])\r\n        {\r\n          CompleteList = ['']\r\n        }\r\n        if (CompleteAnswers==[])\r\n        {\r\n          CompleteAnswers = ['']\r\n        }\r\n        if (TFList==[])\r\n        {\r\n          TFList = ['']\r\n        }\r\n        if (TFAnswers==[])\r\n        {\r\n          TFAnswers = ['']\r\n        }\r\n        if (EssayList==[])\r\n        {\r\n          EssayList = ['']\r\n        }\r\n        if (EssayAnswers==[])\r\n        {\r\n          EssayAnswers = ['']\r\n        }\r\n        fetch('/SubmitStudentExam/'+examname+'/'+StudentID+'/'+MCQList+'/'+MCQAnswers+'/'+CompleteList+'/'+CompleteAnswers+'/'+TFList+\r\n        '/'+TFAnswers+'/'+EssayList+'/'+EssayAnswers)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({Submit : data.successful}));\r\n          this.handleSubmitAnswers();\r\n      }\r\n\r\n    render() {\r\n        \r\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n        const name = params.get('name');\r\n        return (\r\n            <div>\r\n     <div style={{display:'none'}} class=\"modal-custom\" id=\"ExamSubmitBox\">\r\n          <Modal.Dialog  >\r\n              <Modal.Header >\r\n              <Modal.Title>Exam Alert</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                Exam \"{name}\" Submitted Successfully\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"primary\" onClick={event =>  window.location.href='#/student-home'} >Ok</Button>\r\n            </Modal.Footer>\r\n          </Modal.Dialog>\r\n          </div>\r\n        <Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\r\n            <br />\r\n        <Form>\r\n        <Form.Label style={{ display: 'flex', justifyContent: 'center' }}><b>{name}</b> </Form.Label>\r\n            <TakeMCQ passedname={name}/>\r\n            <TakeTF passedname={name}/>\r\n            <TakeComplete passedname={name}/>\r\n            <TakeEssay passedname={name}/>\r\n            <Button style={{ float:'right'}} variant=\"primary\"  type=\"submit\"onClick={()=>{this.SubmitStudentExam('1',window.MCQQuestions,window.MCQAnswers,window.CompleteQuestions,window.CompleteAnswers,window.TFQuestions,window.TFAnswers,window.EssayQuestions,window.EssayAnswers)}}>Submit Answers</Button>\r\n        </Form>\r\n        </Container>\r\n            </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default TakeExam;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './StudentHome.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nclass StudentHome extends Component {\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n          \r\n          <h1>Welcome ya Taleb.</h1>\r\n    <br />\r\n    <Container style={{ justifyContent:'center'}}>\r\n     <Row style={{ justifyContent:'space-evenly'}}>\r\n         <Col  style={{ flexGrow:'unset'}}><Button style={{width: 'max-content'}} href=\"#/student-ask\" size=\"lg\"variant=\"primary\">Ask a Question</Button></Col>\r\n         <Col style={{ flexGrow:'unset'}} ><Button style={{width: 'max-content'}} href=\"#/student-view-all\" size=\"lg\" variant=\"primary\">Take Exam</Button></Col>\r\n     </Row>\r\n\r\n </Container>\r\n            \r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StudentHome;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './StudentAsk.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nclass StudentAsk extends Component {\r\n\r\n \r\n    render() {\r\n        return (\r\n        <div>\r\n    <Container style={{width:'660px',height:'590px',backgroundColor:'white',overflow:'scroll'}}>\r\n        <br />\r\n    <Form style={{backgroundColor:'white'}}>\r\n\r\n  <Form.Group  id=\"formExamEssay\" controlId=\"formExamEssay\">\r\n    <Form.Label>Essay Question</Form.Label>\r\n    <Form.Control id=\"TextEssay\" as=\"textarea\" placeholder=\"Enter Your Essay Question\" />\r\n   <br />\r\n    <Button  style={{float:'right'}} variant=\"success\" >Get Answer</Button>\r\n\r\n  </Form.Group>\r\n\r\n</Form>\r\n\r\n </Container>\r\n            \r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StudentAsk;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './StudentExams.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nclass StudentExams extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', Exams:null};\r\n        fetch('/ViewExams/'+1)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({Exams : data.ans}));\r\n          \r\n          \r\n    }\r\n\r\n    render() {\r\n       //var names= window.ExamTitle;\r\n       var names = this.state.Exams\r\n       if (names==null)\r\n       {\r\n        var nameslist='No Exams Yet'\r\n       }\r\n       else\r\n       {\r\n        var nameslist= names.map(function(name){\r\n            const href = `/#/student-take-exam?${new URLSearchParams({ name }).toString()}`;\r\n            return <ListGroup.Item href={href} action>{name}</ListGroup.Item>;\r\n          })\r\n       }\r\n    \r\n        \r\n       return (\r\n        <div>\r\n          \r\n          <h1>All Exams</h1>\r\n   \r\n    <Container style={{width:'660px',height:'550px',backgroundColor:'white',overflow:'scroll'}}>\r\n        <br />\r\n       <ListGroup style={{textAlign: 'center'}} >{nameslist}</ListGroup>\r\n    </Container>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StudentExams;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Exam.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport Exam from './Exam.js';\r\n\r\nclass ExamMCQ extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', QuestionList:[], CounterList:[], AnswerList:[],CorrectAnswerList:[], \r\n        ILOList:[], GradeList:[]};\r\n        this.GetMCQ()\r\n          \r\n    }\r\n\r\n    GetMCQ()\r\n    {\r\n        var examname=this.props.passedname\r\n      fetch('/GetMCQ/'+examname+'/'+1)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList:data.QuestionList, CounterList:data.CounterList, AnswerList:data.AnswerList,\r\n            CorrectAnswerList:data.CorrectAnswerList, ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n\r\n    handleTopic(){}\r\n\r\n    render(){\r\n        var ExamMCQQuestions = this.state.QuestionList;\r\n        var ExamMCQCounter   = this.state.CounterList;\r\n        var ExamMCQChoices   = this.state.AnswerList;\r\n        ExamMCQChoices = ExamMCQChoices.toString().split(',');\r\n\r\n        //var ExamMCQQuestions = window.ExamMCQQuestions;\r\n        //var ExamMCQCounter = window.ExamMCQCounter;\r\n        //var ExamMCQChoices = window.ExamMCQChoices;\r\n\r\n        var r = \"\";\r\n        var i = 0;\r\n        var MCQHead = \"\";\r\n        var answer = \"\";\r\n        var choicesNumber = 0;\r\n        if (ExamMCQQuestions.length != 0) {\r\n            MCQHead = <div><Form.Label  ><b>Choose the Correct Answer:</b></Form.Label> <br /></div>;\r\n\r\n            r = ExamMCQChoices.map((choice, index) => {\r\n                if (choicesNumber == 0) {\r\n                    choicesNumber = ExamMCQCounter[i] - 1;\r\n                    i += 1;\r\n                    answer = \"answer\" + (i);\r\n                    return (\r\n                        <div>\r\n                            <Form.Label  >{i})&nbsp;{ExamMCQQuestions[i - 1]}  </Form.Label> \r\n                    \r\n            \r\n                             <br />\r\n                            <Form.Label inline><input type=\"radio\" name={answer} value={choice} disabled /> {choice} </Form.Label>\r\n                            </div>\r\n                    )\r\n                }\r\n                else {\r\n                    choicesNumber -= 1;\r\n                    return (\r\n                        <div >\r\n                            <Form.Label inline><input type=\"radio\" name={answer} value={choice} disabled /> {choice} </Form.Label>\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n\r\n            });\r\n\r\n        }\r\n\r\n        return(\r\n            <div>\r\n            { MCQHead }\r\n            { r }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ExamMCQ;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Exam.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport Exam from './Exam.js';\r\n\r\nclass ExamEssay extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[]};\r\n        this.GetEssay()\r\n          \r\n    }\r\n\r\n    GetEssay()\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/GetEssay/'+examname+'/'+1)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \r\n            ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n    render(){\r\n        //var ExamEssay=window.ExamEssay;\r\n        var ExamEssay = this.state.QuestionList\r\n        \r\n        var EssayHead=\"\";\r\n        var Essay=\"\";\r\n        if(ExamEssay.length!=0){\r\n            EssayHead = <div><Form.Label  ><b>Essay Questions:</b></Form.Label> <br /></div>;\r\n            Essay= ExamEssay.map((Question,index)=>{\r\n            return(\r\n                 <div>\r\n                    <Form.Label  >{index+1})&nbsp;{ExamEssay[index]}  </Form.Label>\r\n                          \r\n                     <br />\r\n                    <Form.Label><textarea placeholder=\"Enter Answer Here\" value={this.state.CorrectAnswerList[index]} disabled style={{width:\"600px\"}}></textarea></Form.Label>\r\n                </div>\r\n                )\r\n            }\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {EssayHead}\r\n                {Essay}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ExamEssay;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Exam.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport Exam from './Exam.js';\r\n\r\nclass ExamTF extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[]};\r\n        this.GetTF()\r\n          \r\n    }\r\n        \r\n    GetTF()\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/GetTF/'+examname+'/'+1)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \r\n            ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n    render() {\r\n        //var ExamTF = window.ExamTF;\r\n        var ExamTF = this.state.QuestionList;\r\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n        const name = params.get('name');\r\n        var TFHead = \"\";\r\n        var TF = \"\";\r\n        if (ExamTF.length != 0) {\r\n            TFHead = <div><Form.Label  ><b>True or False:</b></Form.Label> <br /></div>;\r\n            TF = ExamTF.map((Question, index) => {\r\n                return (\r\n                    <div>\r\n                       <Form.Label  > {index + 1})&nbsp;{ExamTF[index]}  </Form.Label>\r\n                              \r\n                        <Form.Label style={{ paddingRight:\"6px\" ,margin:\"10px 10px 10px 10px\" }}><input type=\"radio\" name={index}  value=\"True\"  />True </Form.Label>   \r\n                        <Form.Label style={{paddingRight:\"6px\",margin:\"10px 10px 10px 10px\"}}><input type=\"radio\" name={index}  value=\"False\" />False </Form.Label> \r\n                        \r\n                    </div>\r\n                )\r\n            }\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {TFHead}\r\n                {TF}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ExamTF;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Exam.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport Exam from './Exam.js';\r\n\r\nclass ExamComplete extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[]};\r\n        this.GetComplete()\r\n        \r\n          \r\n    }\r\n\r\n    GetComplete()\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/GetComplete/'+examname+'/'+1)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \r\n            ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n    render() {\r\n        //var ExamComplete = window.ExamComplete;\r\n        var ExamComplete = this.state.QuestionList;\r\n\r\n        var CompleteHead = \"\";\r\n        var Complete = \"\";\r\n        var i=0\r\n        if (ExamComplete.length != 0) {\r\n            CompleteHead = <div><Form.Label  ><b>Complete the following:</b></Form.Label> <br /></div>;\r\n            Complete = ExamComplete.map((Question, index) => {\r\n                if (index%2==0)\r\n                {\r\n                    i+=1;\r\n                    return (\r\n                        <div>\r\n                           <Form.Label  > {i})&nbsp; </Form.Label> \r\n                            <Form.Label>  {ExamComplete[index]}   </Form.Label>\r\n                            <input type=\"text\" placeholder=\"Enter Answer Here\" value={this.state.CorrectAnswerList[index]} disabled style={{margin:\"6px\"}}/>\r\n                            <Form.Label> {ExamComplete[index+1]} </Form.Label>\r\n\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {CompleteHead}\r\n                {Complete}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ExamComplete;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Exam.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport ExamMCQ from './ExamMCQ.js';\r\nimport ExamEssay from './ExamEssay.js';\r\nimport ExamTF from './ExamTF.js';\r\nimport ExamComplete from './ExamComplete.js';\r\n\r\n\r\n\r\nclass Exam extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n          \r\n    }\r\n\r\n    render() {\r\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n        const name = params.get('name');\r\n        window.examname=name;\r\n        return (\r\n            <div>\r\n    \r\n        <Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\r\n            <br />\r\n        <Form>\r\n        <Form.Label style={{ display: 'flex', justifyContent: 'center' }}>{name}</Form.Label>\r\n            <ExamMCQ passedname={name} />\r\n            <ExamTF passedname={name}/>\r\n            <ExamComplete passedname={name}/>\r\n            <ExamEssay passedname={name}/>\r\n        </Form>\r\n        </Container>\r\n            </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default Exam;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Exam.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\n\r\nclass ViewEditMCQ extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', MCQQuestions:[], MCQCounter:[], MCQChoices:[],CorrectAnswerList:[], \r\n        ILOList:[], GradeList:[], Deleted:null};\r\n        this.GetMCQ()\r\n             \r\n    }\r\n\r\n    GetMCQ()\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/GetMCQ/'+examname+'/'+1)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({MCQQuestions : data.QuestionList, MCQCounter : data.CounterList, MCQChoices : data.AnswerList,\r\n            CorrectAnswerList:data.CorrectAnswerList, ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n\r\n    DeleteMCQ(Question)\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/DeleteMCQ/'+examname+'/'+Question)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({Deleted : data.Deleted}));\r\n        window.location.reload(false);\r\n    }\r\n    \r\n\r\n    render(){\r\n        var ExamMCQQuestions = this.state.MCQQuestions;\r\n        var ExamMCQCounter = this.state.MCQCounter;\r\n        var ExamMCQChoices = this.state.MCQChoices;\r\n        ExamMCQChoices = ExamMCQChoices.toString().split(',');\r\n\r\n        var r = \"\";\r\n        var i = 0;\r\n        var MCQHead = \"\";\r\n        var answer = \"\";\r\n        var choicesNumber = 0;\r\n        if (ExamMCQQuestions.length != 0) {\r\n            MCQHead = <div><Form.Label  ><b>Choose the Correct Answer:</b></Form.Label> <br /></div>;\r\n\r\n            r = ExamMCQChoices.map((choice, index) => {\r\n                \r\n                if (choicesNumber == 0) {\r\n                    choicesNumber = ExamMCQCounter[i] - 1;\r\n                    i += 1;\r\n                    answer = \"answer\" + (i);\r\n                    var question = ExamMCQQuestions[i - 1]\r\n                    var exam = this.props.passedname\r\n                    const href1 = `/#/instructor-edit-mcq?${new URLSearchParams({ exam, question }).toString()}`;\r\n                    return (\r\n                        <div>\r\n                             <Row>\r\n                            <Form.Label style={{width:'50%',margin: '15px 15px 15px 15px'}}> ILO:{this.state.ILOList[index]}  </Form.Label>\r\n                            <Form.Label style={{width:'40%',margin: '15px 15px 15px 15px'}}> Grade:{this.state.GradeList[index]} </Form.Label>\r\n                            </Row>\r\n                            <Form.Label  >Question {i}: {ExamMCQQuestions[i - 1]}  </Form.Label> \r\n                           \r\n\r\n                            <Form.Label inline><input type=\"radio\" name={answer} value={choice} disabled /> {choice} </Form.Label>\r\n\r\n                           \r\n\r\n                            <Button style={{width:'10%',margin: '10px 10px 10px 10px',float:'right'}} size=\"sm\" variant=\"danger\" \r\n                            onClick={()=>{this.DeleteMCQ(question)}} >Delete</ Button>\r\n                            <Button style={{width:'10%',margin: '10px 10px 10px 10px',float:'right'}}href={href1} size=\"sm\" variant=\"primary\" >Edit</ Button>\r\n                    \r\n                        </div>\r\n                    )\r\n                }\r\n                else {\r\n                    choicesNumber -= 1;\r\n                    return (\r\n                        <div >\r\n                            <Form.Label inline><input type=\"radio\" name={answer} value={choice} disabled /> {choice} </Form.Label>\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n\r\n            });\r\n\r\n        }\r\n\r\n        return(\r\n            <div>\r\n            { MCQHead }\r\n            { r }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ViewEditMCQ;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Exam.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\n\r\nclass ViewEditEssay extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[], Deleted:null};\r\n        this.GetEssay()\r\n        \r\n          \r\n    }\r\n\r\n    GetEssay()\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/GetEssay/'+examname+'/'+1)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \r\n            ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n\r\n    DeleteEssay(Question)\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/DeleteEssay/'+examname+'/'+Question)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({Deleted : data.Deleted}));\r\n        window.location.reload(false);\r\n    }\r\n\r\n    render(){\r\n        var ExamEssay=this.state.QuestionList;\r\n        \r\n        var EssayHead=\"\";\r\n        var Essay=\"\";\r\n        if(ExamEssay.length!=0){\r\n            EssayHead = <div><Form.Label  ><b>Essay Questions:</b></Form.Label> <br /></div>;\r\n            Essay= ExamEssay.map((Question,index)=>{\r\n                var question = ExamEssay[index]\r\n                var exam = this.props.passedname\r\n                //const href1 = `/#/instructor-edit-essay?${new URLSearchParams({ exam }).toString()}?${new URLSearchParams({ question }).toString()}`;\r\n                const href1 = `/#/instructor-edit-essay?${new URLSearchParams({ exam, question }).toString()}`;\r\n            return(\r\n                 <div>\r\n                    <Row>\r\n                            <Form.Label style={{width:'50%',margin: '15px 15px 15px 15px'}}> ILO:{this.state.ILOList[index]}  </Form.Label>\r\n                            <Form.Label style={{width:'40%',margin: '15px 15px 15px 15px'}}> Grade:{this.state.GradeList[index]} </Form.Label>\r\n                    </Row>\r\n                    <Form.Label  >Question {index+1}: {ExamEssay[index]}  </Form.Label>\r\n                    \r\n                    <Form.Label><textarea placeholder=\"Enter Answer Here\" value={this.state.CorrectAnswerList[index]} disabled style={{width:\"600px\"}}></textarea></Form.Label>\r\n\r\n                 \r\n\r\n                    <Button style={{width:'10%',margin: '10px 10px 10px 10px',float:'right'}} size=\"sm\" variant=\"danger\"\r\n                    onClick={()=>{this.DeleteEssay(question)}}  >Delete</ Button>\r\n                    <Button style={{width:'10%',margin: '10px 10px 10px 10px',float:'right'}} href={href1} size=\"sm\" variant=\"primary\" >Edit</ Button>\r\n\r\n                </div>\r\n                )\r\n            }\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {EssayHead}\r\n                {Essay}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewEditEssay;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Exam.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\n\r\nclass ViewEditTF extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[]};\r\n        this.GetTF()\r\n          \r\n    }\r\n\r\n    GetTF()\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/GetTF/'+examname+'/'+1)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \r\n            ILOList:data.ILOList, GradeList:data.GradeList}));\r\n        \r\n    }\r\n\r\n    DeleteTF(Question)\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/DeleteTF/'+examname+'/'+Question)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({Deleted : data.Deleted}));\r\n        window.location.reload(false);\r\n    }\r\n\r\n    render() {\r\n        var ExamTF = this.state.QuestionList;\r\n\r\n        var TFHead = \"\";\r\n        var TF = \"\";\r\n        if (ExamTF.length != 0) {\r\n            TFHead = <div><Form.Label  ><b>True or False:</b></Form.Label> <br /></div>;\r\n            TF = ExamTF.map((Question, index) => {\r\n                var question = ExamTF[index]\r\n                var exam = this.props.passedname\r\n                const href1 = `/#/instructor-edit-tf?${new URLSearchParams({ exam, question }).toString()}`;\r\n                return (\r\n                    <div>\r\n                        <Row>\r\n                            <Form.Label style={{width:'50%',margin: '15px 15px 15px 15px'}}> ILO:{this.state.ILOList[index]}  </Form.Label>\r\n                            <Form.Label style={{width:'40%',margin: '15px 15px 15px 15px'}}> Grade:{this.state.GradeList[index]} </Form.Label>\r\n                        </Row>\r\n                        <Form.Label  >Question {index + 1}: {ExamTF[index]}  </Form.Label>\r\n                        \r\n                        <Form.Label style={{float:\"left\", paddingRight:\"6px\"}}><input type=\"radio\" name={index} value=\"False\" disabled/>T </Form.Label> \r\n                        <Form.Label style={{ float: \"left\" ,paddingRight:\"6px\"  }}><input type=\"radio\" name={index} value=\"True\" disabled />F </Form.Label>\r\n                   \r\n                        <Button style={{width:'10%',margin: '10px 10px 10px 10px',float:'right'}} size=\"sm\" variant=\"danger\"\r\n                        onClick={()=>{this.DeleteTF(question)}} >Delete</ Button>\r\n                        <Button style={{width:'10%',margin: '10px 10px 10px 10px',float:'right'}} href={href1} size=\"sm\" variant=\"primary\" >Edit</ Button>\r\n              \r\n                    </div>\r\n                )\r\n            }\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {TFHead}\r\n                {TF}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewEditTF;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Exam.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\n\r\nclass ViewEditComplete extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[], Deleted:null};\r\n        this.GetComplete()\r\n        \r\n          \r\n    }\r\n\r\n    GetComplete()\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/GetComplete/'+examname+'/'+1)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \r\n            ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n\r\n    DeleteComplete(Question)\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/DeleteComplete/'+examname+'/'+Question)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({Deleted : data.Deleted}));\r\n        window.location.reload(false);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        var ExamComplete = this.state.QuestionList;\r\n\r\n        var CompleteHead = \"\";\r\n        var Complete = \"\";\r\n        var i=0\r\n        if (ExamComplete.length != 0) {\r\n            CompleteHead = <div><Form.Label  ><b>Complete:</b></Form.Label> <br /></div>;\r\n            Complete = ExamComplete.map((Question, index) => {\r\n                if (index%2==0)\r\n                {\r\n                    i+=1;\r\n                    var question = ExamComplete[index]\r\n                    var exam = this.props.passedname\r\n                    const href1 = `/#/instructor-edit-complete?${new URLSearchParams({ exam, question }).toString()}`;\r\n                    return (\r\n                        <div>\r\n                            <Row>\r\n                            <Form.Label style={{width:'50%',margin: '15px 15px 15px 15px'}}> ILO:{this.state.ILOList[index]}  </Form.Label>\r\n                            <Form.Label style={{width:'40%',margin: '15px 15px 15px 15px'}}> Grade:{this.state.GradeList[index]} </Form.Label>\r\n                            </Row>\r\n                            \r\n                            <Form.Label  >Question {i}: </Form.Label> \r\n                            <Form.Label>  {ExamComplete[index]}   </Form.Label>\r\n                            <input type=\"text\" placeholder=\"Complete..\" value={this.state.CorrectAnswerList[index]} disabled style={{margin:\"6px\"}}/>\r\n\r\n                            \r\n                            \r\n\r\n                            <Button style={{width:'10%',margin: '10px 10px 10px 10px',float:'right'}} size=\"sm\" variant=\"danger\" \r\n                            onClick={()=>{this.DeleteComplete(question)}} >Delete</ Button>\r\n                            <Button style={{width:'10%',margin: '10px 10px 10px 10px',float:'right'}} href={href1} size=\"sm\" variant=\"primary\">Edit</ Button>\r\n                    \r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {CompleteHead}\r\n                {Complete}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewEditComplete;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Exam.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport ViewEditMCQ from './ViewEditMCQ.js';\r\nimport ViewEditEssay from './ViewEditEssay.js';\r\nimport ViewEditTF from './ViewEditTF.js';\r\nimport ViewEditComplete from './ViewEditComplete.js';\r\n\r\n\r\n\r\nclass ViewEditExam extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n          \r\n    }\r\n\r\n    render() {\r\n\r\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n        const name = params.get('name');\r\n\r\n        return (\r\n            <div>\r\n    \r\n        <Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\r\n            <br />\r\n        <Form>\r\n            <ViewEditMCQ passedname={name}/>\r\n            <ViewEditTF passedname={name}/>\r\n            <ViewEditComplete passedname={name}/>\r\n            <ViewEditEssay passedname={name}/>\r\n        </Form>\r\n        </Container>\r\n            </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default ViewEditExam;\r\n","import React, { Component } from 'react';\r\nimport { HashRouter as Router, Route, Link, NavLink } from 'react-router-dom';\r\nimport SignUpForm from './Pages/SignUpForm';\r\nimport SignInForm from './Pages/SignInForm';\r\nimport Homepage from './Pages/Homepage';\r\nimport InstructorHome from './Pages/InstructorHome';\r\nimport CreateExam from './Pages/CreateExam';\r\nimport FromExisting from './Pages/FromExisting';\r\nimport ViewExams from './Pages/ViewExams';\r\nimport ViewEdit from './Pages/ViewEdit';\r\nimport ViewGrade from './Pages/ViewGrade';\r\nimport EditMCQ from './Pages/EditMCQ';\r\nimport EditTF from './Pages/EditTF';\r\nimport EditComplete from './Pages/EditComplete';\r\nimport EditEssay from './Pages/EditEssay';\r\nimport TakeExam from './Pages/TakeExam';\r\nimport StudentHome from './Pages/StudentHome';\r\nimport StudentAsk from './Pages/StudentAsk';\r\nimport StudentExams from './Pages/StudentExams';\r\nimport Exam from './Pages/Exam';\r\nimport ViewEditExam from './Pages/ViewEditExam';\r\n\r\nimport './App.css';\r\nimport { Container } from '@material-ui/core';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      \r\n      <Router basename=\"/esae-frontend/\">\r\n       <Container fixed>\r\n          <Navbar fixed=\"top\" bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand href=\"#home\">E.S.A.E</Navbar.Brand>\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link href=\"#home\">Home</Nav.Link>\r\n\r\n        </Nav>\r\n        <Form inline>\r\n          <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n          <Button variant=\"outline-info\">Search</Button>\r\n        </Form>\r\n      </Navbar>\r\n       </Container>\r\n              <Route exact path=\"/home\" component={Homepage}>\r\n              </Route>\r\n              <Route exact path=\"/\" component={Homepage}>\r\n              </Route>\r\n              <Route path=\"/sign-up\" component={SignUpForm}>\r\n              </Route>\r\n              <Route path=\"/sign-in\" component={SignInForm}>\r\n              </Route>\r\n              <Route path=\"/instructor-home\" component={InstructorHome}>\r\n              </Route>\r\n              <Route path=\"/instructor-create\" component={CreateExam}>\r\n              </Route>\r\n\t\t\t        <Route path=\"/instructor-from-exist\" component={FromExisting}>\r\n              </Route>\r\n              <Route path=\"/instructor-view-all\" component={ViewExams}>\r\n              </Route>\r\n\t\t\t        <Route path=\"/instructor-view-edit\" component={ViewEdit}>\r\n              </Route>\r\n              <Route path=\"/instructor-view-grade\" component={ ViewGrade}>\r\n              </Route>\r\n              <Route path=\"/instructor-view-edit-exam\" component={ViewEditExam}>\r\n              </Route>\r\n              <Route path=\"/instructor-exam\" component={Exam}>\r\n              </Route>\r\n\t\t\t        <Route path=\"/instructor-edit-mcq\" component={EditMCQ}>\r\n              </Route>\r\n              <Route path=\"/instructor-edit-tf\" component={EditTF}>\r\n              </Route>\r\n              <Route path=\"/instructor-edit-complete\" component={EditComplete}>\r\n              </Route>\r\n              <Route path=\"/instructor-edit-essay\" component={EditEssay}>\r\n              </Route>\r\n\t\t\t  \r\n              <Route path=\"/student-home\" component={StudentHome}>\r\n              </Route>\r\n              <Route path=\"/student-ask\" component={StudentAsk}>\r\n              </Route>\r\n              <Route path=\"/student-view-all\" component={StudentExams}>\r\n              </Route>\r\n              <Route path=\"/student-take-exam\" component={TakeExam}>\r\n              </Route>\r\n    \r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"media/student.d3b74d64.png\";"],"sourceRoot":""}