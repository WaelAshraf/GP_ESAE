{"version":3,"sources":["Pages/student.png","Pages/instructor.png","Pages/SignUpForm.js","Pages/SignInForm.js","Pages/Homepage.js","Pages/InstructorHome.js","Pages/CreateExam.js","Pages/FromExisting.js","Pages/ViewExams.js","Pages/ViewEdit.js","Pages/ViewGrade.js","Pages/EditMCQ.js","Pages/EditTF.js","Pages/EditComplete.js","Pages/EditEssay.js","Pages/TakeMCQ.js","Pages/TakeEssay.js","Pages/TakeTF.js","Pages/TakeComplete.js","Pages/TakeExam.js","Pages/StudentHome.js","Pages/StudentAsk.js","Pages/StudentExams.js","Pages/ExamMCQ.js","Pages/ExamEssay.js","Pages/ExamTF.js","Pages/ExamComplete.js","Pages/Exam.js","Pages/ViewEditMCQ.js","Pages/ViewEditEssay.js","Pages/ViewEditTF.js","Pages/ViewEditComplete.js","Pages/ViewEditExam.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SignUpForm","props","state","value","SignUpResult","Identity","UserName","Name","Password","fetch","then","response","json","this","setState","SignIn","params","URLSearchParams","window","location","hash","split","get","Authenticate","document","getElementById","style","display","alert","instructor_in","instructor","toString","student_in","student","name","href1","class","id","Modal","Dialog","Header","Title","Body","Footer","Button","variant","onClick","event","href","className","type","placeholder","defaultValue","SignUpStudentInstructor","Component","SignInForm","SignInResult","ID","IDToken","instructor_up","student_up","home","username","SignInStudentInstructor","Homepage","Container","Row","justifyContent","Col","flexGrow","Card","bg","width","Img","src","require","textAlign","Text","size","InstructorHome","fullname","GetName","data","handleCreate","CreateExam","answer","MCQreturn","Completereturn","TFreturn","Essayreturn","finished","ExamTitleBOX","ExamMCQCounter","ExamMCQQuestions","ExamMCQChoices","ExamComplete","ExamTF","ExamEssay","handleChange","bind","handleSubmit","target","ExamTitle","Question","Answers","CorrectAns","Grade","ILO","handleFinishQuestion","IDToken1","MCQReturn","Question1","Question2","Answer","CompleteReturn","TFReturn","EssayReturn","ChoiceCounter","x","createElement","setAttribute","innerHTML","appendChild","y","innerText","z","removeChild","push","i","textContent","reset","$","empty","FinishQuestionAlert","Alert","key","hideAlert","float","handleFinishExam","Form","Group","controlId","Control","handleConfirm","height","backgroundColor","overflow","Label","as","margin","onChange","hidden","handleAddChoice","handleDeleteChoice","SubmitMCQ","SubmitComplete","SubmitTrueFalse","SubmitEssay","FromExisting","Mixreturn","QuestionList","CounterList","AnswerList","CorrectAnswerList","ILOList","GradeList","GetILO","ILO_List","InstructorID","QuestionType","Number","MixQues","closeButton","handleTopic","map","fbb","handleType","required","MixQuestion","ViewExams","Exams","ans","names","nameslist","ListGroup","Item","action","ViewEdit","Deleted","FetchDelete","reload","disabled","DeleteExam","ViewGrade","Grades","GetExams","GradeExam","showProgress","Spinner","animation","role","EditMCQ","CorrectAnswer","IsUpdated","OldQuestion","Autofill","exam","question","NewQuestion","NewAnswers","NewCorrectAns","NewILO","NewGrade","Updated","GetMCQInfo","UpdateMCQ","EditTF","GetTFInfo","UpdateTrueFalse","EditComplete","OldQuestion1","OldQuestion2","NewQuestion1","NewQuestion2","GetCompleteInfo","UpdateComplete","EditEssay","GetEssayInfo","UpdateEssay","TakeMCQ","GetMCQ","MCQQuestions","MCQAnswers","examname","passedname","ansGroup","length","val","r","MCQHead","choicesNumber","choice","index","TakeEssay","GetEssay","EssayQuestions","EssayAnswers","EssayCount","EssayHead","Essay","answerid","TakeTF","GetTF","TFQuestions","TFAnswers","TFHead","TF","paddingRight","TakeComplete","GetComplete","CompleteQuestions","CompleteAnswers","CompleteCount","CompleteHead","Complete","TakeExam","Submit","MCQList","CompleteList","TFList","EssayList","e","successful","handleSubmitAnswers","SubmitStudentExam","StudentHome","StudentName","StudentAsk","StudentExams","ExamMCQ","inline","Exam","ViewEditMCQ","MCQCounter","MCQChoices","DeleteMCQ","ViewEditEssay","DeleteEssay","ViewEditTF","DeleteTF","ViewEditComplete","DeleteComplete","ViewEditExam","App","basename","fixed","Navbar","Brand","Nav","Link","FormControl","exact","path","component","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"js/main.27aa3bd8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"media/student.d3b74d64.png\";","module.exports = __webpack_public_path__ + \"media/instructor.9bef3f3f.png\";","import React, { Component } from 'react';\r\nimport { HashRouter as Router, Route, Link, NavLink } from 'react-router-dom';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\n\r\nclass SignUpForm extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {value: '', SignUpResult:null};\r\n\r\n    }\r\n\r\n    async Authenticate(Identity, UserName, Name, Password)\r\n    {\r\n      const response = await fetch('/SignUpStudentInstructor/'+Identity+'/'+UserName+'/'+Name+'/'+Password).then(response => response.json());\r\n      this.setState({SignUpResult:response.SignIn});\r\n    }\r\n    async SignUpStudentInstructor(UserName, Name, Password)\r\n    {\r\n      var Identity = 0\r\n      const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n      if(params.get('student'))\r\n      {\r\n        Identity='student'\r\n      }\r\n      else if (params.get('instructor'))\r\n      {\r\n        Identity='instructor'\r\n      }\r\n      await this.Authenticate(Identity, UserName, Name, Password)\r\n      if (this.state.SignUpResult == \"Added successfully\")\r\n      {\r\n        document.getElementById('SignupFinish').style.display='block';\r\n      }\r\n      else if (this.state.SignUpResult == \"Error\")\r\n      {\r\n        alert(\"Unsuccessful process, please try again. \")\r\n      }\r\n      \r\n    }\r\n\r\n\r\n    render() {\r\n      const instructor=\"instructor\";\r\n      const student=\"student\";\r\n      const instructor_in = `/#/sign-in?${new URLSearchParams({instructor}).toString()}`;\r\n      const student_in = `/#/sign-in?${new URLSearchParams({student}).toString()}`;\r\n      const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n      var name = \"\";\r\n      if(params.get('student'))\r\n      {\r\n        name=params.get('student')\r\n        \r\n      }\r\n      else if (params.get('instructor'))\r\n      {\r\n        name=params.get('instructor')\r\n        \r\n      }\r\n      var href1=\"\";\r\n      if (name==\"student\")\r\n      {\r\n        href1=student_in;\r\n      }\r\n      else if (name==\"instructor\")\r\n      {\r\n        href1=instructor_in\r\n      }\r\n      else\r\n      {\r\n        href1=\"#/sign-in\";\r\n      }\r\n        return (\r\n          <div>\r\n\r\n            <div style={{display:'none'}} class=\"modal-custom\" id=\"SignupFinish\">\r\n            <Modal.Dialog  >\r\n                <Modal.Header >\r\n                <Modal.Title>Sign Up Process</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                  Welcome {window.Name}, you have successfully signed up, now please login with your credentials\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button variant=\"primary\" onClick={event =>  window.location.href='#/'} >Ok</Button>\r\n              </Modal.Footer>\r\n            </Modal.Dialog>\r\n            </div>\r\n\r\n\r\n            <form className=\"signin-forum-container\">\r\n              <h1>Sign Up</h1><br />\r\n              <input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Name\" /><br />\r\n              <input type=\"text\" name=\"username\" id=\"username\" placeholder=\"User Name [must be unique]\" /><br />\r\n              <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" /><br />\r\n              \r\n              <input type=\"submit\" defaultValue=\"Sign Up\" \r\n              onClick={()=>{this.SignUpStudentInstructor(document.getElementById('username').value, document.getElementById('name').value,\r\n              document.getElementById('password').value)}} /><br />\r\n              <a href={href1}>Already a member? Sign in now!</a>\r\n            </form>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignUpForm;\r\n","import React, { Component } from 'react';\r\nimport { HashRouter as Router, Route, Link, NavLink } from 'react-router-dom';\r\nimport './signin.css';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nclass SignInForm extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {value: '', SignInResult:null, Name:null, ID:null};\r\n      window.IDToken=[];\r\n\r\n    }\r\n\r\n    async Authenticate(Identity, UserName, Password)\r\n    {\r\n      const response = await fetch('/SignInStudentInstructor/'+Identity+'/'+UserName+'/'+Password).then(response => response.json());\r\n      this.setState({SignInResult:response.SignIn, ID:response.ID});\r\n    }\r\n    async SignInStudentInstructor(UserName, Password)\r\n    {\r\n      this.state.Name=UserName;\r\n      var Identity = 0\r\n      const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n      if(params.get('student'))\r\n      {\r\n        Identity='student'\r\n      }\r\n      else if (params.get('instructor'))\r\n      {\r\n        Identity='instructor'\r\n      }\r\n      await this.Authenticate(Identity, UserName, Password)\r\n      window.IDToken = this.state.ID\r\n      if (this.state.SignInResult == \"Found\")\r\n      {\r\n        document.getElementById('SigninFinish').style.display='block';\r\n        \r\n      }\r\n      else if (this.state.SignInResult == \"Error\")\r\n      {\r\n        alert(\"Invalid credentials\")\r\n      }\r\n      \r\n      \r\n    }\r\n\r\n    RouteAfterSignIn()\r\n    {\r\n\r\n    }\r\n    render() {\r\n      const instructor=\"instructor\";\r\n      const student=\"student\";\r\n      const instructor_up = `/#/sign-up?${new URLSearchParams({instructor}).toString()}`;\r\n      const student_up = `/#/sign-up?${new URLSearchParams({student}).toString()}`;\r\n      const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n      var name = \"\";\r\n      var home = \"\";\r\n      if(params.get('student'))\r\n      {\r\n        name=params.get('student')\r\n        window.Name=this.state.Name\r\n        var username=this.state.Name\r\n        //alert(username)\r\n        home = `#/student-home?${new URLSearchParams({username}).toString()}`;\r\n      }\r\n      else if (params.get('instructor'))\r\n      {\r\n        name=params.get('instructor')\r\n        window.Name=this.state.Name\r\n        var username=this.state.Name\r\n        home = `#/instructor-home?${new URLSearchParams({username}).toString()}`;\r\n        \r\n      }\r\n      var href1=\"\";\r\n      if (name==\"student\")\r\n      {\r\n        href1=student_up;\r\n      }\r\n      else if (name==\"instructor\")\r\n      {\r\n        href1=instructor_up\r\n      }\r\n      else\r\n      {\r\n        href1=\"#/sign-up\";\r\n      }\r\n        return (\r\n          <div>\r\n            <div style={{display:'none'}} class=\"modal-custom\" id=\"SigninFinish\">\r\n            <Modal.Dialog  >\r\n                <Modal.Header >\r\n                <Modal.Title>Authentication</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                  Welcome {window.Name} you have been successfully authenticated\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button variant=\"primary\" onClick={event =>  window.location.href=home} >Ok</Button>\r\n              </Modal.Footer>\r\n            </Modal.Dialog>\r\n            </div>\r\n            <form className=\"signin-forum-container\" >\r\n            <h1>Sign In</h1><br />\r\n            <input type=\"text\" name=\"username\" id=\"username\" placeholder=\"User Name\" /><br />\r\n            <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" /><br />\r\n            <a href=\"#\">Forgot Your Password?</a><br />\r\n            <input type=\"submit\" defaultValue=\"Sign In\" \r\n            onClick={()=>{this.SignInStudentInstructor(document.getElementById('username').value, document.getElementById('password').value)}} /><br />\r\n            <a href={href1}>Not a member? Sign up now!</a>\r\n          </form>\r\n          </div>\r\n          \r\n        );\r\n    }\r\n}\r\n\r\nexport default SignInForm;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './homestyle.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nclass Homepage extends Component {\r\n  \r\n    render() {\r\n        const instructor=\"instructor\";\r\n        const student=\"student\";\r\n        const instructor_up = `/#/sign-up?${new URLSearchParams({instructor}).toString()}`;\r\n        const student_up = `/#/sign-up?${new URLSearchParams({student}).toString()}`;\r\n        const instructor_in = `/#/sign-in?${new URLSearchParams({instructor}).toString()}`;\r\n        const student_in = `/#/sign-in?${new URLSearchParams({student}).toString()}`;\r\n        return (\r\n        <div>\r\n <h1>Welcome to Exam Solver and Evaluator</h1>\r\n           <br />\r\n           <Container>\r\n            <Row style={{ justifyContent:'space-evenly'}}>\r\n                <Col style={{flexGrow:'unset'}}  >\r\n                <Card bg=\"light\" style={{ width: '13rem' }}>\r\n            <Card.Img variant=\"top\" src={require('./student.png')} />\r\n            <Card.Body style={{ textAlign:'center'}}>\r\n                <Card.Title>I'm a Student</Card.Title>\r\n                <Card.Text>\r\n                Now you can Get Question's Answers and Take Exams with One Click\r\n                </Card.Text>\r\n                \r\n                <Button href={student_up} size=\"lg\" variant=\"success\">Join Now!</Button>\r\n                <Button href={student_in} size=\"lg\" variant=\"primary\">Sign in!</Button>\r\n            </Card.Body>\r\n            </Card></Col>\r\n                <Col style={{flexGrow:'unset'}} ><Card bg=\"light\" style={{ width: '13rem' }}>\r\n            <Card.Img variant=\"top\" src={require('./instructor.png')} />\r\n            <Card.Body style={{ textAlign:'center'}}>\r\n                <Card.Title>I'm an Instructor</Card.Title>\r\n                <Card.Text>\r\n                Now you Form your Exam and Evaluate it with One Click\r\n                </Card.Text>\r\n                <Button href={instructor_up} size=\"lg\" variant=\"danger\">Join Now!</Button>\r\n                <Button href={instructor_in} size=\"lg\" variant=\"primary\">Sign in!</Button>\r\n            </Card.Body>\r\n            </Card></Col>\r\n            </Row>\r\n\r\n        </Container>\r\n        \r\n        \r\n\r\n            \r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Homepage;\r\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './InstructorHome.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nclass InstructorHome extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {value: '', fullname:null, id:null};\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n        const username=params.get('username')\n        this.GetName(username)\n        //alert(window.IDToken)\n  \n    }\n\n    GetName(username)\n    {\n      fetch('/GetInstName/'+username)\n        .then(response => response.json())\n        .then(data => this.setState({fullname : data.name, id:data.id}));\n    }\n\n    handleCreate()\n    {\n        if (document.getElementById('BtnNew').style.display=='block'||document.getElementById('BtnExist').style.display=='block')\n        {\n            document.getElementById('BtnNew').style.display='none';\n            document.getElementById('BtnExist').style.display='none';\n        }\n        else\n        {\n            document.getElementById('BtnNew').style.display='block';\n            document.getElementById('BtnExist').style.display='block';\n        }\n    }   \n\n    render() {\n        return (\n        <div>\n          \n          <h1>Welcome {this.state.fullname}</h1>\n    <br />\n    <Container>\n     <Row style={{ justifyContent:'space-evenly'}}>\n         <Col ><Button onClick={this.handleCreate} size=\"lg\"variant=\"primary\">Create Exam</Button></Col>\n        <Col  ><Button href=\"#/instructor-view-all\" size=\"lg\" variant=\"primary\">View Exams</Button></Col>\n         <Col  ><Button href=\"#/instructor-view-edit\" size=\"lg\"variant=\"primary\">Edit Exam</Button></Col>\n         <Col  ><Button href=\"#/instructor-view-grade\" size=\"lg\"variant=\"primary\">Grade Exam</Button></Col>\n     </Row>\n     <Row style={{width:'17%'}}>\n        \n         <Col ><Button id=\"BtnNew\"style={{display:'none'}} href=\"#/instructor-create\" size=\"sm\"variant=\"primary\">New Exam</Button></Col>\n       \n     </Row>\n     <Row style={{width:'17%'}}>\n        \n        <Col ><Button id=\"BtnExist\" style={{display:'none'}} href=\"#/instructor-from-exist\" size=\"sm\"variant=\"primary\">From Existing Exams</Button></Col>\n    </Row>\n\n\n </Container>\n            \n          </div>\n        );\n    }\n}\n\nexport default InstructorHome;\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\nimport './CreateExam.css';\r\nimport './Popup.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport $ from 'jquery'; \r\nimport Alert from 'react-bootstrap/Alert'\r\nimport Overlay from 'react-bootstrap/Overlay'\r\nimport Popover from 'react-bootstrap/Popover'\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\n\r\nclass CreateExam extends Component {\r\n  \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '',answer:null, MCQreturn:null,Completereturn:null, TFreturn:null, Essayreturn:null,finished:false};\r\n        window.ExamTitleBOX=[];\r\n        window.ExamMCQCounter=[];\r\n        window.ExamMCQQuestions=[];\r\n        window.ExamMCQChoices=[];\r\n        window.ExamComplete=[];\r\n        window.ExamTF=[];\r\n        window.ExamEssay=[];\r\n        alert(window.IDToken)\r\n   \r\n        \r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n  \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n      }\r\n      handleChange (event) {\r\n        this.setState({value: event.target.value});\r\n      }\r\n      SubmitMCQ(ExamTitle,Question,Answers,CorrectAns,Grade,ILO)\r\n      {\r\n        this.handleFinishQuestion()\r\n        // console.log(\"Question\",question)\r\n        fetch('/AddMCQ/'+ExamTitle+'/'+window.IDToken1+'/'+Question+'/'+Answers+'/'+CorrectAns+'/'+Grade+'/'+ILO)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({MCQreturn : data.MCQReturn}));\r\n      }\r\n     \r\n      SubmitComplete(ExamTitle,Question1,Question2,Answer,Grade,ILO)\r\n      {\r\n        this.handleFinishQuestion()\r\n        // console.log(\"Question\",question)\r\n        fetch('/AddComplete/'+ExamTitle+'/'+window.IDToken1+'/'+Question1+'/'+Question2+'/'+Answer+'/'+Grade+'/'+ILO)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({Completereturn : data.CompleteReturn}));\r\n      }\r\n\r\n      SubmitTrueFalse(ExamTitle, Question,Answer,Grade,ILO)\r\n      {\r\n        alert(window.IDToken1)\r\n        this.handleFinishQuestion()\r\n        // console.log(\"Question\",question)\r\n        fetch('/AddTrueFalse/'+ExamTitle+'/'+window.IDToken1+'/'+Question+'/'+Answer+'/'+Grade+'/'+ILO)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({TFreturn : data.TFReturn}));\r\n      }\r\n\r\n      SubmitEssay(ExamTitle, Question,Answer,Grade,ILO)\r\n      {\r\n        this.handleFinishQuestion()\r\n        // console.log(\"Question\",question)\r\n        fetch('/AddEssay/'+ExamTitle+'/'+window.IDToken1+'/'+Question+'/'+Answer+'/'+Grade+'/'+ILO)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({Essayreturn : data.EssayReturn}));\r\n      }\r\n\r\n      handleSubmit(event)\r\n      {\r\n        this.setState({finished: false});\r\n        if (this.state.value=='MCQ')\r\n        {\r\n            document.getElementById('formExamMCQ').style.display='block';\r\n            document.getElementById('formExamComplete').style.display='none';\r\n            document.getElementById('formExamTF').style.display='none';\r\n            document.getElementById('formExamEssay').style.display='none';\r\n           \r\n            window.ChoiceCounter=0;\r\n            \r\n        }\r\n      else  if (this.state.value=='Complete')\r\n        {\r\n            document.getElementById('formExamComplete').style.display='block';\r\n            document.getElementById('formExamMCQ').style.display='none';\r\n            document.getElementById('formExamTF').style.display='none';\r\n            document.getElementById('formExamEssay').style.display='none';\r\n         \r\n        }\r\n       else if (this.state.value=='T and F')\r\n        {\r\n          document.getElementById('formExamTF').style.display='block';\r\n            document.getElementById('formExamComplete').style.display='none';\r\n            document.getElementById('formExamMCQ').style.display='none';\r\n            document.getElementById('formExamEssay').style.display='none';\r\n           \r\n        }\r\n       else if (this.state.value=='Essay Question')\r\n        {\r\n          document.getElementById('formExamEssay').style.display='block';\r\n          document.getElementById('formExamTF').style.display='none';\r\n            document.getElementById('formExamComplete').style.display='none';\r\n            document.getElementById('formExamMCQ').style.display='none';\r\n          \r\n        }\r\n        else\r\n        {\r\n          document.getElementById('formExamMCQ').style.display='none';\r\n          document.getElementById('formExamComplete').style.display='none';\r\n          document.getElementById('formExamTF').style.display='none';\r\n          document.getElementById('formExamEssay').style.display='none';\r\n        \r\n        }\r\n           \r\n      }\r\n      handleAddChoice()\r\n      { \r\n        \r\n        var x = document.createElement(\"div\");\r\n        x.setAttribute(\"class\", \"form-check form-check-inline\");\r\n        x.setAttribute(\"id\",\"choice\"+window.ChoiceCounter);\r\n        x.innerHTML='<input type=\"radio\" disabled class=\"form-check-input\">'+\r\n        '<label title for=\"formExamMCQ\" id= \"'+\"choice\"+window.ChoiceCounter+'\" class=\"form-check-label\">'+ document.getElementById('formChoiceTextbox').value+'</label>';\r\n        document.getElementById('ChoicesDiv').appendChild(x);\r\n        \r\n        var y=document.createElement(\"option\");\r\n        y.innerText=document.getElementById('formChoiceTextbox').value;\r\n        y.setAttribute(\"id\",\"option\"+window.ChoiceCounter);\r\n        document.getElementById('ChoiceModelAns').appendChild(y);\r\n        document.getElementById('formChoiceTextbox').value='';\r\n        window.ChoiceCounter++;\r\n      }\r\n      handleDeleteChoice()\r\n      {\r\n        window.ChoiceCounter--;\r\n        var y=document.getElementById('choice'+window.ChoiceCounter);\r\n        var z=document.getElementById('option'+window.ChoiceCounter);\r\n        document.getElementById('ChoicesDiv').removeChild(y);\r\n        document.getElementById('ChoiceModelAns').removeChild(z);\r\n      }\r\n\r\n      handleFinishQuestion()\r\n      {\r\n        if (document.getElementById('QuestionType').value=='MCQ')\r\n        {\r\n          window.ExamMCQQuestions.push(document.getElementById('TextMCQuestion').value);\r\n          window.ExamMCQCounter.push(window.ChoiceCounter);\r\n          for(var i=0;i<window.ChoiceCounter;i++)\r\n          {\r\n            \r\n            window.ExamMCQChoices.push(document.getElementById('choice'+i).textContent)\r\n          }\r\n\r\n\r\n        }\r\n        if (document.getElementById('QuestionType').value=='Complete')\r\n        {\r\n          \r\n\r\n          window.ExamComplete.push(document.getElementById('TextComplete1').value)\r\n          window.ExamComplete.push(document.getElementById('TextComplete2').value)\r\n      \r\n        }\r\n        if (document.getElementById('QuestionType').value=='T and F')\r\n        {\r\n          window.ExamTF.push(document.getElementById('TextTF').value)\r\n        }\r\n        if (document.getElementById('QuestionType').value=='Essay Question')\r\n        {\r\n          window.ExamEssay.push(document.getElementById('TextEssay').value)\r\n        }\r\n        document.getElementById(\"ExamForm\").reset();\r\n        $(\"#ChoiceModelAns\").empty();\r\n        $(\"#ChoicesDiv\").empty();\r\n        var y=document.createElement(\"option\");\r\n        y.innerText=\"Choose Model Answer\"\r\n        document.getElementById('ChoiceModelAns').appendChild(y);\r\n        document.getElementById('formExamMCQ').style.display='none';\r\n          document.getElementById('formExamComplete').style.display='none';\r\n          document.getElementById('formExamTF').style.display='none';\r\n          document.getElementById('formExamEssay').style.display='none';\r\n    \r\n          this.setState({finished: true});\r\n         \r\n      }\r\n     \r\n      handleFinishExam()\r\n      {\r\n        \r\n        window.ExamTitle.push(document.getElementById('TextExamTitle').value);\r\n        document.getElementById('ExamFinishBox').style.display='block';\r\n        \r\n      }\r\n      handleConfirm()\r\n      {\r\n          \r\n          if (document.getElementById('TextExamTitle').value==\"\")\r\n          {\r\n              alert(\"You Must Enter an Exam Title First !\")\r\n          }\r\n          else\r\n          {\r\n              window.ExamTitleBOX=document.getElementById('TextExamTitle').value\r\n              document.getElementById('ExamtitleBox').style.display='none';\r\n          }\r\n          \r\n      }\r\n      hideAlert(){\r\n        document.getElementById(\"FinishQuestionAlert\").style.display=\"none\";\r\n      }\r\n    render() {\r\n      var FinishQuestionAlert = \"\";\r\n      if (this.state.finished==true)\r\n      {\r\n        FinishQuestionAlert = <div id=\"FinishQuestionAlert\"> <Alert  key=\"FinishQuestionAlert\" variant='success'>Successfully Added Question to Exam<div className=\"d-flex justify-content-end\">\r\n        <Button onClick={this.hideAlert} variant=\"outline-success\">\r\n          Close \r\n        </Button>\r\n        </div></Alert>\r\n        <Button style={{ float:'right'}}onClick={this.handleFinishExam}   variant=\"success\" >Finish Exam</Button>\r\n        </div>;\r\n        \r\n      }\r\n      else\r\n      {\r\n        FinishQuestionAlert =\"\";\r\n      }\r\n        return (\r\n        <div>\r\n          <div style={{display:'none'}} class=\"modal-custom\" id=\"ExamFinishBox\">\r\n          <Modal.Dialog  >\r\n              <Modal.Header >\r\n              <Modal.Title>Exam Alert</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                Exam \"{window.ExamTitleBOX}\" Created Successfully\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"primary\" onClick={event =>  window.location.href='#/instructor-home'} >Ok</Button>\r\n            </Modal.Footer>\r\n          </Modal.Dialog>\r\n          </div>\r\n          <div class=\"modal-custom\" id=\"ExamtitleBox\">\r\n          <Modal.Dialog  >\r\n              <Modal.Header >\r\n              <Modal.Title>Exam title</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <Form.Group controlId=\"formExamTitle\">\r\n                <Form.Control type=\"text\" id='TextExamTitle' placeholder=\"Enter Exam Title\" />\r\n                <Form.Text className=\"text-muted\">\r\n                Ex: Marketing Midterm Spring 2020\r\n                </Form.Text>\r\n                </Form.Group>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"primary\" onClick={this.handleConfirm} >Confirm</Button>\r\n            </Modal.Footer>\r\n          </Modal.Dialog>\r\n          </div>\r\n              \r\n    <Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\r\n        <br />\r\n    <Form id=\"ExamForm\" style={{backgroundColor:'white'}}>\r\n  <Form.Group controlId=\"formQuestionType\">\r\n    <Form.Label>Question Type</Form.Label>\r\n    <Row>\r\n    <Form.Control id=\"QuestionType\" as=\"select\" style={{width:'35%',margin: '15px 15px 15px 15px'}} value={this.state.value} onChange={this.handleChange} placeholder=\"Choose Question Type\">\r\n    <option>Choose Question Type</option>\r\n    <option>MCQ</option>\r\n    <option>Complete</option>\r\n    <option>T and F</option>\r\n    <option>Essay Question</option>\r\n    <option hidden>Comparison</option>\r\n    </Form.Control>\r\n    <Button variant=\"primary\" id=\"QuestionTypeBtn\" onClick={this.handleSubmit} type=\"submit\">Submit</Button>\r\n   \r\n\r\n    </Row>\r\n    <Form.Text className=\"text-muted\">\r\n      Note: You can change Question Type at anytime from above\r\n    </Form.Text>\r\n\r\n    {FinishQuestionAlert}\r\n\r\n  </Form.Group>\r\n  \r\n  <Form.Group  style={{display:'none'}} id=\"formExamMCQ\" controlId=\"formExamMCQ\">\r\n \r\n    <Form.Label>Multiple Choice Question</Form.Label>\r\n    <Row>\r\n    <Form.Control id=\"MCQILO\"  size=\"sm\" type=\"text\" style={{width:'50%',margin: '15px 15px 15px 15px'}} placeholder=\"Enter Question ILO\"></Form.Control>\r\n  <Form.Control   id=\"MCQGrade\" size=\"sm\" style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\" placeholder=\"Enter Your Grade\" />\r\n   \r\n   </Row>\r\n    <Form.Control size=\"sm\" id=\"TextMCQuestion\" type=\"text\" placeholder=\"Enter Your Question\" />\r\n    <br />\r\n    <Form.Control  size=\"sm\" id=\"formChoiceTextbox\" type=\"text\" placeholder=\"Enter a Choice\" />\r\n    <Button  size=\"sm\" variant=\"primary\" onClick={this.handleAddChoice}>Add Choice</Button>\r\n    <Button id=\"btnDeleteChoice\"  size=\"sm\" variant=\"danger\" onClick={this.handleDeleteChoice}>Delete Choice</Button>\r\n    <div id=\"ChoicesDiv\"></div>\r\n    <Form.Control size=\"sm\" as=\"select\" id=\"ChoiceModelAns\" placeholder=\"Choose Model Answer\">\r\n    <option>Choose Model Answer</option>\r\n    </Form.Control>\r\n    <Button style={{ float:'right'}} variant=\"success\" onClick={()=>{this.SubmitMCQ(window.ExamTitleBOX, document.getElementById('TextMCQuestion').value, window.ExamMCQChoices, \r\n      document.getElementById('ChoiceModelAns').value, document.getElementById('MCQGrade').value,document.getElementById('MCQILO').value)\r\n      }}>Finish Question</Button>\r\n  </Form.Group>\r\n\r\n\r\n  <Form.Group style={{display:'none'}} id=\"formExamComplete\" controlId=\"formExamComplete\">\r\n   \r\n    <Form.Label>Complete Question</Form.Label>\r\n    <Row>\r\n    <Form.Control id=\"CompILO\"  size=\"sm\" type=\"text\" style={{width:'50%',margin: '15px 15px 15px 15px'}} placeholder=\"Enter Question ILO\"></Form.Control>\r\n  <Form.Control id=\"CompGrade\" size=\"sm\" style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\" placeholder=\"Enter Your Grade\" />\r\n   \r\n   </Row>\r\n    <Form.Control size=\"sm\" id=\"TextComplete1\" type=\"text\" placeholder=\"Enter Your 1st part of the Question *before the space*\" />\r\n    <Form.Control size=\"sm\"id=\"TextComplete2\" type=\"text\" placeholder=\"Enter Your 2nd part of the Question *after the space*\" />\r\n    <br />\r\n    <Form.Control size=\"sm\" id=\"AnswerComplete\" type=\"text\" placeholder=\"Enter Your Model Answer *the space*\" />\r\n    <Button style={{ float:'right'}}variant=\"success\"onClick={()=>{this.SubmitComplete(window.ExamTitleBOX,document.getElementById('TextComplete1').value, document.getElementById('TextComplete2').value, \r\n      document.getElementById('AnswerComplete').value, document.getElementById('CompGrade').value, document.getElementById('CompILO').value)}} >Finish Question</Button>\r\n    \r\n  </Form.Group>\r\n\r\n\r\n  <Form.Group style={{display:'none'}} id=\"formExamTF\" controlId=\"formExamTF\">\r\n    <Form.Label>True and False Question</Form.Label>\r\n    <Row>\r\n    <Form.Control id=\"TFIlo\"  size=\"sm\" type=\"text\" style={{width:'50%',margin: '15px 15px 15px 15px'}} placeholder=\"Enter Question ILO\"></Form.Control>\r\n   <Form.Control id=\"TFGrade\" size=\"sm\" style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\" placeholder=\"Enter Your Grade\" />\r\n   \r\n   </Row>\r\n    <Form.Control size=\"sm\" id=\"TextTF\" type=\"text\" placeholder=\"Enter Your Question\" />\r\n      <br />\r\n      <Form.Control size=\"sm\" as=\"select\" id=\"TFModelAns\" placeholder=\"Choose Model Answer\">\r\n    <option>Choose Model Answer</option>\r\n    <option>True</option>\r\n    <option>False</option>\r\n    </Form.Control>\r\n    <Button style={{ float:'right'}} variant=\"success\" \r\n    onClick={ ()=>{this.SubmitTrueFalse(window.ExamTitleBOX,document.getElementById('TextTF').value , \r\n    document.getElementById('TFModelAns').value, document.getElementById('TFGrade').value, document.getElementById('TFIlo').value)}}>Finish Question</Button>\r\n    \r\n  </Form.Group>\r\n\r\n\r\n  <Form.Group style={{display:'none'}} id=\"formExamEssay\" controlId=\"formExamEssay\">\r\n    <Form.Label>Essay Question</Form.Label>\r\n    <Row>\r\n    <Form.Control id=\"EssILO\" size=\"sm\" type=\"text\" style={{width:'50%',margin: '15px 15px 15px 15px'}} placeholder=\"Enter Question ILO\"></Form.Control>\r\n   <Form.Control id=\"EssGrade\" size=\"sm\" style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\" placeholder=\"Enter Your Grade\" />\r\n   \r\n   </Row>\r\n    <Form.Control size=\"sm\" id=\"TextEssay\" type=\"text\" placeholder=\"Enter Your Essay Question\" />\r\n   <br />\r\n    <Form.Control size=\"sm\" as=\"textarea\"id=\"AnswerEssay\" placeholder=\"Enter Your Model Answer\" />\r\n    <Button style={{ float:'right'}} variant=\"success\" \r\n    onClick={()=>{this.SubmitEssay(window.ExamTitleBOX,document.getElementById('TextEssay').value , \r\n    document.getElementById('AnswerEssay').value, document.getElementById('EssGrade').value, document.getElementById('EssILO').value)}}\r\n    >Finish Question</Button>\r\n    \r\n  </Form.Group>\r\n</Form>\r\n\r\n </Container>\r\n            \r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateExam;\r\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './CreateExam.css';\nimport './Popup.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Modal from 'react-bootstrap/Modal'\nimport ListGroup from 'react-bootstrap/ListGroup'\nclass FromExisting extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {value: '',ILO:[], Mixreturn:[], QuestionList:[], CounterList:[], AnswerList:[],\n      CorrectAnswerList:[], ILOList:[], GradeList:[]};\n      this.GetILO();    \n      \n    }\n\n    GetILO()\n    {\n      fetch('/GetILO/'+window.IDToken)\n        .then(response => response.json())\n        .then(data => this.setState({ILO : data.ILO_List}));\n    }\n    MixQuestion(ExamTitle, InstructorID, QuestionType, ILO, Number)\n    {\n      fetch('/MixQuestion/'+ExamTitle+'/'+InstructorID+'/'+QuestionType+'/'+ILO+'/'+Number)\n        .then(response => response.json())\n        .then(data => this.setState({Mixreturn : data.MixQues}));\n    }\n    handleConfirm()\n    {\n        \n        if (document.getElementById('TextExamTitle').value==\"\")\n        {\n            alert(\"You Must Enter an Exam Title First !\")\n        }\n        else\n        {\n            window.ExamTitleBOX=document.getElementById('TextExamTitle').value\n            document.getElementById('ExamtitleBox').style.display='none';\n        }\n        \n    }\n    handleTopic(){}\n    handleType(){}\n    handleAddtoExam(){}\n    handleFinishExam(){\n    \n    }\n  \n    render() {\n        return (\n        <div>\n          <div class=\"modal-custom\" id=\"ExamtitleBox\">\n          <Modal.Dialog  >\n              <Modal.Header closeButton>\n              <Modal.Title>Exam title</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <Form.Group controlId=\"formExamTitle\">\n                <Form.Control type=\"text\" id='TextExamTitle' placeholder=\"Enter Exam Title\" />\n                <Form.Text className=\"text-muted\">\n                Ex: Marketing Midterm Spring 2020\n                </Form.Text>\n                </Form.Group>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"primary\" onClick={this.handleConfirm} >Confirm</Button>\n            </Modal.Footer>\n          </Modal.Dialog>\n          </div>\n              \n    <Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\n        <br />\n    <Form style={{backgroundColor:'white'}}>\n    <Form.Label>Now you can Randomly Select Questions According to it's Topic and Type</Form.Label>\n  \n  <Form.Group controlId=\"formQuestionType\">\n    <Row>\n    <Form.Control as=\"select\" id=\"ILO\" style={{width:'50%',margin: '15px 15px 15px 15px'}} onChange={this.handleTopic} >\n    {this.state.ILO.map((fbb) => <option key={fbb.key} value={fbb.key} >{fbb}</option>)}\n    </Form.Control>\n\n\n    <Form.Control id=\"QuestionType\" as=\"select\" id=\"QuesType\" style={{width:'40%',margin: '15px 15px 15px 15px'}} onChange={this.handleType} placeholder=\"Choose Question Type\">\n    <option>Choose Question Type</option>\n    <option>MCQ</option>\n    <option>Complete</option>\n    <option>T and F</option>\n    <option>Essay</option>\n    <option hidden>Comparison</option>\n    </Form.Control>\n    </Row>\n    <Row>\n   \n    <Form.Control required id=\"Number\"  style={{width:'50%',margin: '15px 15px 15px 15px'}} type=\"number\" placeholder=\"Enter Number of Questions Needed\" />\n    <Button variant=\"primary\"style={{width:'40%',margin: '15px 15px 15px 15px'}} onClick={()=>{this.MixQuestion(window.ExamTitleBOX,\n    window.IDToken,document.getElementById('QuesType').value, document.getElementById('ILO').value, document.getElementById('Number').value)\n      }}\n       type=\"primary\">Add to Exam</Button>\n   </Row>\n\n   <Button style={{ float:'right'}} size=\"lg\" onClick={this.handleFinishExam}   variant=\"success\" >Finish Exam</Button>\n  </Form.Group>\n  \n</Form>\n\n </Container>\n            \n          </div>\n        );\n    }\n}\n\nexport default FromExisting;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './ViewExams.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup'\nclass ViewExams extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {value: '', Exams:null};\n        fetch('/ViewExams/'+window.IDToken)\n          .then(response => response.json())\n          .then(data => this.setState({Exams : data.ans}));\n          \n    }\n\n    render() {\n       //var names= window.ExamTitle;\n       var names = this.state.Exams\n       \n       //enta 3yz el list kolha wla esm w7ed bs\n       if (names==null)\n       {\n        var nameslist='No Exams Yet'\n       }\n       else\n       {\n        var nameslist= names.map(function(name){\n            const href = `/#/instructor-exam?${new URLSearchParams({ name }).toString()}`;\n            return <ListGroup.Item href={href} action>{name}</ListGroup.Item>;\n\n          })\n         \n       }\n    \n        \n       return (\n        <div>\n          \n          <h1>All Exams</h1>\n   \n    <Container style={{width:'660px',height:'550px',backgroundColor:'white', overflow:'scroll'}}>\n        <br />\n        <ListGroup style={{textAlign: 'center'}}  >{nameslist}</ListGroup>\n    </Container>\n        </div>\n        );\n    }\n}\n\nexport default ViewExams;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './ViewExams.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup'\nclass ViewEdit extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {value: '', Exams:null, Deleted:null};\n      fetch('/ViewExams/'+window.IDToken)\n        .then(response => response.json())\n        .then(data => this.setState({Exams : data.ans}));\n        \n    }\n\n    async FetchDelete(ExamTitle)\n    {\n      const response = await fetch('/DeleteExam/'+ExamTitle).then(response => response.json());\n      this.setState({Deleted:response.Deleted});\n    }\n    async DeleteExam(ExamTitle)\n    {\n      await this.FetchDelete(ExamTitle)\n      window.location.reload(false);\n    }\n\n    render() {\n       //var names=  window.ExamTitle;\n       var names = this.state.Exams\n       if (names==null)\n       {\n        var nameslist='No Exams Yet'\n       }\n       else\n       { \n   \n\n          var nameslist= names.map((name)=>{\n            const href1 = `/#/instructor-view-edit-exam?${new URLSearchParams({ name }).toString()}`;\n            return (\n                \n                <Row style={{ justifyContent:'space-evenly'}}>\n                  <ListGroup style={{textAlign: 'center',width:'70%',margin: '10px 10px 10px 10px'}} >\n                    <ListGroup.Item href=\"/#/instructor-exam\"disabled>{name}</ListGroup.Item>\n                   </ ListGroup>\n                  \n                 <Button style={{width:'10%',margin: '10px 10px 10px 10px'}} href={href1} size=\"sm\" variant=\"primary\" >Edit</ Button>\n                 <Button style={{width:'10%',margin: '10px 10px 10px 10px'}} size=\"sm\" variant=\"danger\" \n                 onClick={()=>{this.DeleteExam(name)}} >Delete</ Button>\n                </Row>\n    \n              \n                   ) \n          })\n       }\n    \n        \n       return (\n        <div>\n          \n          <h1>All Exams</h1>\n   \n    <Container style={{width:'660px',height:'550px',backgroundColor:'white', overflow:'scroll'}}>\n        <br />\n        {nameslist}\n    </Container>\n        </div>\n        );\n    }\n}\n\nexport default ViewEdit;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './ViewExams.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Spinner from 'react-bootstrap/Spinner'\nclass ViewGrade extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {value: '', Exams:null, Grades:null};\n    this.GetExams()\n    this.GradeExam = this.GradeExam.bind(this);\n      \n  }\n  showProgress()\n  {\n    document.getElementById(\"Progressbar\").style.display='block';\n\n    \n    \n  }\n  GetExams()\n  {\n    fetch('/ViewExams/'+window.IDToken)\n      .then(response => response.json())\n      .then(data => this.setState({Exams : data.ans}));\n  }\n\n  GradeExam(ExamTitle)\n  {\n    this.showProgress()\n    fetch('/GradeExam/'+ExamTitle)\n      .then(response => response.json())\n      .then(data => this.setState({Grades : data.Grades}));\n  }\n\n    render() {\n       var names= this.state.Exams\n       if (names==null)\n       {\n        var nameslist='No Exams Yet'\n       }\n       else\n       { \n   \n\n          var nameslist= names.map((name)=>{\n            return (\n                \n                <Row style={{ justifyContent:'space-evenly'}}>\n                  <ListGroup style={{textAlign: 'center',width:'80%',margin: '10px 10px 10px 10px'}} >\n                    <ListGroup.Item href=\"/#/instructor-exam\"disabled>{name}</ListGroup.Item>\n                   </ ListGroup>\n                 <Button style={{width:'10%',margin: '10px 10px 10px 10px'}} size=\"sm\" variant=\"success\" onClick={()=>this.GradeExam(name)} >Grade</ Button>\n               \n                </Row>\n    \n              \n                   ) \n          })\n       }\n    \n        \n       return (\n        <div>\n          \n          <h1>All Exams</h1>\n   \n    <Container style={{width:'660px',height:'550px',backgroundColor:'white', overflow:'scroll'}}>\n        <br />\n        {nameslist}\n        <Row style={{justifyContent:'center'}}>\n      <Spinner style={{display:'none'}} id=\"Progressbar\" animation=\"border\" variant=\"primary\" role=\"status\">\n       <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n      </Row>\n    </Container>\n        </div>\n        );\n    }\n}\n\nexport default ViewGrade;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './CreateExam.css';\nimport './Popup.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nclass EditMCQ extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {value: '', Question:null, AnswerList:null, CorrectAnswer:null, ILO:null,  Grade:null, IsUpdated:null,\n      OldQuestion:null, InstructorID:1, ExamTitle:'Marketing'};\n      //this.GetMCQInfo()\n      this.Autofill()\n          \n    }\n\n    //this is for one question\n    async GetMCQInfo()\n    {\n      const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n      const exam = params.get('exam');\n      //params = new URLSearchParams(window.location.hash.split(\"?\")[2]);\n      const question = params.get('question');\n      const response = await fetch('/GetAMCQ/'+exam+'/'+window.IDToken+'/'+question).then(response => response.json());\n      this.setState({Question:response.Question, AnswerList:response.AnswerList,\n          CorrectAnswer:response.CorrectAnswer, ILO:response.ILO,  Grade:response.Grade});\n\n    \n    }\n\n    //et2aked ml choices variable\n    UpdateMCQ(NewQuestion, NewAnswers, NewCorrectAns, NewILO, NewGrade)\n    {\n      fetch('/UpdateMCQ/'+this.state.OldQuestion+'/'+NewQuestion+'/'+NewAnswers+'/'+NewCorrectAns+'/'+this.state.ExamTitle+'/'\n      +NewILO+'/'+NewGrade+'/'+window.IDToken)\n        .then(response => response.json())\n        .then(data => this.setState({IsUpdated:data.Updated}));\n      //this.handleSave();\n    }\n\n    async Autofill()\n    {\n        await this.GetMCQInfo();\n        document.getElementById('MCQILO').value=this.state.ILO;\n        document.getElementById('MCQGrade').value=this.state.Grade;\n        document.getElementById('TextMCQuestion').value=this.state.Question;\n        document.getElementById('ChoiceModelAns').value=this.state.CorrectAnswer;\n    }\n   handleSave()\n   {\n    if (this.state.IsUpdated == \"Successfully updated\")\n    {\n      alert(\"Saved Successfully\");\n    }\n    else\n    {\n      alert(\"Unseuccessful try\");\n      window.location.reload(false);\n    } \n   }\n\n   handleAddChoice()\n      { \n        \n        var x = document.createElement(\"div\");\n        x.setAttribute(\"class\", \"form-check form-check-inline\");\n        x.setAttribute(\"id\",\"choice\"+window.ChoiceCounter);\n        x.innerHTML='<input type=\"radio\" disabled class=\"form-check-input\">'+\n        '<label title for=\"formExamMCQ\" id= \"'+\"choice\"+window.ChoiceCounter+'\" class=\"form-check-label\">'+ document.getElementById('formChoiceTextbox').value+'</label>';\n        document.getElementById('ChoicesDiv').appendChild(x);\n        window.ChoiceCounter++;\n        var y=document.createElement(\"option\");\n        y.innerText=document.getElementById('formChoiceTextbox').value;\n        document.getElementById('ChoiceModelAns').appendChild(y);\n        document.getElementById('formChoiceTextbox').value='';\n      }\n      handleDeleteChoice()\n      {\n        window.ChoiceCounter--;\n        var y=document.getElementById('choice'+window.ChoiceCounter);\n        document.getElementById('ChoicesDiv').removeChild(y);\n      }\n    render() {\n        return (\n        <div>\n      <Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\n              <br />\n      <Form.Group   id=\"formExamMCQ\" controlId=\"formExamMCQ\">\n      \n      <Form.Label>Multiple Choice Question</Form.Label>\n      <Row>\n      <Form.Control  size=\"sm\" type=\"text\" id=\"MCQILO\" style={{width:'50%',margin: '15px 15px 15px 15px'}} placeholder=\"Enter Question ILO\"></Form.Control>\n      <Form.Control required size=\"sm\"id=\"MCQGrade\" style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\" placeholder=\"Enter Your Grade\" />\n\n      </Row>\n      <Form.Control required size=\"sm\" id=\"TextMCQuestion\" type=\"text\" placeholder=\"Enter Your Question\" />\n      <br />\n      <Form.Control  required size=\"sm\" id=\"formChoiceTextbox\" type=\"text\" placeholder=\"Enter a Choice\" />\n      <Button  size=\"sm\" variant=\"primary\" onClick={this.handleAddChoice}>Add Choice</Button>\n      <Button id=\"btnDeleteChoice\"  size=\"sm\" variant=\"danger\" onClick={this.handleDeleteChoice}>Delete Choice</Button>\n      <div id=\"ChoicesDiv\"></div>\n      <Form.Control required size=\"sm\" as=\"select\" id=\"ChoiceModelAns\" placeholder=\"Choose Model Answer\">\n      <option>Choose Model Answer</option>\n      </Form.Control>\n      <Button size=\"sm\" style={{ float:'right'}} variant=\"success\"\n      onClick={()=>{this.UpdateMCQ(this.state.OldQuestion,document.getElementById('TextMCQuestion').value, \n      document.getElementById('formChoiceTextbox').value, document.getElementById('ChoiceModelAns').value, \n      document.getElementById('MCQILO').value, document.getElementById('MCQGrade').value)\n      }}\n        >Save Changes</Button>\n      </Form.Group>\n      </Container>\n\n        </div>\n        )\n    }\n}\nexport default EditMCQ;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './CreateExam.css';\nimport './Popup.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nclass EditTF extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {value: '', Question:null, CorrectAnswer:null, ILO:null,  Grade:null, IsUpdated:null,\n        OldQuestion:null, ExamTitle:'Marketing', InstructorID:1};\n        //this.GetTFInfo()\n        this.Autofill()\n          \n    }\n\n    //this is for one question\n    async GetTFInfo()\n    {\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n        const exam = params.get('exam');\n        //params = new URLSearchParams(window.location.hash.split(\"?\")[2]);\n        const question = params.get('question');\n        const response = await fetch('/GetATrueFalseQues/'+exam+'/'+window.IDToken+'/'+question).then(response => response.json());\n        this.setState({Question:response.Question, CorrectAnswer:response.CorrectAnswer, ILO:response.ILO,  Grade:response.Grade});\n\n    }\n\n    UpdateTrueFalse(NewQuestion, NewCorrectAns, NewILO, NewGrade)\n    {\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n        const exam = params.get('exam');\n        //params = new URLSearchParams(window.location.hash.split(\"?\")[2]);\n        const question = params.get('question');\n        fetch('/UpdateTrueFalse/'+question+'/'+NewQuestion+'/'+NewCorrectAns+'/'+exam+'/'\n        +NewILO+'/'+NewGrade+'/'+window.IDToken)\n            .then(response => response.json())\n            .then(data => this.setState({IsUpdated:data.Updated}));\n        //this.handleSave();\n    }\n\n    async Autofill()\n    {\n        await this.GetTFInfo();\n        document.getElementById('TFILO').value=this.state.ILO;\n        document.getElementById('TFGrade').value=this.state.Grade;\n        document.getElementById('TextTF').value=this.state.Question;\n        document.getElementById('TFModelAns').value=this.state.CorrectAnswer;\n    }\n\n    handleSave()\n    {\n     if (this.state.IsUpdated == \"Successfully updated\")\n     {\n       alert(\"Saved Successfully\");\n     }\n     else\n     {\n       alert(\"Unseuccessful try\");\n       window.location.reload(false);\n     } \n    }\n\n    render() {\n        return (\n        <div>\n<Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\n        <br />\n<Form.Group  id=\"formExamTF\" controlId=\"formExamTF\">\n    <Form.Label>True and False Question</Form.Label>\n    <Row>\n    <Form.Control  size=\"sm\"id=\"TFILO\" type=\"text\" style={{width:'50%',margin: '15px 15px 15px 15px'}}\n    placeholder=\"Enter Question ILO\"></Form.Control>\n   <Form.Control size=\"sm\"id=\"TFGrade\" style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\"\n   placeholder=\"Enter Your Grade\" />\n   \n   </Row>\n    <Form.Control size=\"sm\" id=\"TextTF\" type=\"text\" placeholder=\"Enter Your Question\" />\n      <br />\n      <Form.Control size=\"sm\" as=\"select\" id=\"TFModelAns\" placeholder=\"Choose Model Answer\">\n    <option>Choose Model Answer</option>\n    <option>True</option>\n    <option>False</option>\n    </Form.Control>\n    <Button size=\"sm\" style={{ float:'right'}} variant=\"success\"\n    onClick={()=>{this.UpdateTrueFalse(document.getElementById('TextTF').value, \n    document.getElementById('TFModelAns').value, document.getElementById('TFILO').value, \n    document.getElementById('TFGrade').value)\n    }}\n     >Save Changes</Button>\n   \n    </Form.Group>\n    </Container>\n    \n        </div>\n        )\n    }\n}\nexport default EditTF;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './CreateExam.css';\nimport './Popup.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nclass EditComplete extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {value: '', Question1:null, Question2:null, CorrectAnswer:null, ILO:null,  Grade:null, IsUpdated:null, \n        InstructorID:1, ExamTitle:'Marketing', OldQuestion1:null, OldQuestion2:null};\n        \n        this.Autofill()\n        \n          \n    }\n\n    //this is for one question\n    async GetCompleteInfo()\n    {\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n        const exam = params.get('exam');\n        //params = new URLSearchParams(window.location.hash.split(\"?\")[2]);\n        const question = params.get('question');\n        const response = await fetch('/GetACompleteQues/'+exam+'/'+window.IDToken+'/'+question).then(response => response.json());\n        this.setState({Question1:response.Question1, Question2:response.Question2, \n            CorrectAnswer:response.CorrectAnswer, ILO:response.ILO,  Grade:response.Grade});\n\n        // fetch('/GetACompleteQues/'+exam+'/'+1+'/'+question)\n        //     .then(response => response.json())\n        //     .then(data => this.setState({Question1:data.Question1, Question2:data.Question2, \n        //     CorrectAnswer:data.CorrectAnswer, ILO:data.ILO,  Grade:data.Grade}));\n    }\n\n    UpdateComplete(NewQuestion1, NewQuestion2, NewCorrectAns, NewILO, NewGrade)\n    {\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n        const exam = params.get('exam');\n        //params = new URLSearchParams(window.location.hash.split(\"?\")[2]);\n        const question = params.get('question');\n        fetch('/UpdateComplete/'+question+'/'+NewQuestion1+'/'+NewQuestion2+'/'\n        +NewCorrectAns+'/'+exam+'/'+NewILO+'/'+NewGrade+'/'+window.IDToken)\n            .then(response => response.json())\n            .then(data => this.setState({IsUpdated:data.Updated}));\n        //this.handleSave();\n\n    }\n\n    async Autofill()\n    {\n        await this.GetCompleteInfo();\n        document.getElementById('CompleteILO').value=this.state.ILO;\n        document.getElementById('CompleteGrade').value=this.state.Grade;\n        document.getElementById('TextComplete1').value=this.state.Question2;\n        document.getElementById('TextComplete2').value=this.state.Question2;\n        document.getElementById('AnswerComplete').value=this.state.CorrectAnswer;\n    }\n\n    handleSave()\n    {\n    \n     if (this.state.IsUpdated == \"Successfully updated\")\n     {\n       alert(\"Saved Successfully\");\n     }\n     else\n     {\n       alert(\"Unseuccessful try\");\n       window.location.reload(false);\n     } \n    }\n\n    render() {\n        return (\n        <div>\n<Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\n        <br />\n<Form.Group id=\"formExamComplete\" controlId=\"formExamComplete\">\n   \n   <Form.Label>Complete Question</Form.Label>\n   <Row>\n   <Form.Control  size=\"sm\" id=\"CompleteILO\" type=\"text\" style={{width:'50%',margin: '15px 15px 15px 15px'}} placeholder=\"Enter Your ILO \" ></Form.Control>\n   <Form.Control size=\"sm\" id=\"CompleteGrade\" style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\" placeholder=\"Enter Your Grade \"/>\n   \n   </Row>\n   <Form.Control size=\"sm\" id=\"TextComplete1\" type=\"text\"  placeholder=\"Enter Your 1st part of the Question *before the space*\" />\n   <Form.Control size=\"sm\"id=\"TextComplete2\" type=\"text\"   placeholder=\"Enter Your 2nd part of the Question *after the space*\" />\n   <br />\n   <Form.Control size=\"sm\" id=\"AnswerComplete\" type=\"text\" placeholder=\"Enter Your Model Answer *the space*\" />\n   <Button size=\"sm\" style={{ float:'right'}} variant=\"success\"\n   onClick={()=>{this.UpdateComplete(document.getElementById('TextComplete1').value, \n   document.getElementById('TextComplete2').value, document.getElementById('AnswerComplete').value,\n    document.getElementById('CompleteILO').value, document.getElementById('CompleteGrade').value)\n   }}\n   >Save Changes</Button>\n   \n   </Form.Group>\n   </Container>\n        </div>\n        )\n    }\n}\nexport default EditComplete;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './CreateExam.css';\nimport './Popup.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nclass EditEssay extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {value: '', Question:null, CorrectAnswer:null, ILO:null,  Grade:null, IsUpdated:null,\n        OldQuestion:null, ExamTitle:'Marketing', InstructorID:1};\n        //this.GetEssayInfo()\n        this.Autofill()\n        \n          \n    }\n\n    //this is for one question\n    async GetEssayInfo()\n    {\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n        const exam = params.get('exam');\n        //params = new URLSearchParams(window.location.hash.split(\"?\")[2]);\n        const question = params.get('question');\n        const response = await fetch('/GetAEssQues/'+exam+'/'+window.IDToken+'/'+question).then(response => response.json());\n        this.setState({Question:response.Question, CorrectAnswer:response.CorrectAnswer, ILO:response.ILO,  Grade:response.Grade});\n\n    }\n\n    UpdateEssay(NewQuestion, NewCorrectAns, NewILO, NewGrade)\n    {\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n        const exam = params.get('exam');\n        //params = new URLSearchParams(window.location.hash.split(\"?\")[2]);\n        const question = params.get('question');\n        fetch('/UpdateEssay/'+question+'/'+NewQuestion+'/'+NewCorrectAns+'/'+exam+'/'\n        +NewILO+'/'+NewGrade+'/'+window.IDToken)\n            .then(response => response.json())\n            .then(data => this.setState({IsUpdated:data.Updated}));\n        //this.handleSave();\n    }\n\n    async Autofill()\n    {\n        await this.GetEssayInfo()\n        document.getElementById('EssayILO').value=this.state.ILO;\n        document.getElementById('EssayGrade').value=this.state.Grade;\n        document.getElementById('TextEssay').value=this.state.Question;\n        document.getElementById('AnswerEssay').value=this.state.CorrectAnswer;\n    }\n\n    handleSave()\n    {\n     if (this.state.IsUpdated == \"Successfully updated\")\n     {\n       alert(\"Saved Successfully\");\n     }\n     else\n     {\n       alert(\"Unseuccessful try\");\n       window.location.reload(false);\n     } \n    }\n\n    render() {\n        return (\n        <div>\n<Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\n        <br />\n<Form.Group  id=\"formExamEssay\" controlId=\"formExamEssay\">\n    <Form.Label>Essay Question</Form.Label>\n    <Row>\n    <Form.Control  size=\"sm\"id=\"EssayILO\" type=\"text\" style={{width:'50%',margin: '15px 15px 15px 15px'}}\n    placeholder=\"Enter Question ILO\"></Form.Control>\n   <Form.Control size=\"sm\" id=\"EssayGrade\"style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\"\n    placeholder=\"Enter Your Grade\" />\n   \n   </Row>\n    <Form.Control size=\"sm\" id=\"TextEssay\" type=\"text\" placeholder=\"Enter Your Essay Question\" />\n   <br />\n    <Form.Control size=\"sm\" as=\"textarea\"id=\"AnswerEssay\" placeholder=\"Enter Your Model Answer\" />\n    <Button size=\"sm\" style={{ float:'right'}} variant=\"success\"\n     onClick={()=>{this.UpdateEssay(document.getElementById('TextEssay').value, \n     document.getElementById('AnswerEssay').value, document.getElementById('EssayILO').value, \n     document.getElementById('EssayGrade').value)\n     }}\n      >Save Changes</Button>\n    </Form.Group>\n    </Container>\n        </div>\n        )\n    }\n}\nexport default EditEssay;","import React, { Component } from 'react';\r\n\r\nimport './Exam.css';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\nimport $ from 'jquery'; \r\n\r\nclass TakeMCQ extends Component{\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value:'', QuestionList:[], CounterList:[], AnswerList:[],CorrectAnswerList:[], \r\n        ILOList:[], GradeList:[]};\r\n        this.GetMCQ()\r\n        window.MCQQuestions=[];\r\n        window.MCQAnswers=[];\r\n    }\r\n\r\n    GetMCQ()\r\n    {\r\n        var examname=this.props.passedname;\r\n      fetch('/GetMCQStud/'+examname)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList:data.QuestionList, CounterList:data.CounterList, AnswerList:data.AnswerList,\r\n            CorrectAnswerList:data.CorrectAnswerList, ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n\r\n    handleSubmit()\r\n    {\r\n        window.MCQAnswers=[];\r\n        var ansGroup=\"\"\r\n    \r\n        for(var i=0;i<window.MCQQuestions.length;i++)\r\n        {\r\n            ansGroup=\"AnswerMCQ\" + (i+1)\r\n            if(document.getElementById(ansGroup)!=null)\r\n            {\r\n                window.MCQAnswers.push($(`input[name='${ansGroup}']:checked`).val());\r\n            }\r\n         \r\n\r\n        }\r\n        \r\n       \r\n    }\r\n    render(){\r\n        var name=this.props.passedname\r\n        var ExamMCQQuestions = this.state.QuestionList;\r\n        var ExamMCQCounter = this.state.CounterList;\r\n        var ExamMCQChoices = this.state.AnswerList;\r\n        ExamMCQChoices = ExamMCQChoices.toString().split(',');\r\n        window.MCQQuestions=ExamMCQQuestions;\r\n        var r = \"\";\r\n        var i = 0;\r\n        var MCQHead = \"\";\r\n        var answer = \"\";\r\n        var choicesNumber = 0;\r\n        if (ExamMCQQuestions.length != 0) {\r\n            MCQHead = <div><Form.Label  ><b>Choose the Correct Answer:</b></Form.Label> <Button style={{width:'21%',margin: '10px 10px 10px 10px'}} onClick={this.handleSubmit} size=\"sm\" variant=\"primary\" >Submit MCQ</ Button> <br /></div>;\r\n\r\n            r = ExamMCQChoices.map((choice, index) => {\r\n                if (choicesNumber == 0) {\r\n                    choicesNumber = ExamMCQCounter[i] - 1;\r\n                    i += 1;\r\n                    answer = \"AnswerMCQ\" + (i);\r\n                    return (\r\n                        <div>\r\n                            <Form.Label  >{i})&nbsp;{ExamMCQQuestions[i - 1]}  </Form.Label> \r\n                    \r\n            \r\n                             <br />\r\n                            <Form.Label ><input type=\"radio\" name={answer} value={choice} id={answer} /> {choice} </Form.Label>\r\n                            </div>\r\n                    )\r\n                }\r\n                else {\r\n                    choicesNumber -= 1;\r\n                    return (\r\n                        <div >\r\n                            <Form.Label ><input type=\"radio\" name={answer} value={choice} id={answer} /> {choice} </Form.Label>\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n\r\n            });\r\n\r\n        }\r\n\r\n        return(\r\n            <div>\r\n            \r\n            { MCQHead }\r\n            { r }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default TakeMCQ;","import React, { Component } from 'react';\r\n\r\nimport './Exam.css';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nclass TakeEssay extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value:'', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[]};\r\n        this.GetEssay()\r\n        window.EssayQuestions=[];\r\n        window.EssayAnswers=[];\r\n    }\r\n\r\n    GetEssay()\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/GetEssayStud/'+examname)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \r\n            ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n\r\n    handleSubmit()\r\n    {\r\n        window.EssayAnswers=[];\r\n        \r\n        for(var i=0;i<window.EssayCount;i++)\r\n        {\r\n            \r\n            if(document.getElementById(\"AnswerEssay\" + (i+1))!=null)\r\n            {\r\n                window.EssayAnswers.push(document.getElementById(\"AnswerEssay\" + (i+1)).value);\r\n            }\r\n\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    render(){\r\n        var ExamEssay=this.state.QuestionList;\r\n        window.EssayQuestions=ExamEssay;\r\n        var name=this.props.passedname\r\n        var EssayHead=\"\";\r\n        var Essay=\"\";\r\n        var answerid = \"\";\r\n        if(ExamEssay.length!=0){\r\n            EssayHead = <div><Form.Label  ><b>Essay Question(s):</b></Form.Label> <Button style={{width:'21%',margin: '10px 10px 10px 10px'}} onClick={this.handleSubmit} size=\"sm\" variant=\"primary\" >Submit Essay</ Button>\r\n            <br /></div>;\r\n            Essay= ExamEssay.map((Question,index)=>{\r\n                window.EssayCount=index+1;\r\n                answerid = \"AnswerEssay\" + (index+1);\r\n            return(\r\n                 <div>\r\n                    <Form.Label  >{index+1})&nbsp;{ExamEssay[index]}  </Form.Label>\r\n                          \r\n                     <br />\r\n                    <Form.Label><textarea placeholder=\"Enter Answer Here\" id={answerid}  style={{width:\"600px\"}}></textarea></Form.Label>\r\n                </div>\r\n                )\r\n            }\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {EssayHead}\r\n                {Essay}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TakeEssay;","import React, { Component } from 'react';\r\nimport './Exam.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport $ from 'jquery'; \r\nclass TakeTF extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value:'', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[]};\r\n        this.GetTF()\r\n        window.TFQuestions=[];\r\n        window.TFAnswers=[];\r\n    }\r\n\r\n    GetTF()\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/GetTFStud/'+examname)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \r\n            ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n\r\n    handleSubmit()\r\n    {\r\n        window.TFAnswers=[];\r\n        var ansGroup=\"\"\r\n        \r\n        for(var i=0;i<window.TFQuestions.length;i++)\r\n        {\r\n            ansGroup=\"AnswerTF\" + (i+1)\r\n            if(document.getElementById(ansGroup)!=null)\r\n            {\r\n                window.TFAnswers.push($(`input[name='${ansGroup}']:checked`).val());\r\n            }\r\n         \r\n\r\n        }\r\n        \r\n      \r\n    }\r\n\r\n    render() {\r\n       \r\n        var ExamTF = this.state.QuestionList;\r\n        window.TFQuestions=ExamTF;\r\n        var name=this.props.passedname\r\n        var TFHead = \"\";\r\n        var TF = \"\";\r\n        var answer=\"\";\r\n        if (ExamTF.length != 0) {\r\n            TFHead = <div><Form.Label  ><b>True or False:</b></Form.Label> <Button style={{width:'21%',margin: '10px 10px 10px 10px'}} onClick={this.handleSubmit} size=\"sm\" variant=\"primary\" >Submit T & F</ Button>\r\n            <br /></div>;\r\n            TF = ExamTF.map((Question, index) => {\r\n                answer=\"AnswerTF\"+(index+1)\r\n                \r\n                return (\r\n                    <div>\r\n                        <Form.Label  > {index + 1})&nbsp;{ExamTF[index]}  </Form.Label>\r\n                        <Form.Label style={{ paddingRight:\"6px\" ,margin:\"10px 10px 10px 10px\" }}><input type=\"radio\" name={answer} id={answer}  value=\"True\"  />True </Form.Label>   \r\n                        <Form.Label style={{paddingRight:\"6px\",margin:\"10px 10px 10px 10px\"}}><input type=\"radio\" name={answer} id={answer}  value=\"False\" />False </Form.Label> \r\n                        \r\n                        \r\n                    </div>\r\n                )\r\n            }\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {TFHead}\r\n                {TF}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TakeTF;","import React, { Component } from 'react';\r\n\r\nimport './Exam.css';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nclass TakeComplete extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[]};\r\n        this.GetComplete()\r\n        window.CompleteQuestions=[];\r\n        window.CompleteAnswers=[];\r\n    }\r\n\r\n    GetComplete()\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/GetCompleteStud/'+examname)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \r\n            ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n\r\n    handleSubmit()\r\n    {\r\n        window.CompleteAnswers=[];\r\n        for(var i=0;i<window.CompleteCount;i++)\r\n        {\r\n            \r\n            if(document.getElementById(\"AnswerComplete\" + (i+1))!=null)\r\n            {\r\n                window.CompleteAnswers.push(document.getElementById(\"AnswerComplete\" + (i+1)).value);\r\n            }\r\n\r\n        }\r\n        \r\n        \r\n    }\r\n    render() {\r\n        var ExamComplete = this.state.QuestionList;\r\n        window.CompleteQuestions=ExamComplete;\r\n        var Examname=this.props.passedname;\r\n        var CompleteHead = \"\";\r\n        var Complete = \"\";\r\n        var i=0\r\n        if (ExamComplete.length != 0) {\r\n            CompleteHead = <div><Form.Label  ><b>Complete the following:</b></Form.Label>  <Button style={{width:'21%',margin: '10px 10px 10px 10px'}} onClick={this.handleSubmit} size=\"sm\" variant=\"primary\" >Submit Complete</ Button>\r\n            <br /></div>;\r\n            Complete = ExamComplete.map((Question, index) => {\r\n               \r\n                if (index%2==0)\r\n                {\r\n                    i+=1;\r\n                    var answerid = \"AnswerComplete\" + i;\r\n                    window.CompleteCount=i;\r\n                    return (\r\n                        <div>\r\n                            <Form.Label  > {i})&nbsp; </Form.Label> \r\n                            <Form.Label>  {ExamComplete[index]}   </Form.Label>\r\n                            <input type=\"text\" id={answerid} placeholder=\"Enter Answer Here\"  style={{margin:\"6px\"}}/>\r\n                            <Form.Label> {ExamComplete[index+1]} </Form.Label>\r\n                           \r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {CompleteHead}\r\n                {Complete}\r\n                          \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TakeComplete;","import React, { Component } from 'react';\r\n\r\nimport './Exam.css';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nimport TakeMCQ from './TakeMCQ.js';\r\nimport TakeEssay from './TakeEssay.js';\r\nimport TakeTF from './TakeTF.js';\r\nimport TakeComplete from './TakeComplete.js';\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\n\r\nclass TakeExam extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '',Submit:null};\r\n\r\n      }\r\n\r\n      handleSubmitAnswers()\r\n      {\r\n        document.getElementById('ExamSubmitBox').style.display='block';\r\n      }\r\n      SubmitStudentExam(MCQList, MCQAnswers, \r\n        CompleteList, CompleteAnswers, TFList, TFAnswers, EssayList, EssayAnswers)\r\n      {\r\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n        const examname = params.get('name');\r\n        const id = params.get('id');\r\n        // console.log(\"Question\",question)\r\n        if (MCQList.map(e => e === null))\r\n        {\r\n          MCQList = ['.']\r\n        }\r\n        if (MCQAnswers==[])\r\n        {\r\n          MCQAnswers = ['.']\r\n        }\r\n        if (CompleteList==[])\r\n        {\r\n          CompleteList = ['.']\r\n        }\r\n        if (CompleteAnswers==[])\r\n        {\r\n          CompleteAnswers = ['.']\r\n        }\r\n        if (TFList==[])\r\n        {\r\n          TFList = ['']\r\n        }\r\n        if (TFAnswers==[])\r\n        {\r\n          TFAnswers = ['']\r\n        }\r\n        if (EssayList==[])\r\n        {\r\n          EssayList = ['']\r\n        }\r\n        if (EssayAnswers==[])\r\n        {\r\n          EssayAnswers = ['']\r\n        }\r\n        //alert(id)\r\n        fetch('/SubmitStudentExam/'+examname+'/'+id+'/'+MCQList+'/'+MCQAnswers+'/'+CompleteList+'/'+CompleteAnswers+'/'+TFList+\r\n        '/'+TFAnswers+'/'+EssayList+'/'+EssayAnswers)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({Submit : data.successful}));\r\n          this.handleSubmitAnswers();\r\n      }\r\n\r\n    render() {\r\n        \r\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n        const name = params.get('name');\r\n        return (\r\n            <div>\r\n     <div style={{display:'none'}} class=\"modal-custom\" id=\"ExamSubmitBox\">\r\n          <Modal.Dialog  >\r\n              <Modal.Header >\r\n              <Modal.Title>Exam Alert</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                Exam \"{name}\" Submitted Successfully\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"primary\" onClick={event =>  window.location.href='#/student-home'} >Ok</Button>\r\n            </Modal.Footer>\r\n          </Modal.Dialog>\r\n          </div>\r\n        <Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\r\n            <br />\r\n        <Form>\r\n        <Form.Label style={{ display: 'flex', justifyContent: 'center' }}><b>{name}</b> </Form.Label>\r\n            <TakeMCQ passedname={name}/>\r\n            <TakeTF passedname={name}/>\r\n            <TakeComplete passedname={name}/>\r\n            <TakeEssay passedname={name}/>\r\n            <Button style={{ float:'right'}} variant=\"primary\"  type=\"submit\"onClick={()=>{this.SubmitStudentExam(window.MCQQuestions,window.MCQAnswers,window.CompleteQuestions,window.CompleteAnswers,window.TFQuestions,window.TFAnswers,window.EssayQuestions,window.EssayAnswers)}}>Submit Answers</Button>\r\n        </Form>\r\n        </Container>\r\n            </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default TakeExam;\r\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './StudentHome.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nclass StudentHome extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {value: '', fullname:null, id:null};\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n        const username=params.get('username')\n        this.GetName(username)\n  \n    }\n\n    GetName(username)\n    {\n      fetch('/GetStudName/'+username)\n        .then(response => response.json())\n        .then(data => this.setState({fullname : data.name, id:data.id}));\n    }\n\n    render() {\n        window.StudentName = this.state.fullname\n        const id = this.state.id\n        const href1 = `#/student-view-all?${new URLSearchParams({id}).toString()}`;\n        return (\n        <div>\n          \n          <h1>Welcome {window.StudentName}</h1>\n    <br />\n    <Container style={{ justifyContent:'center'}}>\n     <Row style={{ justifyContent:'space-evenly'}}>\n         <Col  style={{ flexGrow:'unset'}}><Button style={{width: 'max-content'}} href=\"#/student-ask\" size=\"lg\"variant=\"primary\">Ask a Question</Button></Col>\n         <Col style={{ flexGrow:'unset'}} ><Button style={{width: 'max-content'}} href={href1} size=\"lg\" variant=\"primary\">Take Exam</Button></Col>\n     </Row>\n\n </Container>\n            \n          </div>\n        );\n    }\n}\n\nexport default StudentHome;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './StudentAsk.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nclass StudentAsk extends Component {\n\n \n    render() {\n        return (\n        <div>\n    <Container style={{width:'660px',height:'590px',backgroundColor:'white',overflow:'scroll'}}>\n        <br />\n    <Form style={{backgroundColor:'white'}}>\n\n  <Form.Group  id=\"formExamEssay\" controlId=\"formExamEssay\">\n    <Form.Label>Essay Question</Form.Label>\n    <Form.Control id=\"TextEssay\" as=\"textarea\" placeholder=\"Enter Your Essay Question\" />\n   <br />\n    <Button  style={{float:'right'}} variant=\"success\" >Get Answer</Button>\n\n  </Form.Group>\n\n</Form>\n\n </Container>\n            \n          </div>\n        );\n    }\n}\n\nexport default StudentAsk;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './StudentExams.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup'\nclass StudentExams extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {value: '', Exams:null, id:null};\n        fetch('/ViewAllExams')\n          .then(response => response.json())\n          .then(data => this.setState({Exams : data.ans}));\n        \n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n        const id=params.get('id')\n        this.state.id=id\n          \n    }\n\n    render() {\n       //var names= window.ExamTitle;\n       var names = this.state.Exams\n       var id = this.state.id\n       if (names==null)\n       {\n        var nameslist='No Exams Yet'\n       }\n       else\n       {\n        var nameslist= names.map(function(name){\n            const href = `/#/student-take-exam?${new URLSearchParams({ name,id }).toString()}`;\n            return <ListGroup.Item href={href} action>{name}</ListGroup.Item>;\n          })\n       }\n    \n        \n       return (\n        <div>\n          \n          <h1>All Exams</h1>\n   \n    <Container style={{width:'660px',height:'550px',backgroundColor:'white',overflow:'scroll'}}>\n        <br />\n       <ListGroup style={{textAlign: 'center'}} >{nameslist}</ListGroup>\n    </Container>\n        </div>\n        );\n    }\n}\n\nexport default StudentExams;\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Exam.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport Exam from './Exam.js';\r\n\r\nclass ExamMCQ extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', QuestionList:[], CounterList:[], AnswerList:[],CorrectAnswerList:[], \r\n        ILOList:[], GradeList:[]};\r\n        this.GetMCQ()\r\n          \r\n    }\r\n\r\n    GetMCQ()\r\n    {\r\n        var examname=this.props.passedname\r\n      fetch('/GetMCQ/'+examname+'/'+window.IDToken)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList:data.QuestionList, CounterList:data.CounterList, AnswerList:data.AnswerList,\r\n            CorrectAnswerList:data.CorrectAnswerList, ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n\r\n    handleTopic(){}\r\n\r\n    render(){\r\n        var ExamMCQQuestions = this.state.QuestionList;\r\n        var ExamMCQCounter   = this.state.CounterList;\r\n        var ExamMCQChoices   = this.state.AnswerList;\r\n        ExamMCQChoices = ExamMCQChoices.toString().split(',');\r\n\r\n        //var ExamMCQQuestions = window.ExamMCQQuestions;\r\n        //var ExamMCQCounter = window.ExamMCQCounter;\r\n        //var ExamMCQChoices = window.ExamMCQChoices;\r\n\r\n        var r = \"\";\r\n        var i = 0;\r\n        var MCQHead = \"\";\r\n        var answer = \"\";\r\n        var choicesNumber = 0;\r\n        if (ExamMCQQuestions.length != 0) {\r\n            MCQHead = <div><Form.Label  ><b>Choose the Correct Answer:</b></Form.Label> <br /></div>;\r\n\r\n            r = ExamMCQChoices.map((choice, index) => {\r\n                if (choicesNumber == 0) {\r\n                    choicesNumber = ExamMCQCounter[i] - 1;\r\n                    i += 1;\r\n                    answer = \"answer\" + (i);\r\n                    return (\r\n                        <div>\r\n                            <Form.Label  >{i})&nbsp;{ExamMCQQuestions[i - 1]}  </Form.Label> \r\n                    \r\n            \r\n                             <br />\r\n                            <Form.Label inline><input type=\"radio\" name={answer} value={choice} disabled /> {choice} </Form.Label>\r\n                            </div>\r\n                    )\r\n                }\r\n                else {\r\n                    choicesNumber -= 1;\r\n                    return (\r\n                        <div >\r\n                            <Form.Label inline><input type=\"radio\" name={answer} value={choice} disabled /> {choice} </Form.Label>\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n\r\n            });\r\n\r\n        }\r\n\r\n        return(\r\n            <div>\r\n            { MCQHead }\r\n            { r }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ExamMCQ;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Exam.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport Exam from './Exam.js';\r\n\r\nclass ExamEssay extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[]};\r\n        this.GetEssay()\r\n          \r\n    }\r\n\r\n    GetEssay()\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/GetEssay/'+examname+'/'+window.IDToken)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \r\n            ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n    render(){\r\n        //var ExamEssay=window.ExamEssay;\r\n        var ExamEssay = this.state.QuestionList\r\n        \r\n        var EssayHead=\"\";\r\n        var Essay=\"\";\r\n        if(ExamEssay.length!=0){\r\n            EssayHead = <div><Form.Label  ><b>Essay Questions:</b></Form.Label> <br /></div>;\r\n            Essay= ExamEssay.map((Question,index)=>{\r\n            return(\r\n                 <div>\r\n                    <Form.Label  >{index+1})&nbsp;{ExamEssay[index]}  </Form.Label>\r\n                          \r\n                     <br />\r\n                    <Form.Label><textarea placeholder=\"Enter Answer Here\" value={this.state.CorrectAnswerList[index]} disabled style={{width:\"600px\"}}></textarea></Form.Label>\r\n                </div>\r\n                )\r\n            }\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {EssayHead}\r\n                {Essay}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ExamEssay;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Exam.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport Exam from './Exam.js';\r\n\r\nclass ExamTF extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[]};\r\n        this.GetTF()\r\n          \r\n    }\r\n        \r\n    GetTF()\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/GetTF/'+examname+'/'+window.IDToken)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \r\n            ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n    render() {\r\n        //var ExamTF = window.ExamTF;\r\n        var ExamTF = this.state.QuestionList;\r\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n        const name = params.get('name');\r\n        var TFHead = \"\";\r\n        var TF = \"\";\r\n        if (ExamTF.length != 0) {\r\n            TFHead = <div><Form.Label  ><b>True or False:</b></Form.Label> <br /></div>;\r\n            TF = ExamTF.map((Question, index) => {\r\n                return (\r\n                    <div>\r\n                       <Form.Label  > {index + 1})&nbsp;{ExamTF[index]}  </Form.Label>\r\n                              \r\n                        <Form.Label style={{ paddingRight:\"6px\" ,margin:\"10px 10px 10px 10px\" }}><input type=\"radio\" name={index}  value=\"True\"  />True </Form.Label>   \r\n                        <Form.Label style={{paddingRight:\"6px\",margin:\"10px 10px 10px 10px\"}}><input type=\"radio\" name={index}  value=\"False\" />False </Form.Label> \r\n                        \r\n                    </div>\r\n                )\r\n            }\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {TFHead}\r\n                {TF}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ExamTF;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Exam.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport Exam from './Exam.js';\r\n\r\nclass ExamComplete extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[]};\r\n        this.GetComplete()\r\n        \r\n          \r\n    }\r\n\r\n    GetComplete()\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/GetComplete/'+examname+'/'+window.IDToken)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \r\n            ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n    render() {\r\n        //var ExamComplete = window.ExamComplete;\r\n        var ExamComplete = this.state.QuestionList;\r\n\r\n        var CompleteHead = \"\";\r\n        var Complete = \"\";\r\n        var i=0\r\n        if (ExamComplete.length != 0) {\r\n            CompleteHead = <div><Form.Label  ><b>Complete the following:</b></Form.Label> <br /></div>;\r\n            Complete = ExamComplete.map((Question, index) => {\r\n                if (index%2==0)\r\n                {\r\n                    i+=1;\r\n                    return (\r\n                        <div>\r\n                           <Form.Label  > {i})&nbsp; </Form.Label> \r\n                            <Form.Label>  {ExamComplete[index]}   </Form.Label>\r\n                            <input type=\"text\" placeholder=\"Enter Answer Here\" value={this.state.CorrectAnswerList[index]} disabled style={{margin:\"6px\"}}/>\r\n                            <Form.Label> {ExamComplete[index+1]} </Form.Label>\r\n\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {CompleteHead}\r\n                {Complete}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ExamComplete;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Exam.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport ExamMCQ from './ExamMCQ.js';\nimport ExamEssay from './ExamEssay.js';\nimport ExamTF from './ExamTF.js';\nimport ExamComplete from './ExamComplete.js';\n\n\n\nclass Exam extends Component {\n\n    constructor(props) {\n        super(props);\n        \n          \n    }\n\n    render() {\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n        const name = params.get('name');\n        window.examname=name;\n        return (\n            <div>\n    \n        <Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\n            <br />\n        <Form>\n        <Form.Label style={{ display: 'flex', justifyContent: 'center' }}>{name}</Form.Label>\n            <ExamMCQ passedname={name} />\n            <ExamTF passedname={name}/>\n            <ExamComplete passedname={name}/>\n            <ExamEssay passedname={name}/>\n        </Form>\n        </Container>\n            </div>\n            );\n    }\n}\n\nexport default Exam;\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Exam.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\n\r\nclass ViewEditMCQ extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', MCQQuestions:[], MCQCounter:[], MCQChoices:[],CorrectAnswerList:[], \r\n        ILOList:[], GradeList:[], Deleted:null};\r\n        this.GetMCQ()\r\n             \r\n    }\r\n\r\n    GetMCQ()\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/GetMCQ/'+examname+'/'+window.IDToken)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({MCQQuestions : data.QuestionList, MCQCounter : data.CounterList, MCQChoices : data.AnswerList,\r\n            CorrectAnswerList:data.CorrectAnswerList, ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n\r\n    DeleteMCQ(Question)\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/DeleteMCQ/'+examname+'/'+Question)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({Deleted : data.Deleted}));\r\n        window.location.reload(false);\r\n    }\r\n    \r\n\r\n    render(){\r\n        var ExamMCQQuestions = this.state.MCQQuestions;\r\n        var ExamMCQCounter = this.state.MCQCounter;\r\n        var ExamMCQChoices = this.state.MCQChoices;\r\n        ExamMCQChoices = ExamMCQChoices.toString().split(',');\r\n\r\n        var r = \"\";\r\n        var i = 0;\r\n        var MCQHead = \"\";\r\n        var answer = \"\";\r\n        var choicesNumber = 0;\r\n        if (ExamMCQQuestions.length != 0) {\r\n            MCQHead = <div><Form.Label  ><b>Choose the Correct Answer:</b></Form.Label> <br /></div>;\r\n\r\n            r = ExamMCQChoices.map((choice, index) => {\r\n                \r\n                if (choicesNumber == 0) {\r\n                    choicesNumber = ExamMCQCounter[i] - 1;\r\n                    i += 1;\r\n                    answer = \"answer\" + (i);\r\n                    var question = ExamMCQQuestions[i - 1]\r\n                    var exam = this.props.passedname\r\n                    const href1 = `/#/instructor-edit-mcq?${new URLSearchParams({ exam, question }).toString()}`;\r\n                    return (\r\n                        <div>\r\n                            <Form.Label  >Question {i}: {ExamMCQQuestions[i - 1]}  </Form.Label> \r\n                            <br>\r\n                            </br>\r\n\r\n                            <Form.Label inline><input type=\"radio\" name={answer} value={choice} disabled /> {choice} </Form.Label>\r\n\r\n                            <Row>\r\n                            <Form.Label style={{width:'50%',margin: '15px 15px 15px 15px'}}> ILO:{this.state.ILOList[index]}  </Form.Label>\r\n                            <Form.Label style={{width:'40%',margin: '15px 15px 15px 15px'}}> Grade:{this.state.GradeList[index]} </Form.Label>\r\n                            </Row>\r\n\r\n                            <Button style={{width:'10%',margin: '10px 10px 10px 10px',float:'right'}} size=\"sm\" variant=\"danger\" \r\n                            onClick={()=>{this.DeleteMCQ(question)}} >Delete</ Button>\r\n                            <Button style={{width:'10%',margin: '10px 10px 10px 10px',float:'right'}}href={href1} size=\"sm\" variant=\"primary\" >Edit</ Button>\r\n                            <br>\r\n                            </br>\r\n                            <br>\r\n                            </br>\r\n                        </div>\r\n                    )\r\n                }\r\n                else {\r\n                    choicesNumber -= 1;\r\n                    return (\r\n                        <div >\r\n                            <Form.Label inline><input type=\"radio\" name={answer} value={choice} disabled /> {choice} </Form.Label>\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n\r\n            });\r\n\r\n        }\r\n\r\n        return(\r\n            <div>\r\n            { MCQHead }\r\n            { r }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ViewEditMCQ;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Exam.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\n\r\nclass ViewEditEssay extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[], Deleted:null};\r\n        this.GetEssay()\r\n        \r\n          \r\n    }\r\n\r\n    GetEssay()\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/GetEssay/'+examname+'/'+window.IDToken)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \r\n            ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n\r\n    DeleteEssay(Question)\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/DeleteEssay/'+examname+'/'+Question)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({Deleted : data.Deleted}));\r\n        window.location.reload(false);\r\n    }\r\n\r\n    render(){\r\n        var ExamEssay=this.state.QuestionList;\r\n        \r\n        var EssayHead=\"\";\r\n        var Essay=\"\";\r\n        if(ExamEssay.length!=0){\r\n            EssayHead = <div><Form.Label  ><b>Essay Questions:</b></Form.Label> <br /></div>;\r\n            Essay= ExamEssay.map((Question,index)=>{\r\n                var question = ExamEssay[index]\r\n                var exam = this.props.passedname\r\n                //const href1 = `/#/instructor-edit-essay?${new URLSearchParams({ exam }).toString()}?${new URLSearchParams({ question }).toString()}`;\r\n                const href1 = `/#/instructor-edit-essay?${new URLSearchParams({ exam, question }).toString()}`;\r\n            return(\r\n                 <div>\r\n                    <Form.Label  >Question {index+1}: {ExamEssay[index]}  </Form.Label>\r\n                    \r\n                    <Form.Label><textarea placeholder=\"Enter Answer Here\" value={this.state.CorrectAnswerList[index]} disabled style={{width:\"600px\"}}></textarea></Form.Label>\r\n\r\n                    <Row>\r\n                            <Form.Label style={{width:'50%',margin: '15px 15px 15px 15px'}}> ILO:{this.state.ILOList[index]}  </Form.Label>\r\n                            <Form.Label style={{width:'40%',margin: '15px 15px 15px 15px'}}> Grade:{this.state.GradeList[index]} </Form.Label>\r\n                    </Row>\r\n\r\n                    <Button style={{width:'10%',margin: '10px 10px 10px 10px',float:'right'}} size=\"sm\" variant=\"danger\"\r\n                    onClick={()=>{this.DeleteEssay(question)}}  >Delete</ Button>\r\n                    <Button style={{width:'10%',margin: '10px 10px 10px 10px',float:'right'}} href={href1} size=\"sm\" variant=\"primary\" >Edit</ Button>\r\n                    <br>\r\n                    </br>\r\n                    <br>\r\n                    </br>\r\n                </div>\r\n                )\r\n            }\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {EssayHead}\r\n                {Essay}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewEditEssay;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Exam.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\n\r\nclass ViewEditTF extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[]};\r\n        this.GetTF()\r\n          \r\n    }\r\n\r\n    GetTF()\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/GetTF/'+examname+'/'+window.IDToken)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \r\n            ILOList:data.ILOList, GradeList:data.GradeList}));\r\n        \r\n    }\r\n\r\n    DeleteTF(Question)\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/DeleteTF/'+examname+'/'+Question)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({Deleted : data.Deleted}));\r\n        window.location.reload(false);\r\n    }\r\n\r\n    render() {\r\n        var ExamTF = this.state.QuestionList;\r\n\r\n        var TFHead = \"\";\r\n        var TF = \"\";\r\n        if (ExamTF.length != 0) {\r\n            TFHead = <div><Form.Label  ><b>True or False:</b></Form.Label> <br /></div>;\r\n            TF = ExamTF.map((Question, index) => {\r\n                var question = ExamTF[index]\r\n                var exam = this.props.passedname\r\n                const href1 = `/#/instructor-edit-tf?${new URLSearchParams({ exam, question }).toString()}`;\r\n                return (\r\n                    <div>\r\n                        <Form.Label  >Question {index + 1}: {ExamTF[index]}  </Form.Label>\r\n                        \r\n                        <Form.Label style={{float:\"left\", paddingRight:\"6px\"}}><input type=\"radio\" name={index} value=\"False\" disabled/>T </Form.Label> \r\n                        <Form.Label style={{ float: \"left\" ,paddingRight:\"6px\"  }}><input type=\"radio\" name={index} value=\"True\" disabled />F </Form.Label>\r\n                        <Row>\r\n                            <Form.Label style={{width:'50%',margin: '15px 15px 15px 15px'}}> ILO:{this.state.ILOList[index]}  </Form.Label>\r\n                            <Form.Label style={{width:'40%',margin: '15px 15px 15px 15px'}}> Grade:{this.state.GradeList[index]} </Form.Label>\r\n                        </Row>\r\n                        <Button style={{width:'10%',margin: '10px 10px 10px 10px',float:'right'}} size=\"sm\" variant=\"danger\"\r\n                        onClick={()=>{this.DeleteTF(question)}} >Delete</ Button>\r\n                        <Button style={{width:'10%',margin: '10px 10px 10px 10px',float:'right'}} href={href1} size=\"sm\" variant=\"primary\" >Edit</ Button>\r\n                        <br>\r\n                        </br>\r\n                        <br>\r\n                        </br>\r\n                    </div>\r\n                )\r\n            }\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {TFHead}\r\n                {TF}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewEditTF;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Exam.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\n\r\nclass ViewEditComplete extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[], Deleted:null};\r\n        this.GetComplete()\r\n        \r\n          \r\n    }\r\n\r\n    GetComplete()\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/GetComplete/'+examname+'/'+window.IDToken)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \r\n            ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n\r\n    DeleteComplete(Question)\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/DeleteComplete/'+examname+'/'+Question)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({Deleted : data.Deleted}));\r\n        window.location.reload(false);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        var ExamComplete = this.state.QuestionList;\r\n\r\n        var CompleteHead = \"\";\r\n        var Complete = \"\";\r\n        var i=0\r\n        if (ExamComplete.length != 0) {\r\n            CompleteHead = <div><Form.Label  ><b>Complete:</b></Form.Label> <br /></div>;\r\n            Complete = ExamComplete.map((Question, index) => {\r\n                if (index%2==0)\r\n                {\r\n                    i+=1;\r\n                    var question = ExamComplete[index]\r\n                    var exam = this.props.passedname\r\n                    const href1 = `/#/instructor-edit-complete?${new URLSearchParams({ exam, question }).toString()}`;\r\n                    return (\r\n                        <div>\r\n                            <Form.Label  >Question {i}: </Form.Label> \r\n                            <Form.Label>  {ExamComplete[index]}   </Form.Label>\r\n                            <input type=\"text\" placeholder=\"Complete..\" value={this.state.CorrectAnswerList[index]} disabled style={{margin:\"6px\"}}/>\r\n\r\n                            \r\n                            <Row>\r\n                            <Form.Label style={{width:'50%',margin: '15px 15px 15px 15px'}}> ILO:{this.state.ILOList[index]}  </Form.Label>\r\n                            <Form.Label style={{width:'40%',margin: '15px 15px 15px 15px'}}> Grade:{this.state.GradeList[index]} </Form.Label>\r\n                            </Row>\r\n                            \r\n\r\n                            <Button style={{width:'10%',margin: '10px 10px 10px 10px',float:'right'}} size=\"sm\" variant=\"danger\" \r\n                            onClick={()=>{this.DeleteComplete(question)}} >Delete</ Button>\r\n                            <Button style={{width:'10%',margin: '10px 10px 10px 10px',float:'right'}} href={href1} size=\"sm\" variant=\"primary\">Edit</ Button>\r\n                            <br>\r\n                            </br>\r\n                            <br>\r\n                            </br>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {CompleteHead}\r\n                {Complete}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewEditComplete;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Exam.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport ViewEditMCQ from './ViewEditMCQ.js';\nimport ViewEditEssay from './ViewEditEssay.js';\nimport ViewEditTF from './ViewEditTF.js';\nimport ViewEditComplete from './ViewEditComplete.js';\n\n\n\nclass ViewEditExam extends Component {\n\n    constructor(props) {\n        super(props);\n        \n          \n    }\n\n    render() {\n\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n        const name = params.get('name');\n\n        return (\n            <div>\n    \n        <Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\n            <br />\n        <Form>\n            <ViewEditMCQ passedname={name}/>\n            <ViewEditTF passedname={name}/>\n            <ViewEditComplete passedname={name}/>\n            <ViewEditEssay passedname={name}/>\n        </Form>\n        </Container>\n            </div>\n            );\n    }\n}\n\nexport default ViewEditExam;\n","import React, { Component } from 'react';\r\nimport { HashRouter as Router, Route, Link, NavLink } from 'react-router-dom';\r\nimport SignUpForm from './Pages/SignUpForm';\r\nimport SignInForm from './Pages/SignInForm';\r\nimport Homepage from './Pages/Homepage';\r\nimport InstructorHome from './Pages/InstructorHome';\r\nimport CreateExam from './Pages/CreateExam';\r\nimport FromExisting from './Pages/FromExisting';\r\nimport ViewExams from './Pages/ViewExams';\r\nimport ViewEdit from './Pages/ViewEdit';\r\nimport ViewGrade from './Pages/ViewGrade';\r\nimport EditMCQ from './Pages/EditMCQ';\r\nimport EditTF from './Pages/EditTF';\r\nimport EditComplete from './Pages/EditComplete';\r\nimport EditEssay from './Pages/EditEssay';\r\nimport TakeExam from './Pages/TakeExam';\r\nimport StudentHome from './Pages/StudentHome';\r\nimport StudentAsk from './Pages/StudentAsk';\r\nimport StudentExams from './Pages/StudentExams';\r\nimport Exam from './Pages/Exam';\r\nimport ViewEditExam from './Pages/ViewEditExam';\r\n\r\nimport './App.css';\r\nimport { Container } from '@material-ui/core';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      \r\n      <Router basename=\"/esae-frontend/\">\r\n       <Container fixed>\r\n          <Navbar fixed=\"top\" bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand href=\"#home\">E.S.A.E</Navbar.Brand>\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link href=\"#home\">Home</Nav.Link>\r\n\r\n        </Nav>\r\n        <Form inline>\r\n          <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n          <Button variant=\"outline-info\">Search</Button>\r\n        </Form>\r\n      </Navbar>\r\n       </Container>\r\n              <Route exact path=\"/home\" component={Homepage}>\r\n              </Route>\r\n              <Route exact path=\"/\" component={Homepage}>\r\n              </Route>\r\n              <Route path=\"/sign-up\" component={SignUpForm}>\r\n              </Route>\r\n              <Route path=\"/sign-in\" component={SignInForm}>\r\n              </Route>\r\n              <Route path=\"/instructor-home\" component={InstructorHome}>\r\n              </Route>\r\n              <Route path=\"/instructor-create\" component={CreateExam}>\r\n              </Route>\r\n\t\t\t        <Route path=\"/instructor-from-exist\" component={FromExisting}>\r\n              </Route>\r\n              <Route path=\"/instructor-view-all\" component={ViewExams}>\r\n              </Route>\r\n\t\t\t        <Route path=\"/instructor-view-edit\" component={ViewEdit}>\r\n              </Route>\r\n              <Route path=\"/instructor-view-grade\" component={ ViewGrade}>\r\n              </Route>\r\n              <Route path=\"/instructor-view-edit-exam\" component={ViewEditExam}>\r\n              </Route>\r\n              <Route path=\"/instructor-exam\" component={Exam}>\r\n              </Route>\r\n\t\t\t        <Route path=\"/instructor-edit-mcq\" component={EditMCQ}>\r\n              </Route>\r\n              <Route path=\"/instructor-edit-tf\" component={EditTF}>\r\n              </Route>\r\n              <Route path=\"/instructor-edit-complete\" component={EditComplete}>\r\n              </Route>\r\n              <Route path=\"/instructor-edit-essay\" component={EditEssay}>\r\n              </Route>\r\n\t\t\t  \r\n              <Route path=\"/student-home\" component={StudentHome}>\r\n              </Route>\r\n              <Route path=\"/student-ask\" component={StudentAsk}>\r\n              </Route>\r\n              <Route path=\"/student-view-all\" component={StudentExams}>\r\n              </Route>\r\n              <Route path=\"/student-take-exam\" component={TakeExam}>\r\n              </Route>\r\n    \r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}