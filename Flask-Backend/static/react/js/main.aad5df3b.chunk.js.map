{"version":3,"sources":["Pages/student.png","Pages/instructor.png","Pages/SignUpForm.js","Pages/SignInForm.js","Pages/Homepage.js","Pages/InstructorHome.js","Pages/CreateExam.js","Pages/FromExisting.js","Pages/ViewExams.js","Pages/ViewEdit.js","Pages/ViewGrade.js","Pages/EditMCQ.js","Pages/EditTF.js","Pages/EditComplete.js","Pages/EditEssay.js","Pages/TakeMCQ.js","Pages/TakeEssay.js","Pages/TakeTF.js","Pages/TakeComplete.js","Pages/TakeExam.js","Pages/StudentHome.js","Pages/StudentAsk.js","Pages/StudentExams.js","Pages/ExamMCQ.js","Pages/ExamEssay.js","Pages/ExamTF.js","Pages/ExamComplete.js","Pages/Exam.js","Pages/ViewEditMCQ.js","Pages/ViewEditEssay.js","Pages/ViewEditTF.js","Pages/ViewEditComplete.js","Pages/ViewEditExam.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SignUpForm","props","state","value","SignUpResult","Identity","UserName","Name","Password","fetch","then","response","json","this","setState","SignIn","params","URLSearchParams","window","location","hash","split","get","Authenticate","document","getElementById","style","display","alert","instructor_in","instructor","toString","student_in","student","name","href1","class","id","Modal","Dialog","Header","Title","Body","Footer","Button","variant","onClick","event","href","className","type","placeholder","SignUpStudentInstructor","Component","SignInForm","SignInResult","ID","IDToken","instructor_up","student_up","home","username","SignInStudentInstructor","Homepage","Container","textAlign","Row","justifyContent","Col","Card","bg","width","Img","src","require","Text","size","InstructorHome","fullname","GetName","data","href2","href3","href4","href5","handleCreate","CreateExam","answer","MCQreturn","Completereturn","TFreturn","Essayreturn","finished","ExamTitleBOX","ExamMCQCounter","ExamMCQQuestions","ExamMCQChoices","ExamComplete","ExamTF","ExamEssay","handleChange","bind","handleSubmit","target","ExamTitle","Question","Answers","CorrectAns","Grade","ILO","MCQReturn","handleFinishQuestion","FetchMCQ","Question1","Question2","Answer","CompleteReturn","FetchComplete","TFReturn","FetchTF","EssayReturn","FetchEssay","ChoiceCounter","x","createElement","setAttribute","innerHTML","appendChild","y","innerText","z","removeChild","push","i","textContent","reset","$","empty","FinishQuestionAlert","Alert","key","hideAlert","float","handleFinishExam","Form","Group","controlId","Control","handleConfirm","height","backgroundColor","overflow","Label","as","margin","onChange","hidden","handleAddChoice","handleDeleteChoice","SubmitMCQ","SubmitComplete","SubmitTrueFalse","SubmitEssay","FromExisting","Mixreturn","QuestionList","CounterList","AnswerList","CorrectAnswerList","ILOList","GradeList","GetILO","GetInstUsername","ILO_List","QuestionType","Number","MixQues","FetchMix","closeButton","map","fbb","required","MixQuestion","ViewExams","Exams","ans","names","nameslist","ListGroup","Item","action","ViewEdit","Deleted","FetchDelete","reload","disabled","DeleteExam","ViewGrade","Grades","GetExams","GradeExam","showProgress","FetchGrade","Spinner","animation","role","EditMCQ","CorrectAnswer","IsUpdated","OldQuestion","Autofill","exam","question","NewQuestion","NewAnswers","NewCorrectAns","NewILO","NewGrade","Updated","FetchUpdateMCQ","GetMCQInfo","UpdateMCQ","EditTF","FetchUpdateTF","GetTFInfo","UpdateTrueFalse","EditComplete","OldQuestion1","OldQuestion2","NewQuestion1","NewQuestion2","FetchUpdateComp","GetCompleteInfo","UpdateComplete","EditEssay","FetchUpdateEssay","GetEssayInfo","UpdateEssay","TakeMCQ","GetMCQ","MCQQuestions","MCQAnswers","examname","passedname","ansGroup","length","val","r","MCQHead","choicesNumber","choice","index","TakeEssay","GetEssay","EssayQuestions","EssayAnswers","EssayCount","EssayHead","Essay","answerid","TakeTF","GetTF","TFQuestions","TFAnswers","TFHead","TF","paddingRight","TakeComplete","GetComplete","CompleteQuestions","CompleteAnswers","CompleteCount","CompleteHead","Complete","TakeExam","Submit","MCQList","CompleteList","TFList","EssayList","successful","FetchSubmitExam","GetNamyByID","handleSubmitAnswers","SubmitStudentExam","StudentHome","StudentName","flexGrow","StudentAsk","StudentExams","ExamMCQ","passedid","inline","Exam","ViewEditMCQ","MCQCounter","MCQChoices","DeleteMCQ","ViewEditEssay","DeleteEssay","ViewEditTF","DeleteTF","ViewEditComplete","DeleteComplete","ViewEditExam","App","basename","fixed","Navbar","Brand","Nav","Link","exact","path","component","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"js/main.aad5df3b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"media/student.d3b74d64.png\";","module.exports = __webpack_public_path__ + \"media/instructor.9bef3f3f.png\";","import React, { Component } from 'react';\r\nimport { HashRouter as Router, Route, Link, NavLink } from 'react-router-dom';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\n\r\nclass SignUpForm extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {value: '', SignUpResult:null};\r\n\r\n    }\r\n\r\n    async Authenticate(Identity, UserName, Name, Password)\r\n    {\r\n      const response = await fetch('/SignUpStudentInstructor/'+Identity+'/'+UserName+'/'+Name+'/'+Password).then(response => response.json());\r\n      this.setState({SignUpResult:response.SignIn});\r\n    }\r\n    async SignUpStudentInstructor(UserName, Name, Password)\r\n    {\r\n      var Identity = 0\r\n      const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n      if(params.get('student'))\r\n      {\r\n        Identity='student'\r\n      }\r\n      else if (params.get('instructor'))\r\n      {\r\n        Identity='instructor'\r\n      }\r\n      await this.Authenticate(Identity, UserName, Name, Password)\r\n      if (this.state.SignUpResult == \"Added successfully\")\r\n      {\r\n        document.getElementById('SignupFinish').style.display='block';\r\n      }\r\n      else if (this.state.SignUpResult == \"Error\")\r\n      {\r\n        alert(\"Unsuccessful process, please try again. \")\r\n      }\r\n      \r\n    }\r\n\r\n\r\n    render() {\r\n      const instructor=\"instructor\";\r\n      const student=\"student\";\r\n      const instructor_in = `/#/sign-in?${new URLSearchParams({instructor}).toString()}`;\r\n      const student_in = `/#/sign-in?${new URLSearchParams({student}).toString()}`;\r\n      const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n      var name = \"\";\r\n      if(params.get('student'))\r\n      {\r\n        name=params.get('student')\r\n        \r\n      }\r\n      else if (params.get('instructor'))\r\n      {\r\n        name=params.get('instructor')\r\n        \r\n      }\r\n      var href1=\"\";\r\n      if (name==\"student\")\r\n      {\r\n        href1=student_in;\r\n      }\r\n      else if (name==\"instructor\")\r\n      {\r\n        href1=instructor_in\r\n      }\r\n      else\r\n      {\r\n        href1=\"#/sign-in\";\r\n      }\r\n        return (\r\n          <div>\r\n\r\n            <div style={{display:'none'}} class=\"modal-custom\" id=\"SignupFinish\">\r\n            <Modal.Dialog  >\r\n                <Modal.Header >\r\n                <Modal.Title>Sign Up Process</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                  Welcome {window.Name}, you have successfully signed up, now please login with your credentials\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button variant=\"primary\" onClick={event =>  window.location.href='#/'} >Ok</Button>\r\n              </Modal.Footer>\r\n            </Modal.Dialog>\r\n            </div>\r\n\r\n\r\n            <form className=\"signin-forum-container\">\r\n              <h1>Sign Up</h1><br />\r\n              <input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Name\" /><br />\r\n              <input type=\"text\" name=\"username\" id=\"username\" placeholder=\"User Name [must be unique]\" /><br />\r\n              <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" /><br />\r\n              \r\n              <Button variant=\"primary\" \r\n              onClick={()=>{this.SignUpStudentInstructor(document.getElementById('username').value, document.getElementById('name').value,\r\n              document.getElementById('password').value)}}>Sign Up</Button><br />\r\n              <a href={href1}>Already a member? Sign in now!</a>\r\n            </form>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignUpForm;\r\n","import React, { Component } from 'react';\r\nimport { HashRouter as Router, Route, Link, NavLink } from 'react-router-dom';\r\nimport './signin.css';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\n\r\nclass SignInForm extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {value: '', SignInResult:null, Name:null, ID:null};\r\n      window.IDToken=[];\r\n\r\n    }\r\n\r\n    async Authenticate(Identity, UserName, Password)\r\n    {\r\n      const response = await fetch('/SignInStudentInstructor/'+Identity+'/'+UserName+'/'+Password).then(response => response.json());\r\n      this.setState({SignInResult:response.SignIn, ID:response.ID});\r\n    }\r\n    async SignInStudentInstructor(UserName, Password)\r\n    {\r\n      this.state.Name=UserName;\r\n      var Identity = 0\r\n      const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n      if(params.get('student'))\r\n      {\r\n        Identity='student'\r\n      }\r\n      else if (params.get('instructor'))\r\n      {\r\n        Identity='instructor'\r\n      }\r\n      await this.Authenticate(Identity, UserName, Password)\r\n      //globalThis.window.IDToken=this.state.ID\r\n      //Object.freeze(globalThis.window.IDToken)\r\n      window.IDToken = this.state.ID\r\n      if (this.state.SignInResult == \"Found\")\r\n      {\r\n        document.getElementById('SigninFinish').style.display='block';\r\n        \r\n      }\r\n      else if (this.state.SignInResult == \"Error\")\r\n      {\r\n        alert(\"Invalid credentials\")\r\n      }\r\n      \r\n      \r\n    }\r\n\r\n    RouteAfterSignIn()\r\n    {\r\n\r\n    }\r\n    render() {\r\n      const instructor=\"instructor\";\r\n      const student=\"student\";\r\n      const instructor_up = `/#/sign-up?${new URLSearchParams({instructor}).toString()}`;\r\n      const student_up = `/#/sign-up?${new URLSearchParams({student}).toString()}`;\r\n      const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n      var name = \"\";\r\n      var home = \"\";\r\n      if(params.get('student'))\r\n      {\r\n        name=params.get('student')\r\n        window.Name=this.state.Name\r\n        var username=this.state.Name\r\n        //alert(username)\r\n        home = `#/student-home?${new URLSearchParams({username}).toString()}`;\r\n      }\r\n      else if (params.get('instructor'))\r\n      {\r\n        name=params.get('instructor')\r\n        window.Name=this.state.Name\r\n        var username=this.state.Name\r\n        var IDToken = this.state.ID\r\n        home = `#/instructor-home?${new URLSearchParams({username,IDToken}).toString()}`;\r\n        \r\n      }\r\n      var href1=\"\";\r\n      if (name==\"student\")\r\n      {\r\n        href1=student_up;\r\n      }\r\n      else if (name==\"instructor\")\r\n      {\r\n        href1=instructor_up\r\n      }\r\n      else\r\n      {\r\n        href1=\"#/sign-up\";\r\n      }\r\n        return (\r\n          <div>\r\n            <div style={{display:'none'}} class=\"modal-custom\" id=\"SigninFinish\">\r\n            <Modal.Dialog  >\r\n                <Modal.Header >\r\n                <Modal.Title>Authentication</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                  Welcome {window.Name} you have been successfully authenticated\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button variant=\"primary\" onClick={event =>  window.location.href=home} >Ok</Button>\r\n              </Modal.Footer>\r\n            </Modal.Dialog>\r\n            </div>\r\n            <form className=\"signin-forum-container\" >\r\n            <h1>Sign In</h1><br />\r\n            <input type=\"text\" name=\"username\" id=\"username\" placeholder=\"User Name\" /><br />\r\n            <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" /><br />\r\n            <a href=\"#\">Forgot Your Password?</a><br />\r\n            <Button variant=\"primary\" \r\n            onClick={()=>{this.SignInStudentInstructor(document.getElementById('username').value, document.getElementById('password').value)}} >Sign In</Button><br />\r\n            <a href={href1}>Not a member? Sign up now!</a>\r\n          </form>\r\n          </div>\r\n          \r\n        );\r\n    }\r\n}\r\n\r\nexport default SignInForm;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './homestyle.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nclass Homepage extends Component {\r\n  \r\n    render() {\r\n        const instructor=\"instructor\";\r\n        const student=\"student\";\r\n        const instructor_up = `/#/sign-up?${new URLSearchParams({instructor}).toString()}`;\r\n        const student_up = `/#/sign-up?${new URLSearchParams({student}).toString()}`;\r\n        const instructor_in = `/#/sign-in?${new URLSearchParams({instructor}).toString()}`;\r\n        const student_in = `/#/sign-in?${new URLSearchParams({student}).toString()}`;\r\n        return (\r\n        <div>\r\n <h1>Welcome to Exam Solver and Evaluator</h1>\r\n           <Container style={{textAlign:'center'}}>\r\n            <Row style={{ justifyContent:'space-around',display:'inline-flex'}}>\r\n                <Col  >\r\n                <Card bg=\"light\" style={{ width: '15rem' }}>\r\n            <Card.Img variant=\"top\" src={require('./student.png')} />\r\n            <Card.Body style={{ textAlign:'center'}}>\r\n                <Card.Title>I'm a Student</Card.Title>\r\n                <Card.Text>\r\n                Now you can Get Question's Answers and Take Exams with One Click\r\n                </Card.Text>\r\n                \r\n                <Button href={student_up} size=\"lg\" variant=\"success\">Join Now!</Button>\r\n                <Button href={student_in} size=\"lg\" variant=\"primary\">Sign in!</Button>\r\n            </Card.Body>\r\n            </Card>\r\n            </Col>\r\n                <Col >\r\n                <Card bg=\"light\" style={{ width: '15rem' }}>\r\n            <Card.Img variant=\"top\" src={require('./instructor.png')} />\r\n            <Card.Body style={{ textAlign:'center'}}>\r\n                <Card.Title>I'm an Instructor</Card.Title>\r\n                <Card.Text>\r\n                Now you can Form your Exams and Evaluate it with One Click\r\n                </Card.Text>\r\n                <Button href={instructor_up} size=\"lg\" variant=\"danger\">Join Now!</Button>\r\n                <Button href={instructor_in} size=\"lg\" variant=\"primary\">Sign in!</Button>\r\n            </Card.Body>\r\n            </Card>\r\n            </Col>\r\n            </Row>\r\n\r\n        </Container>\r\n        \r\n        \r\n\r\n            \r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Homepage;\r\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './InstructorHome.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport './SignInForm';\n\nclass InstructorHome extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {value: '', fullname:null, id:null};\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n        const username=params.get('username')\n        const IDToken=params.get('IDToken')\n        this.state.id=IDToken\n        //alert(this.state.id)\n        this.GetName(username)\n        \n  \n    }\n\n    GetName(username)\n    {\n      fetch('/GetInstName/'+username)\n        .then(response => response.json())\n        .then(data => this.setState({fullname : data.name}));\n    }\n\n    handleCreate()\n    {\n        if (document.getElementById('BtnNew').style.display=='block'||document.getElementById('BtnExist').style.display=='block')\n        {\n            document.getElementById('BtnNew').style.display='none';\n            document.getElementById('BtnExist').style.display='none';\n        }\n        else\n        {\n            document.getElementById('BtnNew').style.display='block';\n            document.getElementById('BtnExist').style.display='block';\n        }\n    }   \n\n    render() {\n        const IDToken = this.state.id;\n        const href1 = `/#/instructor-view-all?${new URLSearchParams({IDToken}).toString()}`;\n        const href2 = `/#/instructor-view-edit?${new URLSearchParams({IDToken}).toString()}`;\n        const href3 = `/#/instructor-view-grade?${new URLSearchParams({IDToken}).toString()}`;\n        const href4 = `/#/instructor-create?${new URLSearchParams({IDToken}).toString()}`;\n        const href5 = `/#/instructor-from-exist?${new URLSearchParams({IDToken}).toString()}`;\n        return (\n        <div>\n          \n          <h1>Welcome {this.state.fullname}</h1>\n    <br />\n    <Container>\n     <Row style={{ justifyContent:'space-evenly'}}>\n         <Col ><Button onClick={this.handleCreate} size=\"lg\"variant=\"primary\">Create Exam</Button></Col>\n        <Col  ><Button href={href1} size=\"lg\" variant=\"primary\">View Exams</Button></Col>\n         <Col  ><Button href={href2} size=\"lg\"variant=\"primary\">Edit Exam</Button></Col>\n         <Col  ><Button href={href3} size=\"lg\"variant=\"primary\">Grade Exam</Button></Col>\n     </Row>\n     <Row style={{width:'17%'}}>\n        \n         <Col ><Button id=\"BtnNew\"style={{display:'none'}} href={href4} size=\"sm\"variant=\"primary\">New Exam</Button></Col>\n       \n     </Row>\n     <Row style={{width:'17%'}}>\n        \n        <Col ><Button id=\"BtnExist\" style={{display:'none'}} href={href5} size=\"sm\"variant=\"primary\">From Existing Exams</Button></Col>\n    </Row>\n\n\n </Container>\n            \n          </div>\n        );\n    }\n}\n\nexport default InstructorHome;\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\nimport './CreateExam.css';\r\nimport './Popup.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport $ from 'jquery'; \r\nimport Alert from 'react-bootstrap/Alert'\r\nimport Overlay from 'react-bootstrap/Overlay'\r\nimport Popover from 'react-bootstrap/Popover'\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\n\r\nclass CreateExam extends Component {\r\n  \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '',answer:null, MCQreturn:null,Completereturn:null, TFreturn:null, Essayreturn:null,finished:false, id:null};\r\n        window.ExamTitleBOX=[];\r\n        window.ExamMCQCounter=[];\r\n        window.ExamMCQQuestions=[];\r\n        window.ExamMCQChoices=[];\r\n        window.ExamComplete=[];\r\n        window.ExamTF=[];\r\n        window.ExamEssay=[];\r\n        //alert(window.IDToken)\r\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n        const ID = params.get('IDToken');\r\n        this.state.id=ID\r\n        \r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n  \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n      }\r\n      handleChange (event) {\r\n        this.setState({value: event.target.value});\r\n      }\r\n\r\n      async FetchMCQ(ExamTitle,Question,Answers,CorrectAns,Grade,ILO)\r\n      {\r\n        const response = await fetch('/AddMCQ/'+ExamTitle+'/'+this.state.id+'/'+Question+'/'+Answers+'/'+CorrectAns+'/'+Grade+'/'+ILO).then(response => response.json());\r\n        this.setState({MCQreturn:response.MCQReturn});\r\n      }\r\n\r\n      async SubmitMCQ(ExamTitle,Question,Answers,CorrectAns,Grade,ILO)\r\n      {\r\n        this.handleFinishQuestion()\r\n        // console.log(\"Question\",question)\r\n        await this.FetchMCQ(ExamTitle,Question,Answers,CorrectAns,Grade,ILO)\r\n        this.setState({finished: true});\r\n        if (this.state.MCQreturn == 'Question is added successfully')\r\n        {alert(this.state.MCQreturn)}\r\n        else if (this.state.MCQreturn == 'There was an issue adding question')\r\n        {alert(this.state.MCQreturn)}\r\n        else if (this.state.MCQreturn == 'Question already exists in the exam')\r\n        {alert(this.state.MCQreturn)}\r\n        else if (this.state.MCQreturn == 'There was an issue creating the exam')\r\n        {alert(this.state.MCQreturn)}\r\n        \r\n      }\r\n      \r\n      async FetchComplete(ExamTitle,Question1,Question2,Answer,Grade,ILO)\r\n      {\r\n        const response = await fetch('/AddComplete/'+ExamTitle+'/'+this.state.id+'/'+Question1+'/'+Question2+'/'+Answer+'/'+Grade+'/'+ILO).then(response => response.json());\r\n        this.setState({Completereturn:response.CompleteReturn});\r\n\r\n      }\r\n\r\n      async SubmitComplete(ExamTitle,Question1,Question2,Answer,Grade,ILO)\r\n      {\r\n        this.handleFinishQuestion()\r\n        // console.log(\"Question\",question)\r\n        await this.FetchComplete(ExamTitle,Question1,Question2,Answer,Grade,ILO)\r\n        this.setState({finished: true});\r\n        if (this.state.Completereturn == 'Question is added successfully')\r\n        {alert(this.state.Completereturn)}\r\n        else if (this.state.Completereturn == 'There was an issue adding question')\r\n        {alert(this.state.Completereturn)}\r\n        else if (this.state.Completereturn == 'Question already exists in the exam')\r\n        {alert(this.state.Completereturn)}\r\n        else if (this.state.Completereturn == 'There was an issue creating the exam')\r\n        {alert(this.state.Completereturn)}\r\n      }\r\n\r\n      async FetchTF(ExamTitle, Question,Answer,Grade,ILO)\r\n      {\r\n        const response = await fetch('/AddTrueFalse/'+ExamTitle+'/'+this.state.id+'/'+Question+'/'+Answer+'/'+Grade+'/'+ILO).then(response => response.json());\r\n        this.setState({TFreturn:response.TFReturn});\r\n      }\r\n\r\n      async SubmitTrueFalse(ExamTitle, Question,Answer,Grade,ILO)\r\n      {\r\n        //alert(window.IDToken)\r\n        this.handleFinishQuestion()\r\n        // console.log(\"Question\",question)\r\n        await this.FetchTF(ExamTitle, Question,Answer,Grade,ILO)\r\n        this.setState({finished: true});\r\n        if (this.state.TFreturn == 'Question is added successfully')\r\n        {alert(this.state.TFreturn)}\r\n        else if (this.state.TFreturn == 'There was an issue adding question')\r\n        {alert(this.state.TFreturn)}\r\n        else if (this.state.TFreturn == 'Question already exists in the exam')\r\n        {alert(this.state.TFreturn)}\r\n        else if (this.state.TFreturn == 'There was an issue creating the exam')\r\n        {alert(this.state.TFreturn)}\r\n      }\r\n\r\n      async FetchEssay(ExamTitle, Question,Answer,Grade,ILO)\r\n      {\r\n        const response = await fetch('/AddEssay/'+ExamTitle+'/'+this.state.id+'/'+Question+'/'+Answer+'/'+Grade+'/'+ILO).then(response => response.json());\r\n        this.setState({Essayreturn:response.EssayReturn});\r\n      }\r\n\r\n      async SubmitEssay(ExamTitle, Question,Answer,Grade,ILO)\r\n      {\r\n        this.handleFinishQuestion()\r\n        // console.log(\"Question\",question)\r\n        // fetch('/AddEssay/'+ExamTitle+'/'+this.state.id+'/'+Question+'/'+Answer+'/'+Grade+'/'+ILO)\r\n        //   .then(response => response.json())\r\n        //   .then(data => this.setState({Essayreturn : data.EssayReturn}));\r\n        await this.FetchEssay(ExamTitle, Question,Answer,Grade,ILO)\r\n        this.setState({finished: true});\r\n        if (this.state.Essayreturn == 'Question is added successfully')\r\n        {alert(this.state.Essayreturn)}\r\n        else if (this.state.Essayreturn == 'There was an issue adding question')\r\n        {alert(this.state.Essayreturn)}\r\n        else if (this.state.Essayreturn == 'Question already exists in the exam')\r\n        {alert(this.state.Essayreturn)}\r\n        else if (this.state.Essayreturn == 'There was an issue creating the exam')\r\n        {alert(this.state.Essayreturn)}\r\n      }\r\n\r\n      handleSubmit(event)\r\n      {\r\n        this.setState({finished: false});\r\n        if (this.state.value=='MCQ')\r\n        {\r\n            document.getElementById('formExamMCQ').style.display='block';\r\n            document.getElementById('formExamComplete').style.display='none';\r\n            document.getElementById('formExamTF').style.display='none';\r\n            document.getElementById('formExamEssay').style.display='none';\r\n           \r\n            window.ChoiceCounter=0;\r\n            \r\n        }\r\n      else  if (this.state.value=='Complete')\r\n        {\r\n            document.getElementById('formExamComplete').style.display='block';\r\n            document.getElementById('formExamMCQ').style.display='none';\r\n            document.getElementById('formExamTF').style.display='none';\r\n            document.getElementById('formExamEssay').style.display='none';\r\n         \r\n        }\r\n       else if (this.state.value=='T and F')\r\n        {\r\n          document.getElementById('formExamTF').style.display='block';\r\n            document.getElementById('formExamComplete').style.display='none';\r\n            document.getElementById('formExamMCQ').style.display='none';\r\n            document.getElementById('formExamEssay').style.display='none';\r\n           \r\n        }\r\n       else if (this.state.value=='Essay Question')\r\n        {\r\n          document.getElementById('formExamEssay').style.display='block';\r\n          document.getElementById('formExamTF').style.display='none';\r\n            document.getElementById('formExamComplete').style.display='none';\r\n            document.getElementById('formExamMCQ').style.display='none';\r\n          \r\n        }\r\n        else\r\n        {\r\n          document.getElementById('formExamMCQ').style.display='none';\r\n          document.getElementById('formExamComplete').style.display='none';\r\n          document.getElementById('formExamTF').style.display='none';\r\n          document.getElementById('formExamEssay').style.display='none';\r\n        \r\n        }\r\n           \r\n      }\r\n      handleAddChoice()\r\n      { \r\n        \r\n        var x = document.createElement(\"div\");\r\n        x.setAttribute(\"class\", \"form-check form-check-inline\");\r\n        x.setAttribute(\"id\",\"choice\"+window.ChoiceCounter);\r\n        x.innerHTML='<input type=\"radio\" disabled class=\"form-check-input\">'+\r\n        '<label title for=\"formExamMCQ\" id= \"'+\"choice\"+window.ChoiceCounter+'\" class=\"form-check-label\">'+ document.getElementById('formChoiceTextbox').value+'</label>';\r\n        document.getElementById('ChoicesDiv').appendChild(x);\r\n        \r\n        var y=document.createElement(\"option\");\r\n        y.innerText=document.getElementById('formChoiceTextbox').value;\r\n        y.setAttribute(\"id\",\"option\"+window.ChoiceCounter);\r\n        document.getElementById('ChoiceModelAns').appendChild(y);\r\n        document.getElementById('formChoiceTextbox').value='';\r\n        window.ChoiceCounter++;\r\n      }\r\n      handleDeleteChoice()\r\n      {\r\n        window.ChoiceCounter--;\r\n        var y=document.getElementById('choice'+window.ChoiceCounter);\r\n        var z=document.getElementById('option'+window.ChoiceCounter);\r\n        document.getElementById('ChoicesDiv').removeChild(y);\r\n        document.getElementById('ChoiceModelAns').removeChild(z);\r\n      }\r\n\r\n      handleFinishQuestion()\r\n      {\r\n        if (document.getElementById('QuestionType').value=='MCQ')\r\n        {\r\n          window.ExamMCQQuestions.push(document.getElementById('TextMCQuestion').value);\r\n          window.ExamMCQCounter.push(window.ChoiceCounter);\r\n          for(var i=0;i<window.ChoiceCounter;i++)\r\n          {\r\n            \r\n            window.ExamMCQChoices.push(document.getElementById('choice'+i).textContent)\r\n          }\r\n\r\n\r\n        }\r\n        if (document.getElementById('QuestionType').value=='Complete')\r\n        {\r\n          \r\n\r\n          window.ExamComplete.push(document.getElementById('TextComplete1').value)\r\n          window.ExamComplete.push(document.getElementById('TextComplete2').value)\r\n      \r\n        }\r\n        if (document.getElementById('QuestionType').value=='T and F')\r\n        {\r\n          window.ExamTF.push(document.getElementById('TextTF').value)\r\n        }\r\n        if (document.getElementById('QuestionType').value=='Essay Question')\r\n        {\r\n          window.ExamEssay.push(document.getElementById('TextEssay').value)\r\n        }\r\n        document.getElementById(\"ExamForm\").reset();\r\n        $(\"#ChoiceModelAns\").empty();\r\n        $(\"#ChoicesDiv\").empty();\r\n        var y=document.createElement(\"option\");\r\n        y.innerText=\"Choose Model Answer\"\r\n        document.getElementById('ChoiceModelAns').appendChild(y);\r\n        document.getElementById('formExamMCQ').style.display='none';\r\n          document.getElementById('formExamComplete').style.display='none';\r\n          document.getElementById('formExamTF').style.display='none';\r\n          document.getElementById('formExamEssay').style.display='none';\r\n    \r\n         \r\n         \r\n      }\r\n     \r\n      handleFinishExam()\r\n      {\r\n        \r\n        window.ExamTitle.push(document.getElementById('TextExamTitle').value);\r\n        document.getElementById('ExamFinishBox').style.display='block';\r\n        \r\n      }\r\n      handleConfirm()\r\n      {\r\n          \r\n          if (document.getElementById('TextExamTitle').value==\"\")\r\n          {\r\n              alert(\"You Must Enter an Exam Title First !\")\r\n          }\r\n          else\r\n          {\r\n              window.ExamTitleBOX=document.getElementById('TextExamTitle').value\r\n              document.getElementById('ExamtitleBox').style.display='none';\r\n          }\r\n          \r\n      }\r\n      hideAlert(){\r\n        document.getElementById(\"FinishQuestionAlert\").style.display=\"none\";\r\n      }\r\n    render() {\r\n      var FinishQuestionAlert = \"\";\r\n      if (this.state.finished==true)\r\n      {\r\n        FinishQuestionAlert = <div id=\"FinishQuestionAlert\"> <Alert  key=\"FinishQuestionAlert\" variant='success'>Successfully Added Question to Exam<div className=\"d-flex justify-content-end\">\r\n        <Button onClick={this.hideAlert} variant=\"outline-success\">\r\n          Close \r\n        </Button>\r\n        </div></Alert>\r\n        <Button style={{ float:'right'}}onClick={this.handleFinishExam}   variant=\"success\" >Finish Exam</Button>\r\n        </div>;\r\n        \r\n      }\r\n      else\r\n      {\r\n        FinishQuestionAlert =\"\";\r\n      }\r\n        return (\r\n        <div>\r\n          <div style={{display:'none'}} class=\"modal-custom\" id=\"ExamFinishBox\">\r\n          <Modal.Dialog  >\r\n              <Modal.Header >\r\n              <Modal.Title>Exam Alert</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                Exam \"{window.ExamTitleBOX}\" Created Successfully\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"primary\" onClick={event =>  window.location.href='#/instructor-home'} >Ok</Button>\r\n            </Modal.Footer>\r\n          </Modal.Dialog>\r\n          </div>\r\n          <div class=\"modal-custom\" id=\"ExamtitleBox\">\r\n          <Modal.Dialog  >\r\n              <Modal.Header >\r\n              <Modal.Title>Exam title</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <Form.Group controlId=\"formExamTitle\">\r\n                <Form.Control type=\"text\" id='TextExamTitle' placeholder=\"Enter Exam Title\" />\r\n                <Form.Text className=\"text-muted\">\r\n                Ex: Marketing Midterm Spring 2020\r\n                </Form.Text>\r\n                </Form.Group>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"primary\" onClick={this.handleConfirm} >Confirm</Button>\r\n            </Modal.Footer>\r\n          </Modal.Dialog>\r\n          </div>\r\n              \r\n    <Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\r\n        <br />\r\n    <Form id=\"ExamForm\" style={{backgroundColor:'white'}}>\r\n  <Form.Group controlId=\"formQuestionType\">\r\n    <Form.Label>Question Type</Form.Label>\r\n    <Row>\r\n    <Form.Control id=\"QuestionType\" as=\"select\" style={{width:'35%',margin: '15px 15px 15px 15px'}} value={this.state.value} onChange={this.handleChange} placeholder=\"Choose Question Type\">\r\n    <option>Choose Question Type</option>\r\n    <option>MCQ</option>\r\n    <option>Complete</option>\r\n    <option>T and F</option>\r\n    <option>Essay Question</option>\r\n    <option hidden>Comparison</option>\r\n    </Form.Control>\r\n    <Button variant=\"primary\" id=\"QuestionTypeBtn\" onClick={this.handleSubmit} >Submit</Button>\r\n   \r\n\r\n    </Row>\r\n    <Form.Text className=\"text-muted\">\r\n      Note: You can change Question Type at anytime from above\r\n    </Form.Text>\r\n\r\n    {FinishQuestionAlert}\r\n\r\n  </Form.Group>\r\n  \r\n  <Form.Group  style={{display:'none'}} id=\"formExamMCQ\" controlId=\"formExamMCQ\">\r\n \r\n    <Form.Label>Multiple Choice Question</Form.Label>\r\n    <Row>\r\n    <Form.Control id=\"MCQILO\"  size=\"sm\" type=\"text\" style={{width:'50%',margin: '15px 15px 15px 15px'}} placeholder=\"Enter Question ILO\"></Form.Control>\r\n  <Form.Control   id=\"MCQGrade\" size=\"sm\" style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\" placeholder=\"Enter Your Grade\" />\r\n   \r\n   </Row>\r\n    <Form.Control size=\"sm\" id=\"TextMCQuestion\" type=\"text\" placeholder=\"Enter Your Question\" />\r\n    <br />\r\n    <Form.Control  size=\"sm\" id=\"formChoiceTextbox\" type=\"text\" placeholder=\"Enter a Choice\" />\r\n    <Button  size=\"sm\" variant=\"primary\" onClick={this.handleAddChoice}>Add Choice</Button>\r\n    <Button id=\"btnDeleteChoice\"  size=\"sm\" variant=\"danger\" onClick={this.handleDeleteChoice}>Delete Choice</Button>\r\n    <div id=\"ChoicesDiv\"></div>\r\n    <Form.Control size=\"sm\" as=\"select\" id=\"ChoiceModelAns\" placeholder=\"Choose Model Answer\">\r\n    <option>Choose Model Answer</option>\r\n    </Form.Control>\r\n    <Button style={{ float:'right'}} variant=\"success\" onClick={()=>{this.SubmitMCQ(window.ExamTitleBOX, document.getElementById('TextMCQuestion').value, window.ExamMCQChoices, \r\n      document.getElementById('ChoiceModelAns').value, document.getElementById('MCQGrade').value,document.getElementById('MCQILO').value)\r\n      }}>Finish Question</Button>\r\n  </Form.Group>\r\n\r\n\r\n  <Form.Group style={{display:'none'}} id=\"formExamComplete\" controlId=\"formExamComplete\">\r\n   \r\n    <Form.Label>Complete Question</Form.Label>\r\n    <Row>\r\n    <Form.Control id=\"CompILO\"  size=\"sm\" type=\"text\" style={{width:'50%',margin: '15px 15px 15px 15px'}} placeholder=\"Enter Question ILO\"></Form.Control>\r\n  <Form.Control id=\"CompGrade\" size=\"sm\" style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\" placeholder=\"Enter Your Grade\" />\r\n   \r\n   </Row>\r\n    <Form.Control size=\"sm\" id=\"TextComplete1\" type=\"text\" placeholder=\"Enter Your 1st part of the Question *before the space*\" />\r\n    <Form.Control size=\"sm\"id=\"TextComplete2\" type=\"text\" placeholder=\"Enter Your 2nd part of the Question *after the space*\" />\r\n    <br />\r\n    <Form.Control size=\"sm\" id=\"AnswerComplete\" type=\"text\" placeholder=\"Enter Your Model Answer *the space*\" />\r\n    <Button style={{ float:'right'}}variant=\"success\"onClick={()=>{this.SubmitComplete(window.ExamTitleBOX,document.getElementById('TextComplete1').value, document.getElementById('TextComplete2').value, \r\n      document.getElementById('AnswerComplete').value, document.getElementById('CompGrade').value, document.getElementById('CompILO').value)}} >Finish Question</Button>\r\n    \r\n  </Form.Group>\r\n\r\n\r\n  <Form.Group style={{display:'none'}} id=\"formExamTF\" controlId=\"formExamTF\">\r\n    <Form.Label>True and False Question</Form.Label>\r\n    <Row>\r\n    <Form.Control id=\"TFIlo\"  size=\"sm\" type=\"text\" style={{width:'50%',margin: '15px 15px 15px 15px'}} placeholder=\"Enter Question ILO\"></Form.Control>\r\n   <Form.Control id=\"TFGrade\" size=\"sm\" style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\" placeholder=\"Enter Your Grade\" />\r\n   \r\n   </Row>\r\n    <Form.Control size=\"sm\" id=\"TextTF\" type=\"text\" placeholder=\"Enter Your Question\" />\r\n      <br />\r\n      <Form.Control size=\"sm\" as=\"select\" id=\"TFModelAns\" placeholder=\"Choose Model Answer\">\r\n    <option>Choose Model Answer</option>\r\n    <option>True</option>\r\n    <option>False</option>\r\n    </Form.Control>\r\n    <Button style={{ float:'right'}} variant=\"success\" \r\n    onClick={ ()=>{this.SubmitTrueFalse(window.ExamTitleBOX,document.getElementById('TextTF').value , \r\n    document.getElementById('TFModelAns').value, document.getElementById('TFGrade').value, document.getElementById('TFIlo').value)}}>Finish Question</Button>\r\n    \r\n  </Form.Group>\r\n\r\n\r\n  <Form.Group style={{display:'none'}} id=\"formExamEssay\" controlId=\"formExamEssay\">\r\n    <Form.Label>Essay Question</Form.Label>\r\n    <Row>\r\n    <Form.Control id=\"EssILO\" size=\"sm\" type=\"text\" style={{width:'50%',margin: '15px 15px 15px 15px'}} placeholder=\"Enter Question ILO\"></Form.Control>\r\n   <Form.Control id=\"EssGrade\" size=\"sm\" style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\" placeholder=\"Enter Your Grade\" />\r\n   \r\n   </Row>\r\n    <Form.Control size=\"sm\" id=\"TextEssay\" type=\"text\" placeholder=\"Enter Your Essay Question\" />\r\n   <br />\r\n    <Form.Control size=\"sm\" as=\"textarea\"id=\"AnswerEssay\" placeholder=\"Enter Your Model Answer\" />\r\n    <Button style={{ float:'right'}} variant=\"success\" \r\n    onClick={()=>{this.SubmitEssay(window.ExamTitleBOX,document.getElementById('TextEssay').value , \r\n    document.getElementById('AnswerEssay').value, document.getElementById('EssGrade').value, document.getElementById('EssILO').value)}}\r\n    >Finish Question</Button>\r\n    \r\n  </Form.Group>\r\n</Form>\r\n\r\n </Container>\r\n            \r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateExam;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './CreateExam.css';\r\nimport './Popup.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport Alert from 'react-bootstrap/Alert'\r\nclass FromExisting extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {value: '',ILO:[], Mixreturn:[], QuestionList:[], CounterList:[], AnswerList:[],\r\n      CorrectAnswerList:[], ILOList:[], GradeList:[], id:null, finished:false, name:null};\r\n      const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n      const ID = params.get('IDToken');\r\n      this.state.id=ID\r\n      this.GetILO();  \r\n      this.GetInstUsername()  \r\n      \r\n    }\r\n\r\n    GetILO()\r\n    {\r\n      fetch('/GetILO/'+this.state.id)\r\n        .then(response => response.json())\r\n        .then(data => this.setState({ILO : data.ILO_List}));\r\n    }\r\n\r\n    GetInstUsername()\r\n    {\r\n      fetch('/GetInstUsername/'+this.state.id)\r\n        .then(response => response.json())\r\n        .then(data => this.setState({name : data.username}));\r\n    }\r\n\r\n    async FetchMix(ExamTitle, QuestionType, ILO, Number)\r\n    {\r\n      const response = await fetch('/MixQuestion/'+ExamTitle+'/'+this.state.id+'/'+QuestionType+'/'+ILO+'/'+Number).then(response => response.json());\r\n      this.setState({Mixreturn:response.MixQues});\r\n    }\r\n\r\n    async MixQuestion(ExamTitle, QuestionType, ILO, Number)\r\n    {\r\n      // fetch('/MixQuestion/'+ExamTitle+'/'+this.state.id+'/'+QuestionType+'/'+ILO+'/'+Number)\r\n      //   .then(response => response.json())\r\n      //   .then(data => this.setState({Mixreturn : data.MixQues}));\r\n      await this.FetchMix(ExamTitle, QuestionType, ILO, Number)\r\n      this.setState({finished: true});\r\n      if (this.state.Mixreturn == 'There was an issue, please try again')\r\n      {\r\n        alert('There was an issue, please try again')\r\n      }\r\n      else if (this.state.Mixreturn == \"Question is added successfully\")\r\n      {\r\n        alert(\"Question is added successfully\")\r\n      }\r\n      else //required number is more than the available questions in the database with the needed ilo\r\n      {\r\n        alert(this.state.Mixreturn)\r\n      }\r\n    }\r\n    handleConfirm()\r\n    {\r\n        \r\n        if (document.getElementById('TextExamTitle').value==\"\")\r\n        {\r\n            alert(\"You Must Enter an Exam Title First !\")\r\n        }\r\n        else\r\n        {\r\n            window.ExamTitleBOX=document.getElementById('TextExamTitle').value\r\n            document.getElementById('ExamtitleBox').style.display='none';\r\n        }\r\n        \r\n    }\r\n    handleTopic(){}\r\n    handleType(){}\r\n    handleAddtoExam(){}\r\n    handleFinishExam()\r\n    {\r\n      window.ExamTitleBOX=document.getElementById('TextExamTitle').value\r\n      document.getElementById('ExamFinishBox').style.display='block';\r\n      \r\n    }\r\n    hideAlert(){\r\n      document.getElementById(\"FromExsitExamForm\").style.display=\"block\";\r\n      document.getElementById(\"FromExsitExamForm\").reset();\r\n      document.getElementById(\"FinishQuestionAlert\").style.display=\"none\";\r\n    }\r\n    render() {\r\n      var FinishQuestionAlert = \"\";\r\n      if (this.state.finished==true)\r\n      {\r\n        \r\n        \r\n        FinishQuestionAlert = <div id=\"FinishQuestionAlert\"> <Alert  key=\"FinishQuestionAlert\" variant='success'>Successfully Added to Exam<div className=\"d-flex justify-content-end\">\r\n        <Button onClick={this.hideAlert} variant=\"outline-success\">\r\n          Add Again \r\n        </Button>\r\n        </div></Alert>\r\n        <Button style={{ float:'right'}} size=\"lg\" onClick={this.handleFinishExam}   variant=\"success\" >Finish Exam</Button>\r\n        </div>;\r\n        document.getElementById(\"FromExsitExamForm\").style.display=\"none\";\r\n      }\r\n      else\r\n      {\r\n        FinishQuestionAlert =\"\";\r\n      }\r\n      var IDToken = this.state.id\r\n      var username=this.state.name\r\n      const href1 = `#/instructor-home?${new URLSearchParams( {username,IDToken} ).toString()}`;\r\n        return (\r\n        <div>\r\n          <div style={{display:'none'}} class=\"modal-custom\" id=\"ExamFinishBox\">\r\n          <Modal.Dialog  >\r\n              <Modal.Header >\r\n              <Modal.Title>Exam Alert</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                Exam \"{window.ExamTitleBOX}\" Created Successfully\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"primary\" onClick={event =>  window.location.href=href1} >Ok</Button>\r\n            </Modal.Footer>\r\n          </Modal.Dialog>\r\n          </div>\r\n          <div class=\"modal-custom\" id=\"ExamtitleBox\">\r\n          <Modal.Dialog  >\r\n              <Modal.Header closeButton>\r\n              <Modal.Title>Exam title</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <Form.Group controlId=\"formExamTitle\">\r\n                <Form.Control type=\"text\" id='TextExamTitle' placeholder=\"Enter Exam Title\" />\r\n                <Form.Text className=\"text-muted\">\r\n                Ex: Marketing Midterm Spring 2020\r\n                </Form.Text>\r\n                </Form.Group>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"primary\" onClick={this.handleConfirm} >Confirm</Button>\r\n            </Modal.Footer>\r\n          </Modal.Dialog>\r\n          </div>\r\n              \r\n    <Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\r\n        <br />\r\n        {FinishQuestionAlert}\r\n    <Form style={{backgroundColor:'white'}}id=\"FromExsitExamForm\">\r\n    <Form.Label>Now you can Randomly Select Questions According to it's Topic and Type</Form.Label>\r\n    <Form.Label>Choose ILO/Topic</Form.Label>\r\n  <Form.Group controlId=\"formQuestionType\">\r\n    <Row>\r\n    <Form.Control as=\"select\" id=\"ILO\" style={{width:'50%',margin: '15px 15px 15px 15px'}} >\r\n    {this.state.ILO.map((fbb) => <option key={fbb.key} value={fbb.key} >{fbb}</option>)}\r\n    </Form.Control>\r\n\r\n\r\n    <Form.Control id=\"QuestionType\" as=\"select\" id=\"QuesType\" style={{width:'40%',margin: '15px 15px 15px 15px'}}  placeholder=\"Choose Question Type\">\r\n    <option>Choose Question Type</option>\r\n    <option>MCQ</option>\r\n    <option>Complete</option>\r\n    <option>T and F</option>\r\n    <option>Essay</option>\r\n    </Form.Control>\r\n    </Row>\r\n    <Row>\r\n   \r\n    <Form.Control required id=\"Number\"  style={{width:'50%',margin: '15px 15px 15px 15px'}} type=\"number\" placeholder=\"Enter Number of Questions Needed\" />\r\n    <Button variant=\"primary\"style={{width:'40%',margin: '15px 15px 15px 15px'}} onClick={()=>{this.MixQuestion(window.ExamTitleBOX,\r\n    document.getElementById('QuesType').value, document.getElementById('ILO').value, document.getElementById('Number').value)\r\n      }}\r\n     >Add to Exam</Button>\r\n   </Row>\r\n   \r\n  \r\n  </Form.Group>\r\n  \r\n</Form>\r\n\r\n </Container>\r\n            \r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FromExisting;\r\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './ViewExams.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport SignInForm from './SignInForm.js';\n\nclass ViewExams extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {value: '', Exams:null,id:null};\n        //alert(window.IDToken)\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n        const ID = params.get('IDToken');\n        this.state.id=ID\n        //alert(this.state.id)\n        fetch('/ViewExams/'+this.state.id)\n          .then(response => response.json())\n          .then(data => this.setState({Exams : data.ans}));\n        \n          \n    }\n\n    render() {\n       //var names= window.ExamTitle;\n       var names = this.state.Exams\n       \n       //enta 3yz el list kolha wla esm w7ed bs\n       if (names==null)\n       {\n        var nameslist='No Exams Yet'\n       }\n       else\n       {\n        const ID = this.state.id;\n        var nameslist= names.map(function(name){\n            const href = `/#/instructor-exam?${new URLSearchParams({ name,ID }).toString()}`;\n            return <ListGroup.Item href={href} action>{name}</ListGroup.Item>;\n\n          })\n         \n       }\n    \n        \n       return (\n        <div>\n          \n          <h1>All Exams</h1>\n   \n    <Container style={{width:'660px',height:'550px',backgroundColor:'white', overflow:'scroll'}}>\n        <br />\n        <ListGroup style={{textAlign: 'center'}}  >{nameslist}</ListGroup>\n    </Container>\n        </div>\n        );\n    }\n}\n\nexport default ViewExams;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './ViewExams.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup'\nclass ViewEdit extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {value: '', Exams:null, Deleted:null, id:null};\n      const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n      const ID = params.get('IDToken');\n      this.state.id=ID\n      fetch('/ViewExams/'+this.state.id)\n        .then(response => response.json())\n        .then(data => this.setState({Exams : data.ans}));\n        \n    }\n\n    async FetchDelete(ExamTitle)\n    {\n      const response = await fetch('/DeleteExam/'+ExamTitle).then(response => response.json());\n      this.setState({Deleted:response.Deleted});\n    }\n    async DeleteExam(ExamTitle)\n    {\n      await this.FetchDelete(ExamTitle)\n      window.location.reload(false);\n    }\n\n    render() {\n       //var names=  window.ExamTitle;\n       var names = this.state.Exams\n       if (names==null)\n       {\n        var nameslist='No Exams Yet'\n       }\n       else\n       { \n   \n\n          var nameslist= names.map((name)=>{\n            const ID = this.state.id\n            const href1 = `/#/instructor-view-edit-exam?${new URLSearchParams({ name,ID }).toString()}`;\n            return (\n                \n                <Row style={{ justifyContent:'space-evenly'}}>\n                  <ListGroup style={{textAlign: 'center',width:'70%',margin: '10px 10px 10px 10px'}} >\n                    <ListGroup.Item href=\"/#/instructor-exam\"disabled>{name}</ListGroup.Item>\n                   </ ListGroup>\n                  \n                 <Button style={{width:'10%',margin: '10px 10px 10px 10px'}} href={href1} size=\"sm\" variant=\"primary\" >Edit</ Button>\n                 <Button style={{width:'10%',margin: '10px 10px 10px 10px'}} size=\"sm\" variant=\"danger\" \n                 onClick={()=>{this.DeleteExam(name)}} >Delete</ Button>\n                </Row>\n    \n              \n                   ) \n          })\n       }\n    \n        \n       return (\n        <div>\n          \n          <h1>All Exams</h1>\n   \n    <Container style={{width:'660px',height:'550px',backgroundColor:'white', overflow:'scroll'}}>\n        <br />\n        {nameslist}\n    </Container>\n        </div>\n        );\n    }\n}\n\nexport default ViewEdit;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './ViewExams.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Spinner from 'react-bootstrap/Spinner'\nclass ViewGrade extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {value: '', Exams:null, Grades:null, id:null};\n    const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n    const ID = params.get('IDToken');\n    this.state.id=ID\n    this.GetExams()\n    this.GradeExam = this.GradeExam.bind(this);\n      \n  }\n  showProgress()\n  {\n    document.getElementById(\"Progressbar\").style.display='block';\n\n    \n    \n  }\n  GetExams()\n  {\n    fetch('/ViewExams/'+this.state.id)\n      .then(response => response.json())\n      .then(data => this.setState({Exams : data.ans}));\n  }\n\n  async FetchGrade(ExamTitle)\n  {\n    const response = await fetch('/GradeExam/'+ExamTitle).then(response => response.json());\n    this.setState({Grades:response.Grades});\n  }\n\n  async GradeExam(ExamTitle)\n  {\n    this.showProgress();\n    await this.FetchGrade(ExamTitle);\n  }\n\n    render() {\n       var names= this.state.Exams\n       if (names==null)\n       {\n        var nameslist='No Exams Yet'\n       }\n       else\n       { \n   \n\n          var nameslist= names.map((name)=>{\n            return (\n                \n                <Row style={{ justifyContent:'space-evenly'}}>\n                  <ListGroup style={{textAlign: 'center',width:'80%',margin: '10px 10px 10px 10px'}} >\n                    <ListGroup.Item href=\"/#/instructor-exam\"disabled>{name}</ListGroup.Item>\n                   </ ListGroup>\n                 <Button style={{width:'10%',margin: '10px 10px 10px 10px'}} size=\"sm\" variant=\"success\" onClick={()=>this.GradeExam(name)} >Grade</ Button>\n               \n                </Row>\n    \n              \n                   ) \n          })\n       }\n    \n        \n       return (\n        <div>\n          \n          <h1>All Exams</h1>\n   \n    <Container style={{width:'660px',height:'550px',backgroundColor:'white', overflow:'scroll'}}>\n        <br />\n        {nameslist}\n        <Row style={{justifyContent:'center'}}>\n      <Spinner style={{display:'none'}} id=\"Progressbar\" animation=\"border\" variant=\"primary\" role=\"status\">\n       <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n      </Row>\n    </Container>\n        </div>\n        );\n    }\n}\n\nexport default ViewGrade;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './CreateExam.css';\nimport './Popup.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nclass EditMCQ extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {value: '', Question:null, AnswerList:null, CorrectAnswer:null, ILO:null,  Grade:null, IsUpdated:null,\n      OldQuestion:null};\n      //this.GetMCQInfo()\n      this.Autofill()\n          \n    }\n\n    //this is for one question\n    async GetMCQInfo()\n    {\n      const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n      const exam = params.get('exam');\n      //params = new URLSearchParams(window.location.hash.split(\"?\")[2]);\n      const question = params.get('question');\n      const id = params.get('id');\n      const response = await fetch('/GetAMCQ/'+exam+'/'+id+'/'+question).then(response => response.json());\n      this.setState({Question:response.Question, AnswerList:response.AnswerList,\n          CorrectAnswer:response.CorrectAnswer, ILO:response.ILO,  Grade:response.Grade});\n\n    \n    }\n\n    async FetchUpdateMCQ(question, NewQuestion, NewAnswers, NewCorrectAns, exam, NewILO, NewGrade, id)\n    {\n        const response = await fetch('/UpdateMCQ/'+question+'/'+NewQuestion+'/'+NewAnswers+'/'+NewCorrectAns+'/'+exam+'/'\n        +NewILO+'/'+NewGrade+'/'+id).then(response => response.json());\n        this.setState({IsUpdated:response.Updated});\n    }\n\n    //et2aked ml choices variable\n    async UpdateMCQ(NewQuestion, NewAnswers, NewCorrectAns, NewILO, NewGrade)\n    {\n      const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n      const exam = params.get('exam');\n      //params = new URLSearchParams(window.location.hash.split(\"?\")[2]);\n      const question = params.get('question');\n      const id = params.get('id');\n      await this.FetchUpdateMCQ(question, NewQuestion, NewAnswers, NewCorrectAns, exam, NewILO, NewGrade, id)\n      if (this.state.IsUpdated == \"Successfully updated\")\n      {\n          alert(\"Successfully updated\")\n      }\n      else\n      {\n          alert(\"There was an issue in update, please try again\")\n      }\n      \n      //this.handleSave();\n    }\n\n    async Autofill()\n    {\n        await this.GetMCQInfo();\n        document.getElementById('MCQILO').value=this.state.ILO;\n        document.getElementById('MCQGrade').value=this.state.Grade;\n        document.getElementById('TextMCQuestion').value=this.state.Question;\n        document.getElementById('ChoiceModelAns').value=this.state.CorrectAnswer;\n    }\n   handleSave()\n   {\n    if (this.state.IsUpdated == \"Successfully updated\")\n    {\n      alert(\"Saved Successfully\");\n    }\n    else\n    {\n      alert(\"Unsuccessful try\");\n      window.location.reload(false);\n    } \n   }\n\n   handleAddChoice()\n      { \n        \n        var x = document.createElement(\"div\");\n        x.setAttribute(\"class\", \"form-check form-check-inline\");\n        x.setAttribute(\"id\",\"choice\"+window.ChoiceCounter);\n        x.innerHTML='<input type=\"radio\" disabled class=\"form-check-input\">'+\n        '<label title for=\"formExamMCQ\" id= \"'+\"choice\"+window.ChoiceCounter+'\" class=\"form-check-label\">'+ document.getElementById('formChoiceTextbox').value+'</label>';\n        document.getElementById('ChoicesDiv').appendChild(x);\n        window.ChoiceCounter++;\n        var y=document.createElement(\"option\");\n        y.innerText=document.getElementById('formChoiceTextbox').value;\n        document.getElementById('ChoiceModelAns').appendChild(y);\n        document.getElementById('formChoiceTextbox').value='';\n      }\n      handleDeleteChoice()\n      {\n        window.ChoiceCounter--;\n        var y=document.getElementById('choice'+window.ChoiceCounter);\n        document.getElementById('ChoicesDiv').removeChild(y);\n      }\n    render() {\n        return (\n        <div>\n      <Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\n              <br />\n      <Form.Group   id=\"formExamMCQ\" controlId=\"formExamMCQ\">\n      \n      <Form.Label>Multiple Choice Question</Form.Label>\n      <Row>\n      <Form.Control  size=\"sm\" type=\"text\" id=\"MCQILO\" style={{width:'50%',margin: '15px 15px 15px 15px'}} placeholder=\"Enter Question ILO\"></Form.Control>\n      <Form.Control required size=\"sm\"id=\"MCQGrade\" style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\" placeholder=\"Enter Your Grade\" />\n\n      </Row>\n      <Form.Control required size=\"sm\" id=\"TextMCQuestion\" type=\"text\" placeholder=\"Enter Your Question\" />\n      <br />\n      <Form.Control  required size=\"sm\" id=\"formChoiceTextbox\" type=\"text\" placeholder=\"Enter a Choice\" />\n      <Button  size=\"sm\" variant=\"primary\" onClick={this.handleAddChoice}>Add Choice</Button>\n      <Button id=\"btnDeleteChoice\"  size=\"sm\" variant=\"danger\" onClick={this.handleDeleteChoice}>Delete Choice</Button>\n      <div id=\"ChoicesDiv\"></div>\n      <Form.Control required size=\"sm\" as=\"select\" id=\"ChoiceModelAns\" placeholder=\"Choose Model Answer\">\n      <option>Choose Model Answer</option>\n      </Form.Control>\n      <Button size=\"sm\" style={{ float:'right'}} variant=\"success\"\n      onClick={()=>{this.UpdateMCQ(this.state.OldQuestion,document.getElementById('TextMCQuestion').value, \n      document.getElementById('formChoiceTextbox').value, document.getElementById('ChoiceModelAns').value, \n      document.getElementById('MCQILO').value, document.getElementById('MCQGrade').value)\n      }}\n        >Save Changes</Button>\n      </Form.Group>\n      </Container>\n\n        </div>\n        )\n    }\n}\nexport default EditMCQ;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './CreateExam.css';\nimport './Popup.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nclass EditTF extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {value: '', Question:null, CorrectAnswer:null, ILO:null,  Grade:null, IsUpdated:null,\n        OldQuestion:null};\n        //this.GetTFInfo()\n        this.Autofill()\n          \n    }\n\n    //this is for one question\n    async GetTFInfo()\n    {\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n        const exam = params.get('exam');\n        //params = new URLSearchParams(window.location.hash.split(\"?\")[2]);\n        const question = params.get('question');\n        const id = params.get('id');\n        const response = await fetch('/GetATrueFalseQues/'+exam+'/'+id+'/'+question).then(response => response.json());\n        this.setState({Question:response.Question, CorrectAnswer:response.CorrectAnswer, ILO:response.ILO,  Grade:response.Grade});\n\n    }\n\n    async FetchUpdateTF(question, NewQuestion, NewCorrectAns, exam, NewILO, NewGrade, id)\n    {\n        const response = await fetch('/UpdateTrueFalse/'+question+'/'+NewQuestion+'/'+NewCorrectAns+'/'+exam+'/'\n        +NewILO+'/'+NewGrade+'/'+id).then(response => response.json());\n        this.setState({IsUpdated:response.Updated});\n    }\n\n    async UpdateTrueFalse(NewQuestion, NewCorrectAns, NewILO, NewGrade)\n    {\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n        const exam = params.get('exam');\n        //params = new URLSearchParams(window.location.hash.split(\"?\")[2]);\n        const question = params.get('question');\n        const id = params.get('id');\n        await this.FetchUpdateTF(question, NewQuestion, NewCorrectAns, exam, NewILO, NewGrade, id)\n        if (this.state.IsUpdated == \"Successfully updated\")\n        {\n            alert(\"Successfully updated\")\n        }\n        else\n        {\n            alert(\"There was an issue in update, please try again\")\n        }\n        \n        //this.handleSave();\n    }\n\n    async Autofill()\n    {\n        await this.GetTFInfo();\n        document.getElementById('TFILO').value=this.state.ILO;\n        document.getElementById('TFGrade').value=this.state.Grade;\n        document.getElementById('TextTF').value=this.state.Question;\n        document.getElementById('TFModelAns').value=this.state.CorrectAnswer;\n    }\n\n    handleSave()\n    {\n     if (this.state.IsUpdated == \"Successfully updated\")\n     {\n       alert(\"Saved Successfully\");\n     }\n     else\n     {\n       alert(\"Unsuccessful try\");\n       window.location.reload(false);\n     } \n    }\n\n    render() {\n        return (\n        <div>\n<Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\n        <br />\n<Form.Group  id=\"formExamTF\" controlId=\"formExamTF\">\n    <Form.Label>True and False Question</Form.Label>\n    <Row>\n    <Form.Control  size=\"sm\"id=\"TFILO\" type=\"text\" style={{width:'50%',margin: '15px 15px 15px 15px'}}\n    placeholder=\"Enter Question ILO\"></Form.Control>\n   <Form.Control size=\"sm\"id=\"TFGrade\" style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\"\n   placeholder=\"Enter Your Grade\" />\n   \n   </Row>\n    <Form.Control size=\"sm\" id=\"TextTF\" type=\"text\" placeholder=\"Enter Your Question\" />\n      <br />\n      <Form.Control size=\"sm\" as=\"select\" id=\"TFModelAns\" placeholder=\"Choose Model Answer\">\n    <option>Choose Model Answer</option>\n    <option>True</option>\n    <option>False</option>\n    </Form.Control>\n    <Button size=\"sm\" style={{ float:'right'}} variant=\"success\"\n    onClick={()=>{this.UpdateTrueFalse(document.getElementById('TextTF').value, \n    document.getElementById('TFModelAns').value, document.getElementById('TFILO').value, \n    document.getElementById('TFGrade').value)\n    }}\n     >Save Changes</Button>\n   \n    </Form.Group>\n    </Container>\n    \n        </div>\n        )\n    }\n}\nexport default EditTF;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './CreateExam.css';\nimport './Popup.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nclass EditComplete extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {value: '', Question1:null, Question2:null, CorrectAnswer:null, ILO:null,  Grade:null, IsUpdated:null, \n        OldQuestion1:null, OldQuestion2:null};\n        \n        this.Autofill()\n        \n          \n    }\n\n    //this is for one question\n    async GetCompleteInfo()\n    {\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n        const exam = params.get('exam');\n        //params = new URLSearchParams(window.location.hash.split(\"?\")[2]);\n        const question = params.get('question');\n        const id = params.get('id');\n        const response = await fetch('/GetACompleteQues/'+exam+'/'+id+'/'+question).then(response => response.json());\n        this.setState({Question1:response.Question1, Question2:response.Question2, \n            CorrectAnswer:response.CorrectAnswer, ILO:response.ILO,  Grade:response.Grade});\n\n        // fetch('/GetACompleteQues/'+exam+'/'+1+'/'+question)\n        //     .then(response => response.json())\n        //     .then(data => this.setState({Question1:data.Question1, Question2:data.Question2, \n        //     CorrectAnswer:data.CorrectAnswer, ILO:data.ILO,  Grade:data.Grade}));\n    }\n\n    async FetchUpdateComp(question, NewQuestion1, NewQuestion2, NewCorrectAns, exam, NewILO, NewGrade, id)\n    {\n        const response = await fetch('/UpdateComplete/'+question+'/'+NewQuestion1+'/'+NewQuestion2+'/'\n        +NewCorrectAns+'/'+exam+'/'+NewILO+'/'+NewGrade+'/'+id).then(response => response.json());\n        this.setState({IsUpdated:response.Updated});\n    }\n\n    async UpdateComplete(NewQuestion1, NewQuestion2, NewCorrectAns, NewILO, NewGrade)\n    {\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n        const exam = params.get('exam');\n        //params = new URLSearchParams(window.location.hash.split(\"?\")[2]);\n        const question = params.get('question');\n        const id = params.get('id');\n        await this.FetchUpdateComp(question, NewQuestion1, NewQuestion2, NewCorrectAns, exam, NewILO, NewGrade, id)\n        if (this.state.IsUpdated == \"Successfully updated\")\n        {\n            alert(\"Successfully updated\")\n        }\n        else\n        {\n            alert(\"There was an issue in update, please try again\")\n        }\n        \n        //this.handleSave();\n\n    }\n\n    async Autofill()\n    {\n        await this.GetCompleteInfo();\n        document.getElementById('CompleteILO').value=this.state.ILO;\n        document.getElementById('CompleteGrade').value=this.state.Grade;\n        document.getElementById('TextComplete1').value=this.state.Question1;\n        document.getElementById('TextComplete2').value=this.state.Question2;\n        document.getElementById('AnswerComplete').value=this.state.CorrectAnswer;\n    }\n\n    handleSave()\n    {\n    \n     if (this.state.IsUpdated == \"Successfully updated\")\n     {\n       alert(\"Saved Successfully\");\n     }\n     else\n     {\n       alert(\"Unsuccessful try\");\n       window.location.reload(false);\n     } \n    }\n\n    render() {\n        return (\n        <div>\n<Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\n        <br />\n<Form.Group id=\"formExamComplete\" controlId=\"formExamComplete\">\n   \n   <Form.Label>Complete Question</Form.Label>\n   <Row>\n   <Form.Control  size=\"sm\" id=\"CompleteILO\" type=\"text\" style={{width:'50%',margin: '15px 15px 15px 15px'}} placeholder=\"Enter Your ILO \" ></Form.Control>\n   <Form.Control size=\"sm\" id=\"CompleteGrade\" style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\" placeholder=\"Enter Your Grade \"/>\n   \n   </Row>\n   <Form.Control size=\"sm\" id=\"TextComplete1\" type=\"text\"  placeholder=\"Enter Your 1st part of the Question *before the space*\" />\n   <Form.Control size=\"sm\"id=\"TextComplete2\" type=\"text\"   placeholder=\"Enter Your 2nd part of the Question *after the space*\" />\n   <br />\n   <Form.Control size=\"sm\" id=\"AnswerComplete\" type=\"text\" placeholder=\"Enter Your Model Answer *the space*\" />\n   <Button size=\"sm\" style={{ float:'right'}} variant=\"success\"\n   onClick={()=>{this.UpdateComplete(document.getElementById('TextComplete1').value, \n   document.getElementById('TextComplete2').value, document.getElementById('AnswerComplete').value,\n    document.getElementById('CompleteILO').value, document.getElementById('CompleteGrade').value)\n   }}\n   >Save Changes</Button>\n   \n   </Form.Group>\n   </Container>\n        </div>\n        )\n    }\n}\nexport default EditComplete;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './CreateExam.css';\nimport './Popup.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nclass EditEssay extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {value: '', Question:null, CorrectAnswer:null, ILO:null,  Grade:null, IsUpdated:null,\n        OldQuestion:null};\n        //this.GetEssayInfo()\n        this.Autofill()\n        \n          \n    }\n\n    //this is for one question\n    async GetEssayInfo()\n    {\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n        const exam = params.get('exam');\n        //params = new URLSearchParams(window.location.hash.split(\"?\")[2]);\n        const question = params.get('question');\n        const id = params.get('id');\n        const response = await fetch('/GetAEssQues/'+exam+'/'+id+'/'+question).then(response => response.json());\n        this.setState({Question:response.Question, CorrectAnswer:response.CorrectAnswer, ILO:response.ILO,  Grade:response.Grade});\n\n    }\n\n    async FetchUpdateEssay(question, NewQuestion, NewCorrectAns, exam, NewILO, NewGrade, id)\n    {\n        const response = await fetch('/UpdateEssay/'+question+'/'+NewQuestion+'/'+NewCorrectAns+'/'+exam+'/'+NewILO+'/'+NewGrade+'/'+id).then(response => response.json());\n        this.setState({IsUpdated:response.Updated});\n    }\n\n    async UpdateEssay(NewQuestion, NewCorrectAns, NewILO, NewGrade)\n    {\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n        const exam = params.get('exam');\n        //params = new URLSearchParams(window.location.hash.split(\"?\")[2]);\n        const question = params.get('question');\n        const id = params.get('id');\n        await this.FetchUpdateEssay(question, NewQuestion, NewCorrectAns, exam, NewILO, NewGrade, id)\n        if (this.state.IsUpdated == \"Successfully updated\")\n        {\n            alert(\"Successfully updated\")\n        }\n        else\n        {\n            alert(\"There was an issue in update, please try again\")\n        }\n        \n        //this.handleSave();\n    }\n\n    async Autofill()\n    {\n        await this.GetEssayInfo()\n        document.getElementById('EssayILO').value=this.state.ILO;\n        document.getElementById('EssayGrade').value=this.state.Grade;\n        document.getElementById('TextEssay').value=this.state.Question;\n        document.getElementById('AnswerEssay').value=this.state.CorrectAnswer;\n    }\n\n    handleSave()\n    {\n     if (this.state.IsUpdated == \"Successfully updated\")\n     {\n       alert(\"Saved Successfully\");\n     }\n     else\n     {\n       alert(\"Unsuccessful try\");\n       window.location.reload(false);\n     } \n    }\n\n    render() {\n        return (\n        <div>\n<Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\n        <br />\n<Form.Group  id=\"formExamEssay\" controlId=\"formExamEssay\">\n    <Form.Label>Essay Question</Form.Label>\n    <Row>\n    <Form.Control  size=\"sm\"id=\"EssayILO\" type=\"text\" style={{width:'50%',margin: '15px 15px 15px 15px'}}\n    placeholder=\"Enter Question ILO\"></Form.Control>\n   <Form.Control size=\"sm\" id=\"EssayGrade\"style={{width:'40%',margin: '15px 15px 15px 15px'}} type=\"number\"\n    placeholder=\"Enter Your Grade\" />\n   \n   </Row>\n    <Form.Control size=\"sm\" id=\"TextEssay\" type=\"text\" placeholder=\"Enter Your Essay Question\" />\n   <br />\n    <Form.Control size=\"sm\" as=\"textarea\"id=\"AnswerEssay\" placeholder=\"Enter Your Model Answer\" />\n    <Button size=\"sm\" style={{ float:'right'}} variant=\"success\"\n     onClick={()=>{this.UpdateEssay(document.getElementById('TextEssay').value, \n     document.getElementById('AnswerEssay').value, document.getElementById('EssayILO').value, \n     document.getElementById('EssayGrade').value)\n     }}\n      >Save Changes</Button>\n    </Form.Group>\n    </Container>\n        </div>\n        )\n    }\n}\nexport default EditEssay;","import React, { Component } from 'react';\r\n\r\nimport './Exam.css';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\nimport $ from 'jquery'; \r\n\r\nclass TakeMCQ extends Component{\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value:'', QuestionList:[], CounterList:[], AnswerList:[],CorrectAnswerList:[], \r\n        ILOList:[], GradeList:[]};\r\n        this.GetMCQ()\r\n        window.MCQQuestions=[];\r\n        window.MCQAnswers=[];\r\n    }\r\n\r\n    GetMCQ()\r\n    {\r\n        var examname=this.props.passedname;\r\n      fetch('/GetMCQStud/'+examname)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList:data.QuestionList, CounterList:data.CounterList, AnswerList:data.AnswerList,\r\n            CorrectAnswerList:data.CorrectAnswerList, ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n\r\n    handleSubmit()\r\n    {\r\n        window.MCQAnswers=[];\r\n        var ansGroup=\"\"\r\n    \r\n        for(var i=0;i<window.MCQQuestions.length;i++)\r\n        {\r\n            ansGroup=\"AnswerMCQ\" + (i+1)\r\n            if(document.getElementById(ansGroup)!=null)\r\n            {\r\n                window.MCQAnswers.push($(`input[name='${ansGroup}']:checked`).val());\r\n            }\r\n         \r\n\r\n        }\r\n        \r\n       \r\n    }\r\n    render(){\r\n        var name=this.props.passedname\r\n        var ExamMCQQuestions = this.state.QuestionList;\r\n        var ExamMCQCounter = this.state.CounterList;\r\n        var ExamMCQChoices = this.state.AnswerList;\r\n        ExamMCQChoices = ExamMCQChoices.toString().split(',');\r\n        window.MCQQuestions=ExamMCQQuestions;\r\n        var r = \"\";\r\n        var i = 0;\r\n        var MCQHead = \"\";\r\n        var answer = \"\";\r\n        var choicesNumber = 0;\r\n        if (ExamMCQQuestions.length != 0) {\r\n            MCQHead = <div><Form.Label  ><b>Choose the Correct Answer:</b></Form.Label> <Button style={{width:'21%',margin: '10px 10px 10px 10px'}} onClick={this.handleSubmit} size=\"sm\" variant=\"primary\" >Submit MCQ</ Button> <br /></div>;\r\n\r\n            r = ExamMCQChoices.map((choice, index) => {\r\n                if (choicesNumber == 0) {\r\n                    choicesNumber = ExamMCQCounter[i] - 1;\r\n                    i += 1;\r\n                    answer = \"AnswerMCQ\" + (i);\r\n                    return (\r\n                        <div>\r\n                            <Form.Label  >{i})&nbsp;{ExamMCQQuestions[i - 1]}  </Form.Label> \r\n                    \r\n            \r\n                             <br />\r\n                            <Form.Label ><input type=\"radio\" name={answer} value={choice} id={answer} /> {choice} </Form.Label>\r\n                            </div>\r\n                    )\r\n                }\r\n                else {\r\n                    choicesNumber -= 1;\r\n                    return (\r\n                        <div >\r\n                            <Form.Label ><input type=\"radio\" name={answer} value={choice} id={answer} /> {choice} </Form.Label>\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n\r\n            });\r\n\r\n        }\r\n\r\n        return(\r\n            <div>\r\n            \r\n            { MCQHead }\r\n            { r }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default TakeMCQ;","import React, { Component } from 'react';\r\n\r\nimport './Exam.css';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nclass TakeEssay extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value:'', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[]};\r\n        this.GetEssay()\r\n        window.EssayQuestions=[];\r\n        window.EssayAnswers=[];\r\n    }\r\n\r\n    GetEssay()\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/GetEssayStud/'+examname)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \r\n            ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n\r\n    handleSubmit()\r\n    {\r\n        window.EssayAnswers=[];\r\n        \r\n        for(var i=0;i<window.EssayCount;i++)\r\n        {\r\n            \r\n            if(document.getElementById(\"AnswerEssay\" + (i+1))!=null)\r\n            {\r\n                window.EssayAnswers.push(document.getElementById(\"AnswerEssay\" + (i+1)).value);\r\n            }\r\n\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    render(){\r\n        var ExamEssay=this.state.QuestionList;\r\n        window.EssayQuestions=ExamEssay;\r\n        var name=this.props.passedname\r\n        var EssayHead=\"\";\r\n        var Essay=\"\";\r\n        var answerid = \"\";\r\n        if(ExamEssay.length!=0){\r\n            EssayHead = <div><Form.Label  ><b>Essay Question(s):</b></Form.Label> <Button style={{width:'21%',margin: '10px 10px 10px 10px'}} onClick={this.handleSubmit} size=\"sm\" variant=\"primary\" >Submit Essay</ Button>\r\n            <br /></div>;\r\n            Essay= ExamEssay.map((Question,index)=>{\r\n                window.EssayCount=index+1;\r\n                answerid = \"AnswerEssay\" + (index+1);\r\n            return(\r\n                 <div>\r\n                    <Form.Label  >{index+1})&nbsp;{ExamEssay[index]}  </Form.Label>\r\n                          \r\n                     <br />\r\n                    <Form.Label><textarea placeholder=\"Enter Answer Here\" id={answerid}  style={{width:\"600px\"}}></textarea></Form.Label>\r\n                </div>\r\n                )\r\n            }\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {EssayHead}\r\n                {Essay}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TakeEssay;","import React, { Component } from 'react';\r\nimport './Exam.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport $ from 'jquery'; \r\nclass TakeTF extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value:'', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[]};\r\n        this.GetTF()\r\n        window.TFQuestions=[];\r\n        window.TFAnswers=[];\r\n    }\r\n\r\n    GetTF()\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/GetTFStud/'+examname)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \r\n            ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n\r\n    handleSubmit()\r\n    {\r\n        window.TFAnswers=[];\r\n        var ansGroup=\"\"\r\n        \r\n        for(var i=0;i<window.TFQuestions.length;i++)\r\n        {\r\n            ansGroup=\"AnswerTF\" + (i+1)\r\n            if(document.getElementById(ansGroup)!=null)\r\n            {\r\n                window.TFAnswers.push($(`input[name='${ansGroup}']:checked`).val());\r\n            }\r\n         \r\n\r\n        }\r\n        \r\n      \r\n    }\r\n\r\n    render() {\r\n       \r\n        var ExamTF = this.state.QuestionList;\r\n        window.TFQuestions=ExamTF;\r\n        var name=this.props.passedname\r\n        var TFHead = \"\";\r\n        var TF = \"\";\r\n        var answer=\"\";\r\n        if (ExamTF.length != 0) {\r\n            TFHead = <div><Form.Label  ><b>True or False:</b></Form.Label> <Button style={{width:'21%',margin: '10px 10px 10px 10px'}} onClick={this.handleSubmit} size=\"sm\" variant=\"primary\" >Submit T & F</ Button>\r\n            <br /></div>;\r\n            TF = ExamTF.map((Question, index) => {\r\n                answer=\"AnswerTF\"+(index+1)\r\n                \r\n                return (\r\n                    <div>\r\n                        <Form.Label  > {index + 1})&nbsp;{ExamTF[index]}  </Form.Label>\r\n                        <Form.Label style={{ paddingRight:\"6px\" ,margin:\"10px 10px 10px 10px\" }}><input type=\"radio\" name={answer} id={answer}  value=\"True\"  />True </Form.Label>   \r\n                        <Form.Label style={{paddingRight:\"6px\",margin:\"10px 10px 10px 10px\"}}><input type=\"radio\" name={answer} id={answer}  value=\"False\" />False </Form.Label> \r\n                        \r\n                        \r\n                    </div>\r\n                )\r\n            }\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {TFHead}\r\n                {TF}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TakeTF;","import React, { Component } from 'react';\r\n\r\nimport './Exam.css';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nclass TakeComplete extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[]};\r\n        this.GetComplete()\r\n        window.CompleteQuestions=[];\r\n        window.CompleteAnswers=[];\r\n    }\r\n\r\n    GetComplete()\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/GetCompleteStud/'+examname)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \r\n            ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n\r\n    handleSubmit()\r\n    {\r\n        window.CompleteAnswers=[];\r\n        for(var i=0;i<window.CompleteCount;i++)\r\n        {\r\n            \r\n            if(document.getElementById(\"AnswerComplete\" + (i+1))!=null)\r\n            {\r\n                window.CompleteAnswers.push(document.getElementById(\"AnswerComplete\" + (i+1)).value);\r\n            }\r\n\r\n        }\r\n        \r\n        \r\n    }\r\n    render() {\r\n        var ExamComplete = this.state.QuestionList;\r\n        window.CompleteQuestions=ExamComplete;\r\n        var Examname=this.props.passedname;\r\n        var CompleteHead = \"\";\r\n        var Complete = \"\";\r\n        var i=0\r\n        if (ExamComplete.length != 0) {\r\n            CompleteHead = <div><Form.Label  ><b>Complete the following:</b></Form.Label>  <Button style={{width:'21%',margin: '10px 10px 10px 10px'}} onClick={this.handleSubmit} size=\"sm\" variant=\"primary\" >Submit Complete</ Button>\r\n            <br /></div>;\r\n            Complete = ExamComplete.map((Question, index) => {\r\n               \r\n                if (index%2==0)\r\n                {\r\n                    i+=1;\r\n                    var answerid = \"AnswerComplete\" + i;\r\n                    window.CompleteCount=i;\r\n                    return (\r\n                        <div>\r\n                            <Form.Label  > {i})&nbsp; </Form.Label> \r\n                            <Form.Label>  {ExamComplete[index]}   </Form.Label>\r\n                            <input type=\"text\" id={answerid} placeholder=\"Enter Answer Here\"  style={{margin:\"6px\"}}/>\r\n                            <Form.Label> {ExamComplete[index+1]} </Form.Label>\r\n                           \r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {CompleteHead}\r\n                {Complete}\r\n                          \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TakeComplete;","import React, { Component } from 'react';\r\n\r\nimport './Exam.css';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nimport TakeMCQ from './TakeMCQ.js';\r\nimport TakeEssay from './TakeEssay.js';\r\nimport TakeTF from './TakeTF.js';\r\nimport TakeComplete from './TakeComplete.js';\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\n\r\nclass TakeExam extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '',Submit:null, id:null, username:null};\r\n\r\n      }\r\n\r\n      handleSubmitAnswers()\r\n      {\r\n        document.getElementById('ExamSubmitBox').style.display='block';\r\n      }\r\n\r\n      async FetchSubmitExam(examname, id, MCQList, MCQAnswers, CompleteList, CompleteAnswers, TFList, TFAnswers, EssayList, EssayAnswers)\r\n      {\r\n        const response = await fetch('/SubmitStudentExam/'+examname+'/'+id+'/'+MCQList+'/'+MCQAnswers+'/'+CompleteList+'/'\r\n        +CompleteAnswers+'/'+TFList+'/'+TFAnswers+'/'+EssayList+'/'+EssayAnswers).then(response => response.json());\r\n        this.setState({Submit:response.successful});\r\n      }\r\n\r\n      async GetNamyByID()\r\n      {\r\n        const response = await fetch('/GetStudNamebyID/'+this.state.id).then(response => response.json());\r\n        this.setState({username:response.name});\r\n      }\r\n\r\n      async SubmitStudentExam(MCQList, MCQAnswers, \r\n        CompleteList, CompleteAnswers, TFList, TFAnswers, EssayList, EssayAnswers)\r\n      {\r\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n        const examname = params.get('name');\r\n        const id = params.get('id');\r\n        this.state.id=id;\r\n        // console.log(\"Question\",question)\r\n        if (MCQList.length==0 || MCQList==null||MCQList[0]==\"\")\r\n        {\r\n          //alert(\"d5l fel mcq Q\")\r\n          MCQList = ['empty']\r\n        }\r\n        if (MCQAnswers.length==0 || MCQAnswers==null||MCQAnswers[0]==\"\")\r\n        {\r\n          //alert(\"d5l fel mcq answer\")\r\n          MCQAnswers = ['empty']\r\n        }\r\n        if (CompleteList.length==0 || CompleteList==null||CompleteList[0]==\"\")\r\n        {\r\n         // alert(\"d5l fel Comp Q\")\r\n          CompleteList = ['empty']\r\n        }\r\n        if (CompleteAnswers.length==0 || CompleteAnswers==null||CompleteAnswers[0]==\"\")\r\n        {\r\n          //alert(\"d5l fel comp answer\")\r\n          CompleteAnswers = ['empty']\r\n        }\r\n        if (TFList.length==0 || TFList==null||TFList[0]==\"\")\r\n        {\r\n         // alert(\"d5l fel TF Q\")\r\n          TFList = ['empty']\r\n        }\r\n        if (TFAnswers.length==0 || TFAnswers==null||TFAnswers[0]==\"\")\r\n        {\r\n          //alert(\"d5l fel tf answer\")\r\n          TFAnswers = ['empty']\r\n        }\r\n        if (EssayList.length==0 || EssayList==null||EssayList[0]==\"\")\r\n        {\r\n          //alert(\"d5l fel Ess Q\")\r\n          EssayList = ['empty']\r\n        }\r\n        if (EssayAnswers.length==0 || EssayAnswers==null||EssayAnswers[0]==\"\")\r\n        {\r\n          //alert(\"d5l fel ess answer\")\r\n          EssayAnswers = ['empty']\r\n        }\r\n        //alert(id)\r\n        //alert(MCQList)\r\n        await this.FetchSubmitExam(examname, id, MCQList, MCQAnswers, CompleteList, CompleteAnswers, TFList, TFAnswers, EssayList, EssayAnswers)\r\n        await this.GetNamyByID()\r\n        if (this.state.Submit == 'Exam is submitted')\r\n        {\r\n          this.handleSubmitAnswers();\r\n        }\r\n        else\r\n        {\r\n          alert('There was an issue in submitting the exam, please try again.')\r\n        }\r\n        \r\n        //alert(MCQList)\r\n      }\r\n\r\n    render() {\r\n        \r\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n        const name = params.get('name');\r\n        const username=this.state.username;\r\n        var home = `#/student-home?${new URLSearchParams({username}).toString()}`;\r\n        return (\r\n            <div>\r\n     <div style={{display:'none'}} class=\"modal-custom\" id=\"ExamSubmitBox\">\r\n          <Modal.Dialog  >\r\n              <Modal.Header >\r\n              <Modal.Title>Exam Alert</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                Exam \"{name}\" Submitted Successfully\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"primary\" onClick={event =>  window.location.href=home} >Ok</Button>\r\n            </Modal.Footer>\r\n          </Modal.Dialog>\r\n          </div>\r\n        <Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\r\n            <br />\r\n        <Form>\r\n        <Form.Label style={{ display: 'flex', justifyContent: 'center' }}><b>{name}</b> </Form.Label>\r\n            <TakeMCQ passedname={name}/>\r\n            <TakeTF passedname={name}/>\r\n            <TakeComplete passedname={name}/>\r\n            <TakeEssay passedname={name}/>\r\n            <Button style={{ float:'right'}} variant=\"primary\"  onClick={()=>{this.SubmitStudentExam(window.MCQQuestions,window.MCQAnswers,window.CompleteQuestions,window.CompleteAnswers,window.TFQuestions,window.TFAnswers,window.EssayQuestions,window.EssayAnswers)}}>Submit Answers</Button>\r\n        </Form>\r\n        </Container>\r\n            </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default TakeExam;\r\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './StudentHome.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nclass StudentHome extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {value: '', fullname:null, id:null};\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n        const username=params.get('username')\n        this.GetName(username)\n  \n    }\n\n    GetName(username)\n    {\n      fetch('/GetStudName/'+username)\n        .then(response => response.json())\n        .then(data => this.setState({fullname : data.name, id:data.id}));\n    }\n\n    render() {\n        window.StudentName = this.state.fullname\n        const id = this.state.id\n        const href1 = `#/student-view-all?${new URLSearchParams({id}).toString()}`;\n        return (\n        <div>\n          \n          <h1>Welcome {window.StudentName}</h1>\n    <br />\n    <Container style={{ justifyContent:'center'}}>\n     <Row style={{ justifyContent:'space-evenly'}}>\n         <Col  style={{ flexGrow:'unset'}}><Button style={{width: 'max-content'}} href=\"#/student-ask\" size=\"lg\"variant=\"primary\">Ask a Question</Button></Col>\n         <Col style={{ flexGrow:'unset'}} ><Button style={{width: 'max-content'}} href={href1} size=\"lg\" variant=\"primary\">Take Exam</Button></Col>\n     </Row>\n\n </Container>\n            \n          </div>\n        );\n    }\n}\n\nexport default StudentHome;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './StudentAsk.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nclass StudentAsk extends Component {\n\n \n    render() {\n        return (\n        <div>\n    <Container style={{width:'660px',height:'590px',backgroundColor:'white',overflow:'scroll'}}>\n        <br />\n    <Form style={{backgroundColor:'white'}}>\n\n  <Form.Group  id=\"formExamEssay\" controlId=\"formExamEssay\">\n    <Form.Label>Essay Question</Form.Label>\n    <Form.Control id=\"TextEssay\" as=\"textarea\" placeholder=\"Enter Your Essay Question\" />\n   <br />\n    <Button  style={{float:'right'}} variant=\"success\" >Get Answer</Button>\n\n  </Form.Group>\n\n</Form>\n\n </Container>\n            \n          </div>\n        );\n    }\n}\n\nexport default StudentAsk;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './StudentExams.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup'\nclass StudentExams extends Component {\n\n    constructor(props)\n    {\n        super(props);\n        this.state = {value: '', Exams:null, id:null};\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n        const id=params.get('id')\n        this.state.id=id\n        fetch('/ViewAllExams/'+this.state.id)\n          .then(response => response.json())\n          .then(data => this.setState({Exams : data.ans}));\n        \n        \n          \n    }\n\n    render() {\n       //var names= window.ExamTitle;\n       var names = this.state.Exams\n       var id = this.state.id\n       if (names==null)\n       {\n        var nameslist='No Exams Yet'\n       }\n       else\n       {\n        var nameslist= names.map(function(name){\n            const href = `/#/student-take-exam?${new URLSearchParams({ name,id }).toString()}`;\n            return <ListGroup.Item href={href} action>{name}</ListGroup.Item>;\n          })\n       }\n    \n        \n       return (\n        <div>\n          \n          <h1>All Exams</h1>\n   \n    <Container style={{width:'660px',height:'550px',backgroundColor:'white',overflow:'scroll'}}>\n        <br />\n       <ListGroup style={{textAlign: 'center'}} >{nameslist}</ListGroup>\n    </Container>\n        </div>\n        );\n    }\n}\n\nexport default StudentExams;\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Exam.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport Exam from './Exam.js';\r\nimport './SignInForm';\r\n\r\nclass ExamMCQ extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', QuestionList:[], CounterList:[], AnswerList:[],CorrectAnswerList:[], \r\n        ILOList:[], GradeList:[]};\r\n        //alert(window.IDToken1)\r\n        this.GetMCQ()\r\n        \r\n          \r\n    }\r\n\r\n    GetMCQ()\r\n    {\r\n        var examname=this.props.passedname\r\n        var id=this.props.passedid\r\n        //alert(id)\r\n      fetch('/GetMCQ/'+examname+'/'+id)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList:data.QuestionList, CounterList:data.CounterList, AnswerList:data.AnswerList,\r\n            CorrectAnswerList:data.CorrectAnswerList, ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n\r\n    handleTopic(){}\r\n\r\n    render(){\r\n        var ExamMCQQuestions = this.state.QuestionList;\r\n        var ExamMCQCounter   = this.state.CounterList;\r\n        var ExamMCQChoices   = this.state.AnswerList;\r\n        ExamMCQChoices = ExamMCQChoices.toString().split(',');\r\n\r\n        //var ExamMCQQuestions = window.ExamMCQQuestions;\r\n        //var ExamMCQCounter = window.ExamMCQCounter;\r\n        //var ExamMCQChoices = window.ExamMCQChoices;\r\n\r\n        var r = \"\";\r\n        var i = 0;\r\n        var MCQHead = \"\";\r\n        var answer = \"\";\r\n        var choicesNumber = 0;\r\n        if (ExamMCQQuestions.length != 0) {\r\n            MCQHead = <div><Form.Label  ><b>Choose the Correct Answer:</b></Form.Label> <br /></div>;\r\n\r\n            r = ExamMCQChoices.map((choice, index) => {\r\n                if (choicesNumber == 0) {\r\n                    choicesNumber = ExamMCQCounter[i] - 1;\r\n                    i += 1;\r\n                    answer = \"answer\" + (i);\r\n                    return (\r\n                        <div>\r\n                            <Form.Label  >{i})&nbsp;{ExamMCQQuestions[i - 1]}  </Form.Label> \r\n                    \r\n            \r\n                             <br />\r\n                            <Form.Label inline><input type=\"radio\" name={answer} value={choice} disabled /> {choice} </Form.Label>\r\n                            </div>\r\n                    )\r\n                }\r\n                else {\r\n                    choicesNumber -= 1;\r\n                    return (\r\n                        <div >\r\n                            <Form.Label inline><input type=\"radio\" name={answer} value={choice} disabled /> {choice} </Form.Label>\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n\r\n            });\r\n\r\n        }\r\n\r\n        return(\r\n            <div>\r\n            { MCQHead }\r\n            { r }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ExamMCQ;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Exam.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport Exam from './Exam.js';\r\n\r\nclass ExamEssay extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[]};\r\n        //alert(window.IDToken1)\r\n        this.GetEssay()\r\n          \r\n    }\r\n\r\n    GetEssay()\r\n    {\r\n        var examname=this.props.passedname\r\n        var id=this.props.passedid\r\n        //alert(id)\r\n        fetch('/GetEssay/'+examname+'/'+id)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \r\n            ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n    render(){\r\n        //var ExamEssay=window.ExamEssay;\r\n        var ExamEssay = this.state.QuestionList\r\n        \r\n        var EssayHead=\"\";\r\n        var Essay=\"\";\r\n        if(ExamEssay.length!=0){\r\n            EssayHead = <div><Form.Label  ><b>Essay Questions:</b></Form.Label> <br /></div>;\r\n            Essay= ExamEssay.map((Question,index)=>{\r\n            return(\r\n                 <div>\r\n                    <Form.Label  >{index+1})&nbsp;{ExamEssay[index]}  </Form.Label>\r\n                          \r\n                     <br />\r\n                    <Form.Label><textarea placeholder=\"Enter Answer Here\" value={this.state.CorrectAnswerList[index]} disabled style={{width:\"600px\"}}></textarea></Form.Label>\r\n                </div>\r\n                )\r\n            }\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {EssayHead}\r\n                {Essay}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ExamEssay;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Exam.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport Exam from './Exam.js';\r\n\r\nclass ExamTF extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[]};\r\n        //alert(window.IDToken1)\r\n        this.GetTF()\r\n          \r\n    }\r\n        \r\n    GetTF()\r\n    {\r\n        var examname=this.props.passedname\r\n        var id=this.props.passedid\r\n        //alert(id)\r\n        fetch('/GetTF/'+examname+'/'+id)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \r\n            ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n    render() {\r\n        //var ExamTF = window.ExamTF;\r\n        var ExamTF = this.state.QuestionList;\r\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\r\n        const name = params.get('name');\r\n        var TFHead = \"\";\r\n        var TF = \"\";\r\n        if (ExamTF.length != 0) {\r\n            TFHead = <div><Form.Label  ><b>True or False:</b></Form.Label> <br /></div>;\r\n            TF = ExamTF.map((Question, index) => {\r\n                return (\r\n                    <div>\r\n                       <Form.Label  > {index + 1})&nbsp;{ExamTF[index]}  </Form.Label>\r\n                              \r\n                        <Form.Label style={{ paddingRight:\"6px\" ,margin:\"10px 10px 10px 10px\" }}><input type=\"radio\" name={index}  value=\"True\"  />True </Form.Label>   \r\n                        <Form.Label style={{paddingRight:\"6px\",margin:\"10px 10px 10px 10px\"}}><input type=\"radio\" name={index}  value=\"False\" />False </Form.Label> \r\n                        \r\n                    </div>\r\n                )\r\n            }\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {TFHead}\r\n                {TF}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ExamTF;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Exam.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport Exam from './Exam.js';\r\n\r\nclass ExamComplete extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[]};\r\n        //alert(window.IDToken1)\r\n        this.GetComplete()\r\n        \r\n          \r\n    }\r\n\r\n    GetComplete()\r\n    {\r\n        var examname=this.props.passedname\r\n        var id=this.props.passedid\r\n        //alert(id)\r\n        fetch('/GetComplete/'+examname+'/'+id)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \r\n            ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n    render() {\r\n        //var ExamComplete = window.ExamComplete;\r\n        var ExamComplete = this.state.QuestionList;\r\n\r\n        var CompleteHead = \"\";\r\n        var Complete = \"\";\r\n        var i=0\r\n        if (ExamComplete.length != 0) {\r\n            CompleteHead = <div><Form.Label  ><b>Complete the following:</b></Form.Label> <br /></div>;\r\n            Complete = ExamComplete.map((Question, index) => {\r\n                if (index%2==0)\r\n                {\r\n                    i+=1;\r\n                    return (\r\n                        <div>\r\n                           <Form.Label  > {i})&nbsp; </Form.Label> \r\n                            <Form.Label>  {ExamComplete[index]}   </Form.Label>\r\n                            <input type=\"text\" placeholder=\"Enter Answer Here\" value={this.state.CorrectAnswerList[index]} disabled style={{margin:\"6px\"}}/>\r\n                            <Form.Label> {ExamComplete[index+1]} </Form.Label>\r\n\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {CompleteHead}\r\n                {Complete}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ExamComplete;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Exam.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport ExamMCQ from './ExamMCQ.js';\nimport ExamEssay from './ExamEssay.js';\nimport ExamTF from './ExamTF.js';\nimport ExamComplete from './ExamComplete.js';\n\n\n\nclass Exam extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {value: '', Exams:null, id:null};\n        //alert(window.IDToken)\n        \n          \n    }\n\n    render() {\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n        const name = params.get('name');\n        window.examname=name;\n        const IDToken = params.get('ID');\n        \n        return (\n            <div>\n    \n        <Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\n            <br />\n        <Form>\n        <Form.Label style={{ display: 'flex', justifyContent: 'center' }}>{name}</Form.Label>\n            <ExamMCQ passedname={name} passedid={IDToken} />\n            <ExamTF passedname={name} passedid={IDToken} />\n            <ExamComplete passedname={name} passedid={IDToken} />\n            <ExamEssay passedname={name} passedid={IDToken} />\n        </Form>\n        </Container>\n            </div>\n            );\n    }\n}\n\nexport default Exam;\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Exam.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\n\r\nclass ViewEditMCQ extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', MCQQuestions:[], MCQCounter:[], MCQChoices:[],CorrectAnswerList:[], \r\n        ILOList:[], GradeList:[], Deleted:null};\r\n        this.GetMCQ()\r\n             \r\n    }\r\n\r\n    GetMCQ()\r\n    {\r\n        var examname=this.props.passedname\r\n        var id = this.props.passedid\r\n        fetch('/GetMCQ/'+examname+'/'+id)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({MCQQuestions : data.QuestionList, MCQCounter : data.CounterList, MCQChoices : data.AnswerList,\r\n            CorrectAnswerList:data.CorrectAnswerList, ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n\r\n    DeleteMCQ(Question)\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/DeleteMCQ/'+examname+'/'+Question)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({Deleted : data.Deleted}));\r\n        window.location.reload(false);\r\n    }\r\n    \r\n\r\n    render(){\r\n        var ExamMCQQuestions = this.state.MCQQuestions;\r\n        var ExamMCQCounter = this.state.MCQCounter;\r\n        var ExamMCQChoices = this.state.MCQChoices;\r\n        ExamMCQChoices = ExamMCQChoices.toString().split(',');\r\n\r\n        var r = \"\";\r\n        var i = 0;\r\n        var MCQHead = \"\";\r\n        var answer = \"\";\r\n        var choicesNumber = 0;\r\n        if (ExamMCQQuestions.length != 0) {\r\n            MCQHead = <div><Form.Label  ><b>Choose the Correct Answer:</b></Form.Label> <br /></div>;\r\n\r\n            r = ExamMCQChoices.map((choice, index) => {\r\n                \r\n                if (choicesNumber == 0) {\r\n                    choicesNumber = ExamMCQCounter[i] - 1;\r\n                    i += 1;\r\n                    answer = \"answer\" + (i);\r\n                    var question = ExamMCQQuestions[i - 1]\r\n                    var exam = this.props.passedname\r\n                    var id = this.props.passedid\r\n                    const href1 = `/#/instructor-edit-mcq?${new URLSearchParams({ exam, question, id }).toString()}`;\r\n                    return (\r\n                        <div>\r\n                            <Form.Label  >Question {i}: {ExamMCQQuestions[i - 1]}  </Form.Label> \r\n                            <br>\r\n                            </br>\r\n\r\n                            <Form.Label inline><input type=\"radio\" name={answer} value={choice} disabled /> {choice} </Form.Label>\r\n\r\n                            <Row>\r\n                            <Form.Label style={{width:'50%',margin: '15px 15px 15px 15px'}}> ILO:{this.state.ILOList[index]}  </Form.Label>\r\n                            <Form.Label style={{width:'40%',margin: '15px 15px 15px 15px'}}> Grade:{this.state.GradeList[index]} </Form.Label>\r\n                            </Row>\r\n\r\n                            <Button style={{width:'10%',margin: '10px 10px 10px 10px',float:'right'}} size=\"sm\" variant=\"danger\" \r\n                            onClick={()=>{this.DeleteMCQ(question)}} >Delete</ Button>\r\n                            <Button style={{width:'10%',margin: '10px 10px 10px 10px',float:'right'}}href={href1} size=\"sm\" variant=\"primary\" >Edit</ Button>\r\n                            <br>\r\n                            </br>\r\n                            <br>\r\n                            </br>\r\n                        </div>\r\n                    )\r\n                }\r\n                else {\r\n                    choicesNumber -= 1;\r\n                    return (\r\n                        <div >\r\n                            <Form.Label inline><input type=\"radio\" name={answer} value={choice} disabled /> {choice} </Form.Label>\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n\r\n            });\r\n\r\n        }\r\n\r\n        return(\r\n            <div>\r\n            { MCQHead }\r\n            { r }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ViewEditMCQ;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Exam.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\n\r\nclass ViewEditEssay extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[], Deleted:null};\r\n        this.GetEssay()\r\n        \r\n          \r\n    }\r\n\r\n    GetEssay()\r\n    {\r\n        var examname=this.props.passedname\r\n        var id = this.props.passedid\r\n        fetch('/GetEssay/'+examname+'/'+id)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \r\n            ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n\r\n    DeleteEssay(Question)\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/DeleteEssay/'+examname+'/'+Question)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({Deleted : data.Deleted}));\r\n        window.location.reload(false);\r\n    }\r\n\r\n    render(){\r\n        var ExamEssay=this.state.QuestionList;\r\n        \r\n        var EssayHead=\"\";\r\n        var Essay=\"\";\r\n        if(ExamEssay.length!=0){\r\n            EssayHead = <div><Form.Label  ><b>Essay Questions:</b></Form.Label> <br /></div>;\r\n            Essay= ExamEssay.map((Question,index)=>{\r\n                var question = ExamEssay[index]\r\n                var exam = this.props.passedname\r\n                var id = this.props.passedid\r\n                //const href1 = `/#/instructor-edit-essay?${new URLSearchParams({ exam }).toString()}?${new URLSearchParams({ question }).toString()}`;\r\n                const href1 = `/#/instructor-edit-essay?${new URLSearchParams({ exam, question, id }).toString()}`;\r\n            return(\r\n                 <div>\r\n                    <Form.Label  >Question {index+1}: {ExamEssay[index]}  </Form.Label>\r\n                    \r\n                    <Form.Label><textarea placeholder=\"Enter Answer Here\" value={this.state.CorrectAnswerList[index]} disabled style={{width:\"600px\"}}></textarea></Form.Label>\r\n\r\n                    <Row>\r\n                            <Form.Label style={{width:'50%',margin: '15px 15px 15px 15px'}}> ILO:{this.state.ILOList[index]}  </Form.Label>\r\n                            <Form.Label style={{width:'40%',margin: '15px 15px 15px 15px'}}> Grade:{this.state.GradeList[index]} </Form.Label>\r\n                    </Row>\r\n\r\n                    <Button style={{width:'10%',margin: '10px 10px 10px 10px',float:'right'}} size=\"sm\" variant=\"danger\"\r\n                    onClick={()=>{this.DeleteEssay(question)}}  >Delete</ Button>\r\n                    <Button style={{width:'10%',margin: '10px 10px 10px 10px',float:'right'}} href={href1} size=\"sm\" variant=\"primary\" >Edit</ Button>\r\n                    <br>\r\n                    </br>\r\n                    <br>\r\n                    </br>\r\n                </div>\r\n                )\r\n            }\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {EssayHead}\r\n                {Essay}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewEditEssay;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Exam.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\n\r\nclass ViewEditTF extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[]};\r\n        this.GetTF()\r\n          \r\n    }\r\n\r\n    GetTF()\r\n    {\r\n        var examname=this.props.passedname\r\n        var id = this.props.passedid\r\n        fetch('/GetTF/'+examname+'/'+id)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \r\n            ILOList:data.ILOList, GradeList:data.GradeList}));\r\n        \r\n    }\r\n\r\n    DeleteTF(Question)\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/DeleteTF/'+examname+'/'+Question)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({Deleted : data.Deleted}));\r\n        window.location.reload(false);\r\n    }\r\n\r\n    render() {\r\n        var ExamTF = this.state.QuestionList;\r\n\r\n        var TFHead = \"\";\r\n        var TF = \"\";\r\n        if (ExamTF.length != 0) {\r\n            TFHead = <div><Form.Label  ><b>True or False:</b></Form.Label> <br /></div>;\r\n            TF = ExamTF.map((Question, index) => {\r\n                var question = ExamTF[index]\r\n                var exam = this.props.passedname\r\n                var id = this.props.passedid\r\n                const href1 = `/#/instructor-edit-tf?${new URLSearchParams({ exam, question, id }).toString()}`;\r\n                return (\r\n                    <div>\r\n                        <Form.Label  >Question {index + 1}: {ExamTF[index]}  </Form.Label>\r\n                        \r\n                        <Form.Label style={{float:\"left\", paddingRight:\"6px\"}}><input type=\"radio\" name={index} value=\"False\" disabled/>T </Form.Label> \r\n                        <Form.Label style={{ float: \"left\" ,paddingRight:\"6px\"  }}><input type=\"radio\" name={index} value=\"True\" disabled />F </Form.Label>\r\n                        <Row>\r\n                            <Form.Label style={{width:'50%',margin: '15px 15px 15px 15px'}}> ILO:{this.state.ILOList[index]}  </Form.Label>\r\n                            <Form.Label style={{width:'40%',margin: '15px 15px 15px 15px'}}> Grade:{this.state.GradeList[index]} </Form.Label>\r\n                        </Row>\r\n                        <Button style={{width:'10%',margin: '10px 10px 10px 10px',float:'right'}} size=\"sm\" variant=\"danger\"\r\n                        onClick={()=>{this.DeleteTF(question)}} >Delete</ Button>\r\n                        <Button style={{width:'10%',margin: '10px 10px 10px 10px',float:'right'}} href={href1} size=\"sm\" variant=\"primary\" >Edit</ Button>\r\n                        <br>\r\n                        </br>\r\n                        <br>\r\n                        </br>\r\n                    </div>\r\n                )\r\n            }\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {TFHead}\r\n                {TF}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewEditTF;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Exam.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\n\r\nclass ViewEditComplete extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: '', QuestionList:[], CorrectAnswerList:[], ILOList:[], GradeList:[], Deleted:null};\r\n        this.GetComplete()\r\n        \r\n          \r\n    }\r\n\r\n    GetComplete()\r\n    {\r\n        var examname=this.props.passedname\r\n        var id = this.props.passedid\r\n        fetch('/GetComplete/'+examname+'/'+id)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({QuestionList : data.QuestionList, CorrectAnswerList : data.CorrectAnswerList, \r\n            ILOList:data.ILOList, GradeList:data.GradeList}));\r\n    }\r\n\r\n    DeleteComplete(Question)\r\n    {\r\n        var examname=this.props.passedname\r\n        fetch('/DeleteComplete/'+examname+'/'+Question)\r\n          .then(response => response.json())\r\n          .then(data => this.setState({Deleted : data.Deleted}));\r\n        window.location.reload(false);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        var ExamComplete = this.state.QuestionList;\r\n\r\n        var CompleteHead = \"\";\r\n        var Complete = \"\";\r\n        var i=0\r\n        if (ExamComplete.length != 0) {\r\n            CompleteHead = <div><Form.Label  ><b>Complete:</b></Form.Label> <br /></div>;\r\n            Complete = ExamComplete.map((Question, index) => {\r\n                if (index%2==0)\r\n                {\r\n                    i+=1;\r\n                    var question = ExamComplete[index]\r\n                    var exam = this.props.passedname\r\n                    var id = this.props.passedid\r\n                    const href1 = `/#/instructor-edit-complete?${new URLSearchParams({ exam, question, id }).toString()}`;\r\n                    return (\r\n                        <div>\r\n                            <Form.Label  >Question {i}: </Form.Label> \r\n                            <Form.Label>  {ExamComplete[index]}   </Form.Label>\r\n                            <input type=\"text\" placeholder=\"Complete..\" value={this.state.CorrectAnswerList[index]} disabled style={{margin:\"6px\"}}/>\r\n\r\n                            \r\n                            <Row>\r\n                            <Form.Label style={{width:'50%',margin: '15px 15px 15px 15px'}}> ILO:{this.state.ILOList[index]}  </Form.Label>\r\n                            <Form.Label style={{width:'40%',margin: '15px 15px 15px 15px'}}> Grade:{this.state.GradeList[index]} </Form.Label>\r\n                            </Row>\r\n                            \r\n\r\n                            <Button style={{width:'10%',margin: '10px 10px 10px 10px',float:'right'}} size=\"sm\" variant=\"danger\" \r\n                            onClick={()=>{this.DeleteComplete(question)}} >Delete</ Button>\r\n                            <Button style={{width:'10%',margin: '10px 10px 10px 10px',float:'right'}} href={href1} size=\"sm\" variant=\"primary\">Edit</ Button>\r\n                            <br>\r\n                            </br>\r\n                            <br>\r\n                            </br>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {CompleteHead}\r\n                {Complete}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewEditComplete;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Exam.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport ViewEditMCQ from './ViewEditMCQ.js';\nimport ViewEditEssay from './ViewEditEssay.js';\nimport ViewEditTF from './ViewEditTF.js';\nimport ViewEditComplete from './ViewEditComplete.js';\n\n\n\nclass ViewEditExam extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {value: '', Exams:null, Deleted:null, id:null};\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n        const name = params.get('name');\n        const IDToken = params.get('ID');\n        this.state.id=IDToken\n          \n    }\n\n    render() {\n\n        const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n        const name = params.get('name');\n        const id = this.state.id;\n\n        return (\n            <div>\n    \n        <Container style={{width:'660px',height:'590px',backgroundColor:'white', overflow:'scroll'}}>\n            <br />\n        <Form>\n            <ViewEditMCQ passedname={name} passedid={id} />\n            <ViewEditTF passedname={name} passedid={id} />\n            <ViewEditComplete passedname={name} passedid={id} />\n            <ViewEditEssay passedname={name} passedid={id} />\n        </Form>\n        </Container>\n            </div>\n            );\n    }\n}\n\nexport default ViewEditExam;\n","import React, { Component } from 'react';\r\nimport { HashRouter as Router, Route, Link, NavLink } from 'react-router-dom';\r\nimport SignUpForm from './Pages/SignUpForm';\r\nimport SignInForm from './Pages/SignInForm';\r\nimport Homepage from './Pages/Homepage';\r\nimport InstructorHome from './Pages/InstructorHome';\r\nimport CreateExam from './Pages/CreateExam';\r\nimport FromExisting from './Pages/FromExisting';\r\nimport ViewExams from './Pages/ViewExams';\r\nimport ViewEdit from './Pages/ViewEdit';\r\nimport ViewGrade from './Pages/ViewGrade';\r\nimport EditMCQ from './Pages/EditMCQ';\r\nimport EditTF from './Pages/EditTF';\r\nimport EditComplete from './Pages/EditComplete';\r\nimport EditEssay from './Pages/EditEssay';\r\nimport TakeExam from './Pages/TakeExam';\r\nimport StudentHome from './Pages/StudentHome';\r\nimport StudentAsk from './Pages/StudentAsk';\r\nimport StudentExams from './Pages/StudentExams';\r\nimport Exam from './Pages/Exam';\r\nimport ViewEditExam from './Pages/ViewEditExam';\r\n\r\nimport './App.css';\r\nimport { Container } from '@material-ui/core';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      \r\n      <Router basename=\"/esae-frontend/\">\r\n       <Container fixed>\r\n          <Navbar fixed=\"top\" bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand href=\"#/home\">E.S.A.E</Navbar.Brand>\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link href=\"#/home\">Home</Nav.Link>\r\n\r\n        </Nav>\r\n      </Navbar>\r\n       </Container>\r\n              <Route exact path=\"/home\" component={Homepage}>\r\n              </Route>\r\n              <Route exact path=\"/\" component={Homepage}>\r\n              </Route>\r\n              <Route path=\"/sign-up\" component={SignUpForm}>\r\n              </Route>\r\n              <Route path=\"/sign-in\" component={SignInForm}>\r\n              </Route>\r\n              <Route path=\"/instructor-home\" component={InstructorHome}>\r\n              </Route>\r\n              <Route path=\"/instructor-create\" component={CreateExam}>\r\n              </Route>\r\n\t\t\t        <Route path=\"/instructor-from-exist\" component={FromExisting}>\r\n              </Route>\r\n              <Route path=\"/instructor-view-all\" component={ViewExams}>\r\n              </Route>\r\n\t\t\t        <Route path=\"/instructor-view-edit\" component={ViewEdit}>\r\n              </Route>\r\n              <Route path=\"/instructor-view-grade\" component={ ViewGrade}>\r\n              </Route>\r\n              <Route path=\"/instructor-view-edit-exam\" component={ViewEditExam}>\r\n              </Route>\r\n              <Route path=\"/instructor-exam\" component={Exam}>\r\n              </Route>\r\n\t\t\t        <Route path=\"/instructor-edit-mcq\" component={EditMCQ}>\r\n              </Route>\r\n              <Route path=\"/instructor-edit-tf\" component={EditTF}>\r\n              </Route>\r\n              <Route path=\"/instructor-edit-complete\" component={EditComplete}>\r\n              </Route>\r\n              <Route path=\"/instructor-edit-essay\" component={EditEssay}>\r\n              </Route>\r\n              <Route path=\"/student-home\" component={StudentHome}>\r\n              </Route>\r\n              <Route path=\"/student-ask\" component={StudentAsk}>\r\n              </Route>\r\n              <Route path=\"/student-view-all\" component={StudentExams}>\r\n              </Route>\r\n              <Route path=\"/student-take-exam\" component={TakeExam}>\r\n              </Route>\r\n    \r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}